{"version":3,"sources":["webpack:///./src/app/services/administrationService/TechnologieService.ts","webpack:///./src/app/views/dashboard/dashboard-routing.module.ts","webpack:///./src/app/views/dashboard/dashboard.component.html","webpack:///./src/app/views/dashboard/dashboard.component.ts","webpack:///./src/app/views/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"views-dashboard-dashboard-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BACK_END_URL } from '../../helper/application.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechnologieService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  getTechnologiesByLibelle () {\r\n    return this.http.get<any>(BACK_END_URL+'/technologie/Libelle');\r\n  }\r\n  findAllTechnologies(): Observable<any> {\r\n    return this.http.get(BACK_END_URL + \"/technologie\");\r\n  }\r\n  save(technologie): Observable<any> {\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post(BACK_END_URL + \"/technologie/add\", technologie, httpOptions);\r\n  }\r\n  update(technologie): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.http.post(BACK_END_URL + \"/technologie/update\" , technologie, httpOptions);\r\n}\r\n  \r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes,\r\n     RouterModule } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    data: {\r\n      title: 'Dashboard'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"card\\\" style=\\\"height: 95% !important;\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <label style=\\\"font-weight:bold;color:#546E7A;\\\">CV en attente de traitement</label>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\" >\\r\\n              <canvas baseChart class=\\\"chart\\\"\\r\\n              [data]=\\\"pieChartData\\\"\\r\\n              [labels]=\\\"pieChartLabels\\\"\\r\\n              [colors]=\\\"ChartColors\\\"\\r\\n              [chartType]=\\\"pieChartType\\\"></canvas>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <label style=\\\"font-weight:bold;color:#546E7A;\\\">Nombre de CV à relancer par chargé de recrutement</label>\\r\\n            </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <table class=\\\"table table-bordered table-striped\\\" >\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Chargé recrutement</th>\\r\\n                  <th>Nombre CV à relancer</th>\\r\\n                  <th>Actions</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let charge of ReportingChargeRelance| paginate: { itemsPerPage:5, currentPage: p }\\\">\\r\\n                  <td>{{charge.nomCharge}}</td>\\r\\n                  <td>{{charge.nombreCvRelance}}</td>\\r\\n                  <td style=\\\"width: 10%\\\">     \\r\\n                    <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/ficheCVRelance', charge.idUser]\\\">\\r\\n                          <i class=\\\"cui-magnifying-glass icons font-xl d-block mt-2\\\"></i>\\r\\n                        </a>         \\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"panel-footer panel-default pager\\\">\\r\\n              <pagination-controls (pageChange)=\\\"p =$event\\\"></pagination-controls>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <label style=\\\"font-weight:bold;color:#546E7A;\\\">Sessions de formation</label>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\" >\\r\\n            <table class=\\\"table table-bordered table-striped table-sm \\\" style=\\\"font-size: 0.6rem !important;\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Nom de la formation</th>\\r\\n                  <th>Lieu de la formation</th>\\r\\n                  <th>Type de formation</th>\\r\\n                  <th>Date Démarrage</th>\\r\\n                  <th>Candidat validé par C.R.</th>\\r\\n                  <th>Candidat ayant accepté la formation</th>\\r\\n                  <th>Nombre de place</th>\\r\\n                  <th>Taux d'acceptation</th>\\r\\n                  <th>Taux de remplissage</th>\\r\\n                  <th>Actions</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody >\\r\\n                <tr *ngFor=\\\"let session of Sessionreporting| paginate: { itemsPerPage:5, currentPage: p }\\\">\\r\\n                  <td >{{session.nom_Formation}}</td>\\r\\n                  <td>{{session.lieu_Formation}}</td>\\r\\n                  <td>{{session.type_Formation}}</td>\\r\\n                  <td>{{session.date_demarrage}}</td>\\r\\n                  <td>{{session.candidat_affectation}}</td>\\r\\n                  <td>{{session.candidat_acceptation}}</td>\\r\\n                  <td>{{session.nombre_place}}</td>\\r\\n                  <td>{{session.taux_acceptation}}</td>\\r\\n                  <td>{{session.taux_remplissage}}</td>\\r\\n                  <td style=\\\"width: 10%\\\">     \\r\\n                    <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/ficheCandidatSession', session.idSession]\\\">\\r\\n                          <i class=\\\"cui-magnifying-glass icons font-xl d-block mt-2\\\"></i>\\r\\n                        </a>         \\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <div class=\\\"panel-footer panel-default pager\\\">\\r\\n              <pagination-controls (pageChange)=\\\"p =$event\\\"></pagination-controls>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n              <label style=\\\"font-weight:bold;color:#546E7A;\\\">Nombre de CV intégrés au niveau de l'application\\r\\n                </label>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n              <table class=\\\"table table-bordered table-striped\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Sourceur</th>\\r\\n                      <th>Mainframe</th>\\r\\n                      <th>Mainframe++</th>\\r\\n                      <th>NTIC</th>\\r\\n                      <th>Autres technologies</th>\\r\\n                      <th>TOTAL</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let technologie of Sourceurtechnologies| paginate: { itemsPerPage:3, currentPage: p }\\\">\\r\\n                      <td>{{technologie.nom}}</td>\\r\\n                      <td>{{technologie.nbrCvMainframe}}</td>\\r\\n                      <td>{{technologie.nbrCvMainframePlus}}</td>\\r\\n                      <td>{{technologie.nbrCvNtic}}</td>\\r\\n                      <td>{{technologie.autreTechnologie}}</td>\\r\\n                      <td>{{technologie.total}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"panel-footer panel-default pager\\\">\\r\\n                    <pagination-controls (pageChange)=\\\"p =$event\\\"></pagination-controls>\\r\\n                  </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { getStyle, hexToRgba } from '@coreui/coreui/dist/js/coreui-utilities';\r\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\r\nimport { ChargeRelance } from '../../models/ChargeRelance';\r\nimport { SessionReporting } from '../../models/SessionReporting';\r\nimport { SourceurTechnologies } from '../../models/SourceurTechnologies';\r\nimport { AccueilService } from '../../services/accueilService/accueil.service';\r\nimport { TechnologieService } from '../../services/administrationService/TechnologieService';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  templateUrl: 'dashboard.component.html'\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  ReportingChargeRelance= [];\r\n  Sessionreporting= [];\r\n  Sourceurtechnologies= [];\r\n  pieChartLabels: string[]=[];\r\n  pieChartData: number[] = [];\r\n  pieChartType = 'pie';\r\n  ChartColors : any[]=[\r\n    {\r\n      backgroundColor:[\"#FF7360\",\"#6FC8CE\",\"gray\",\"#FFFCC4\",\"#B9E8E0\",\"#FFABF6\",\"#01FBBA\"]\r\n    }\r\n   ];\r\n  constructor(\r\n    private accueilService: AccueilService,\r\n    private technologieService: TechnologieService\r\n            ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadReportingChargeRelance();\r\n    this.loadSessionReporting();\r\n    this.loadSourceurtechnologies();\r\n    this.getChart();\r\n  }\r\n\r\n  private loadReportingChargeRelance() {\r\n    this.accueilService.getNombreCVRrelancer().subscribe(result => { this.ReportingChargeRelance = result });\r\n  }\r\n  private loadSessionReporting() {\r\n    this.accueilService.getSessionreporting().subscribe(result => { this.Sessionreporting = result });\r\n  }\r\n  private loadSourceurtechnologies() {\r\n    this.accueilService.getSourceurTechnologies().subscribe(result => { this.Sourceurtechnologies = result });\r\n  }\r\n\r\n  private getChart(){\r\n    this.accueilService.getChart().subscribe(result => { \r\n      this.pieChartData = Object.values(result);\r\n      for(var i=0;i<Object.keys(result).length;i++){\r\n        this.pieChartLabels[i]=Object.keys(result)[i];\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport {CommonModule} from '@angular/common';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgxPaginationModule,\r\n    FormsModule,\r\n    DashboardRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot()\r\n  ],\r\n  declarations: [ DashboardComponent ]\r\n})\r\nexport class DashboardModule { }\r\n"],"sourceRoot":""}