{"version":3,"sources":["webpack:///./src/app/services/excel.service.ts","webpack:///./src/app/views/candidats/candidats-routing.module.ts","webpack:///./src/app/views/candidats/candidats.module.ts","webpack:///./src/app/views/candidats/candidats/candidats.component.css","webpack:///./src/app/views/candidats/candidats/candidats.component.html","webpack:///./src/app/views/candidats/candidats/candidats.component.ts","webpack:///./src/app/views/candidats/fiche-candidat/fiche-candidat.component.html","webpack:///./src/app/views/candidats/fiche-candidat/fiche-candidat.component.scss","webpack:///./src/app/views/candidats/fiche-candidat/fiche-candidat.component.ts","webpack:///./src/app/views/candidats/listeCandidatArelancer/listeCandidatArelancer.component.css","webpack:///./src/app/views/candidats/listeCandidatArelancer/listeCandidatArelancer.component.html","webpack:///./src/app/views/candidats/listeCandidatArelancer/listeCandidatArelancer.component.ts","webpack:///./src/app/views/candidats/listeNouveauxCandidats/listeNouveauxCandidats.component.css","webpack:///./src/app/views/candidats/listeNouveauxCandidats/listeNouveauxCandidats.component.html","webpack:///./src/app/views/candidats/listeNouveauxCandidats/listeNouveauxCandidats.component.ts","webpack:///./src/app/views/candidats/listeTousCandidats/listeTousCandidats.component.css","webpack:///./src/app/views/candidats/listeTousCandidats/listeTousCandidats.component.html","webpack:///./src/app/views/candidats/listeTousCandidats/listeTousCandidats.component.ts"],"names":[],"mappings":"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","file":"views-candidats-candidats-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { DATE_FORMAT_MOMENT } from '../helper/application.constant';\r\nimport * as _moment from 'moment';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class ExcelService {\r\n\r\n  constructor() { \r\n\r\n\r\n    \r\n  }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string,columns:any[]): void {\r\n\r\n\r\n\r\n    var cleanData = [];\r\n    var cleanCol =  {}\r\n    var col=[]\r\n    json.forEach(element => {\r\n      var cleanItem = {}\r\n      columns.forEach(col => {\r\n       \r\n        \r\n        if (element[col.data] != null) {\r\n          if (col.dateFormat != undefined)\r\n            cleanItem[col.title] = _moment(element[col.data]).format(DATE_FORMAT_MOMENT);\r\n          else if (col.mask != undefined && element[col.data].indexOf(\"-\") == -1) {\r\n            cleanItem[col.title] = element[col.data].replace(/^(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2}).*/, \"$1-$2-$3-$4-$5\");\r\n          }\r\n          else if(col.rendered) {\r\n            if(col.html==false)\r\n            cleanItem[col.title]=col.rendered(element)\r\n          }\r\n          else cleanItem[col.title] = element[col.data];\r\n\r\n          if(cleanCol[col.data]==null) cleanCol[col.data]=col.title.length;\r\n          if(cleanItem[col.title].length>cleanCol[col.data])\r\n           cleanCol[col.data]=cleanItem[col.title].length\r\n        }\r\n      })\r\n      cleanData.push(cleanItem);\r\n    });\r\n    Object.keys(cleanCol).forEach(element => {\r\n      col.push({wch:cleanCol[element]+1})\r\n    });\r\n\r\n\r\n\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(cleanData);\r\n    worksheet[\"!cols\"] =col\r\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array', cellDates: true, cellStyles: true });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport {\r\n  Routes,\r\n  RouterModule\r\n} from '@angular/router';\r\nimport { CandidatsComponent } from './candidats/candidats.component';\r\nimport { CandidatDetailResolve } from './fiche-candidat/CandidatDetailResolve';\r\nimport { FicheCandidatComponent } from './fiche-candidat/fiche-candidat.component';\r\nimport { listeNouveauxCandidatsComponent } from './listeNouveauxCandidats/listeNouveauxCandidats.component';\r\nimport { listeTousCandidatsComponent } from './listeTousCandidats/listeTousCandidats.component';\r\nimport { listeCandidatArelancerComponent } from './listeCandidatArelancer/listeCandidatArelancer.component';\r\nimport { CanActivateService } from '../../helper/can-activate.service';\r\nimport { NAVIGATION_RULES } from '../../helper/application.constant';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: NAVIGATION_RULES.candidats.newCancidat,\r\n    component: CandidatsComponent,\r\n    canActivate: [CanActivateService],\r\n    data: {\r\n      title: 'Candidats'\r\n    }\r\n  },\r\n  {\r\n    path: 'details/:id',\r\n    component: FicheCandidatComponent,\r\n    canActivate:[CanActivateService],\r\n    data: {\r\n      title: 'Candidats / '\r\n    },\r\n    resolve: {\r\n      candidat: CandidatDetailResolve\r\n    },\r\n  },\r\n  {\r\n    path: NAVIGATION_RULES.candidats.listeNouveauxCandidats,\r\n    component: listeNouveauxCandidatsComponent,\r\n    canActivate: [CanActivateService],\r\n    data: {\r\n      title: 'listeNouveauxCandidats'\r\n    }\r\n  },\r\n  {\r\n    path:NAVIGATION_RULES.candidats.listeTousCandidats,\r\n    canActivate: [CanActivateService],\r\n    component: listeTousCandidatsComponent,\r\n    data: {\r\n      title: 'listeTousCandidats'\r\n    }\r\n  },\r\n  {\r\n    path:NAVIGATION_RULES.candidats.listeCandidatArelancer,\r\n    canActivate: [CanActivateService],\r\n    component: listeCandidatArelancerComponent,\r\n    data: {\r\n      title: 'listeCandidatArelancer'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CandidatsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { CandidatsComponent } from './candidats/candidats.component';\r\nimport { CandidatsRoutingModule } from './candidats-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DxTreeViewModule } from 'devextreme-angular';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { FicheCandidatComponent } from './fiche-candidat/fiche-candidat.component'\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\nimport { listeNouveauxCandidatsComponent } from './listeNouveauxCandidats/listeNouveauxCandidats.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { listeTousCandidatsComponent } from './listeTousCandidats/listeTousCandidats.component';\r\nimport { listeCandidatArelancerComponent } from './listeCandidatArelancer/listeCandidatArelancer.component';\r\nimport { CommonCustomModule } from '../../common/common.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CandidatsRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    DxTreeViewModule,\r\n    CommonModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    NgxMaskModule.forRoot(),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    ModalModule.forRoot(),\r\n    AlertModule.forRoot(),\r\n    NgxPaginationModule,\r\n    TextMaskModule,\r\n    NgxLoadingModule.forRoot({}),\r\n    CommonCustomModule\r\n  ],\r\n  declarations: [\r\n    listeCandidatArelancerComponent,\r\n    listeTousCandidatsComponent,\r\n    listeNouveauxCandidatsComponent,\r\n    CandidatsComponent,\r\n    FicheCandidatComponent,\r\n  ]\r\n})\r\nexport class CandidatsModule { }\r\n","module.exports = \".competences {\\r\\n    border: 2px solid #C4C4C4;\\r\\n    border-radius: 12px;\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n  \\r\\n\\r\\n  \\r\\n  \"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <label style=\\\"font-weight:bold;color:#546E7A;\\\">Nouveau Candidat\\r\\n            </label>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-3 col-md-3\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"col-6 col-sm-4 col-md-2 col-xl mb-3 mb-xl-0\\\">\\r\\n                        <input (change)=\\\"uploadFiles($event)\\\" style=\\\"display: none;\\\" id=\\\"fileUpload\\\" type=\\\"file\\\"\\r\\n                            webkitdirectory mozdirectory />\\r\\n                        <button onclick=\\\"document.getElementById('fileUpload').click();\\\" style=\\\"width: 110px\\\" type=\\\"button\\\"\\r\\n                            class=\\\"btn btn-block btn-outline-primary\\\">Select. fichiers</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <dx-tree-view id=\\\"simple-treeview\\\" [items]=\\\"folders\\\" dataStructure=\\\"plain\\\" parentIdExpr=\\\"categoryId\\\"\\r\\n                        keyExpr=\\\"ID\\\" displayExpr=\\\"name\\\" (onItemClick)=\\\"selectItem($event)\\\" (onItemExpanded)=\\\"onItemExpanded($event)\\\"\\r\\n                        (onItemCollapsed)=\\\"onItemCollapsed($event)\\\"></dx-tree-view>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <button [disabled]=\\\"currentFile==undefined\\\" (click)=\\\"afficherPdf()\\\" style=\\\"width: 100px\\\" type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-block btn-outline-primary\\\">Afficher</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n        <div class=\\\"col-sm-9 col-md-9\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"civilite\\\">Civilité</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <ng-select [items]=\\\"civilites\\\"  required style=\\\"font-weight: bold;\\\"\\r\\n                                        #civilite=\\\"ngModel\\\" name=\\\"civilite\\\" [(ngModel)]=\\\"candidate.civilite\\\" id=\\\"civilite\\\">\\r\\n\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"nom\\\">Nom</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nom\\\" style=\\\"font-weight: bold;color: black;\\\" [(ngModel)]=\\\"candidate.nom\\\" id=\\\"nom\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\">Prenom</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"candidate.prenom\\\"\\r\\n                                        id=\\\"prenom\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"email\\\">Email</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"email\\\" [(ngModel)]=\\\"candidate.email\\\"\\r\\n                                        id=\\\"email\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"telephone\\\">Téléphone</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" [textMask]=\\\"{mask: mask}\\\" name=\\\"telephone\\\"\\r\\n                                        [(ngModel)]=\\\"candidate.numeroTel\\\" id=\\\"telephone\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"origineCV\\\">Origine CV</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;\\\" bindValue=\\\"id\\\" bindLabel=\\\"libelle\\\" [items]=\\\"origines\\\" [(ngModel)]=\\\"candidate.origine.id\\\"\\r\\n                                        name=\\\"origineCV\\\" [disabled]=\\\"candidateFound===false\\\" id=\\\"origineCV\\\">\\r\\n                                    </ng-select>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"profil\\\">Profil </label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;\\\" bindValue=\\\"id\\\" bindLabel=\\\"libelle\\\" [items]=\\\"technologies\\\" [(ngModel)]=\\\"candidate.technologie.id\\\"\\r\\n                                        name=\\\"technologie\\\" [disabled]=\\\"candidateFound===false\\\" id=\\\"profil\\\">\\r\\n                                    </ng-select>\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"codePostal\\\">Code postal</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <ng-select aria-required=\\\"\\\" style=\\\"font-weight: bold;\\\" [disabled]=\\\"candidateFound==false\\\" id=\\\"codePostal\\\"\\r\\n                                        [items]=\\\"codePostals\\\" (search)=\\\"codePostaleOnSearch($event)\\\" [ngModel]=\\\"candidate.codePostal\\\"\\r\\n                                        (ngModelChange)=\\\"candidate.codePostal = $event\\\" name=\\\"codePostal\\\">\\r\\n                                        <ng-option *ngFor=\\\"let codeP of codePostals\\\" [value]=\\\"codeP\\\">{{codeP.code}}\\r\\n                                            {{codeP.ville}}</ng-option>\\r\\n\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label>Region</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <p class=\\\"form-control-static\\\" style=\\\"font-weight: bold;\\\">{{candidate?.codePostal?.region}}</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label>Ville</label>\\r\\n                                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                                    <p class=\\\"form-control-static\\\" style=\\\"font-weight: bold;\\\">{{candidate?.codePostal?.ville}}</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row competences\\\">\\r\\n\\r\\n                            <div class=\\\"col-md-2 col-form-label\\\" *ngFor=\\\"let compt of competences; let i = index\\\">\\r\\n                                    <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                                            <label class=\\\"label--checkbox\\\">\\r\\n                                                <input   class=\\\"checkbox\\\" type=\\\"checkbox\\\" [name]=\\\"'cmp'+i\\\" [(ngModel)]=\\\"competences[i].selected\\\"\\r\\n                                                    id=\\\"inline-checkbox1\\\" [value]=\\\"compt.id\\\" [disabled]=\\\"candidateFound===false\\\">\\r\\n                                            </label>\\r\\n                                            <label >{{compt.libelle}}</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-10\\\"></div>\\r\\n                            <div>\\r\\n                            <button (click)=\\\"recherchecandidate()\\\"  type=\\\"button\\\" class=\\\"btn btn-block btn-primary \\\">Rechercher</button>\\r\\n                        </div></div>\\r\\n                        <div *ngIf=\\\"pdfSrc!=undefined\\\">\\r\\n                            <object style=\\\"margin-top: 20px\\\" [data]=\\\"pdfSrc\\\" height=\\\"450px\\\" width=\\\"100%\\\">\\r\\n                                <param name=\\\"view\\\" value=\\\"fitH\\\" />\\r\\n\\r\\n                            </object>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-footer\\\">\\r\\n\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-md-8 col-form-label\\\">\\r\\n                                <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                                    <label class=\\\"label--checkbox\\\">\\r\\n                                            <input class=\\\"checkbox\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"candidate.cvAnonyme\\\"\\r\\n                                            name=\\\"cvAnonyme\\\" value=\\\"true\\\" id=\\\"cvanonyme \\\">\\r\\n                                        </label>\\r\\n                                    <label >\\r\\n                                        CV anonyme\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div >\\r\\n                                <button type=\\\"button\\\" (click)=\\\"annuler()\\\" class=\\\"btn btn-block btn-danger\\\">Annuler</button>\\r\\n                            </div>\\r\\n\\r\\n                            <div style=\\\"padding-left: 10px\\\">\\r\\n                                <button (click)=\\\"submitAndRedirect()\\\" [disabled]=\\\"pdfSrc==undefined\\\" type=\\\"button\\\"\\r\\n                                    class=\\\"btn btn-block btn-success\\\">Planifier\\r\\n                                    Rdv</button>\\r\\n                            </div>\\r\\n                            <div style=\\\"padding-left: 10px\\\">\\r\\n                                <button  [disabled]=\\\"pdfSrc==undefined\\\" type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Enregistrer</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.co2-->\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"candidatsFound.length>0\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <i class=\\\"fa fa-align-justify\\\"></i> Candidats Trouvés\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <table class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Nom</th>\\r\\n                                <th>Prénom</th>\\r\\n                                <th>N° Téléphone</th>\\r\\n                                <th>Email</th>\\r\\n                                <th>Date Inscription</th>\\r\\n                                <th>Statut</th>\\r\\n                                <th>Type de profil</th>\\r\\n                                <th>Sourceur</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let candidat of candidatsFound\\\">\\r\\n                                <td>{{candidat.nom}}</td>\\r\\n                                <td>{{candidat.prenom}}</td>\\r\\n                                <td>{{candidat.numeroTel}}</td>\\r\\n                                <td>{{candidat.email}}</td>\\r\\n                                <td>{{candidat.dateInscription| date :'dd/MM/yyyy'}}</td>\\r\\n                                <td>{{candidat.statut}}</td>\\r\\n                                <td>{{candidat.technologie}}</td>\\r\\n                                <td>{{candidat.nomSourceur }} {{candidat.prenomSourceur}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n</div>\\r\\n<ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px',fullScreenBackdrop:true }\\\"></ngx-loading>\\r\\n\"","import { Component, OnInit, OnDestroy, ViewChild } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { Candidate } from \"../../../models/Candidate\";\r\nimport { CandidatsService } from \"../../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { OriginesService } from \"../../../services/administrationService/origines.service\";\r\nimport { CompetencesService } from \"../../../services/administrationService/competences.service\";\r\nimport { TechnologieService } from \"../../../services/administrationService/TechnologieService\";\r\nimport { CodePostalService } from \"../../../services/administrationService/code-postal.service\";\r\nimport { CodePostal } from \"../../../models/CodePostal\";\r\nimport { Technologie } from \"../../../models/Technologie\";\r\nimport { Origine } from \"../../../models/Origine\";\r\nimport { Competence } from \"../../../models/Competence\";\r\nimport { UtilisateurService } from \"../../../services/utilisateur.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Status } from \"../../../models/enum/Status\";\r\nimport { HelperService } from \"../../../helper/helper.service\";\r\nimport { NAVIGATION_RULES, PHONE_MASK } from \"../../../helper/application.constant\";\r\nimport { TablesComponent } from \"../../base/tables.component\";\r\n\r\n@Component({\r\n  templateUrl: 'candidats.component.html',\r\n  styleUrls: [\"candidats.component.css\"]\r\n})\r\nexport class CandidatsComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  ngOnDestroy(): void {\r\n\r\n    this.candidatsService.folders = this.folders;\r\n    //this.candidatsService.destroyTempoFolder(this.utilisateurService.getConnetedUserInfo().login).subscribe();\r\n  }\r\n\r\n\r\n  loading=false;\r\n  civilites= [\"M\",\"Mme\"];\r\n  candidate: Candidate;\r\n  codePostals: Array<CodePostal> = [];\r\n  technologies: Array<Technologie> = []\r\n  origines: Array<Origine> = []\r\n  competences: Array<Competence> = []\r\n  candidatsFound: Array<Candidate> = []\r\n  candidateFound: boolean;\r\n  pdfSrc;\r\n  folders;\r\n  currentFile: any;\r\n  listNomCvs = []\r\n  allFiles = []\r\n  mask: any[] = PHONE_MASK;\r\n\r\n\r\n  constructor(private router:Router,private utilisateurService: UtilisateurService, private codePostalService: CodePostalService, private originesService: OriginesService, private technologiesService: TechnologieService,\r\n    private sanitizer: DomSanitizer, private candidatsService: CandidatsService,private helperService:HelperService,\r\n    private notifierService: NotifierService, private competencesService: CompetencesService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n    this.originesService.findAllOrigines().subscribe(data => {\r\n      this.origines = data;\r\n    })\r\n    this.competencesService.findAllCompetences().subscribe(data => {\r\n      this.competences = data;\r\n    })\r\n    this.candidatsService.getListNomCvs().subscribe(data => {\r\n      this.listNomCvs = data;\r\n      this.folders = this.folders.filter(element => {\r\n        return this.listNomCvs.indexOf(element.name) == -1\r\n      });\r\n    })\r\n\r\n   this.candidate= new Candidate();\r\n   this.candidateFound=false\r\n    this.candidate.creePar.id = this.utilisateurService.getConnetedUserInfo().id\r\n    this.folders = this.candidatsService.folders;\r\n  \r\n    this.currentFile = {};\r\n    this.pdfSrc = null\r\n  }\r\n\r\n\r\n  //#region Tree Setting\r\n  selectItem(e) {\r\n    if (e.itemData.type == \"file\")\r\n      this.currentFile = e.itemData;\r\n  }\r\n  uploadFiles(event) {\r\n    if (event.target.files && event.target.files.length) {\r\n      this.allFiles = event.target.files\r\n      this.createFilesStructure(event.target.files)\r\n    }\r\n  }\r\n  createFilesStructure(files) {\r\n    var structure = []\r\n    var filteredfiles = []\r\n    Array.from(files).forEach((element: any) => {\r\n      if ((element.type == \"application/pdf\" || element.type == \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n        || element.type == \"application/msword\"\r\n        || element.type == \"application/octet-stream\") && this.listNomCvs.indexOf(element.name) == -1)\r\n\r\n        filteredfiles.push(element)\r\n    });\r\n\r\n    structure = this.generateParentFolder(filteredfiles);\r\n\r\n    Array.from(filteredfiles).forEach((element: any) => {\r\n      let categoryId = element.webkitRelativePath.split('/')\r\n      categoryId.pop()\r\n      structure.push({\r\n        name: element.name,\r\n        file: element,\r\n        ID: element.webkitRelativePath.split('/').join('_'),\r\n        categoryId: categoryId.join('_'),\r\n        expanded: false,\r\n        type: 'file',\r\n        icon: \"assets/img/tree/pdf-file.png\"\r\n      })\r\n    });\r\n    this.folders = structure;\r\n  }\r\n  generateParentFolder(files) {\r\n    var structure = []\r\n    Array.from(files).forEach((element: any) => {\r\n      element.webkitRelativePath.replace(\"_\", \"UnderReplaced\")\r\n      let ID = element.webkitRelativePath.split('/')\r\n      while (ID.length > 1) {\r\n        ID.pop()\r\n        var node = {\r\n          name: ID[ID.length - 1].replace(\"UnderReplaced\", \"_\"),\r\n          ID: ID.join('_'),\r\n          file: element,\r\n          expanded: false,\r\n          type: 'folder',\r\n          icon: \"assets/img/tree/iconfinder_folder.png\"\r\n        }\r\n        if (ID.length > 1) {\r\n          let tempId = []\r\n          ID.forEach(element => {\r\n            tempId.push(element)\r\n          });\r\n          tempId.pop()\r\n          node['categoryId'] = tempId.join('_')\r\n        }\r\n        structure.push(node)\r\n      }\r\n    });\r\n\r\n\r\n    var tempAray = []\r\n    structure.forEach(element => {\r\n      var inTable = false;\r\n      tempAray.forEach(element1 => {\r\n        if (element.ID == element1.ID)\r\n          inTable = true;\r\n      });\r\n      if (!inTable) tempAray.push(element)\r\n    });\r\n    return tempAray;\r\n\r\n  }\r\n  onItemExpanded(e) {\r\n    e.node.itemData.icon = \"assets/img/tree/Icons_open.png\"\r\n  }\r\n  onItemCollapsed(e) {\r\n    e.node.itemData.icon = \"assets/img/tree/iconfinder_folder.png\"\r\n  }\r\n  //#endregion\r\n\r\n  afficherPdf() {\r\n    this.candidate.nomCV = this.currentFile.name\r\n    var reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      var fileBase64Value = reader.result + ''\r\n      var file = {\r\n        filename: this.currentFile.name,\r\n        filetype: this.currentFile.file.type,\r\n        value: fileBase64Value.split(',')[1],\r\n        loginUser: this.utilisateurService.getConnetedUserInfo().login\r\n      }\r\n      this.candidatsService.uploadWordFile(file).subscribe(data => {\r\n        this.pdfSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + data.value)\r\n      })\r\n    }\r\n    reader.readAsDataURL(this.currentFile.file);\r\n  }\r\n\r\n  recherchecandidate() {\r\n    this.candidateFound = true;\r\n    if (this.candidate.nom == \"\" || this.candidate.prenom == \"\" || this.candidate.nom == undefined || this.candidate.prenom == undefined) {\r\n      this.notifierService.notify(\"info\", \"Il faut remplir au moins Nom et Prénom\")\r\n    } else {\r\n      var candidateTemp = {\r\n        nom: this.candidate.nom,\r\n        prenom: this.candidate.prenom,\r\n        email: this.candidate.email,\r\n        numeroTel: this.candidate.numeroTel\r\n      }\r\n      this.candidatsService.rechercheAjoutNouveauxcandidats(candidateTemp,0,0).subscribe((data) => {\r\n        this.candidatsFound = data.results        \r\n        this.notifierService.notify(\"info\", \"Nombre Candidat : \" + data.total)\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.codePostalService.completeCodePostal(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.codePostals = [element,...  this.codePostals]\r\n        });\r\n      })\r\n    else this.codePostals = []\r\n  }\r\n\r\n  async  onSubmit() {\r\n    let fn =(e)=>{\r\n    this.annuler()\r\n    }\r\n    await  this.saveCandidat(fn)\r\n  }\r\n\r\n  annuler(){\r\n    this.router.navigateByUrl(NAVIGATION_RULES.dashboard.url, {skipLocationChange: true}).then(()=>\r\n    this.router.navigate([NAVIGATION_RULES.candidats.url+'/'+NAVIGATION_RULES.candidats.newCancidat]));\r\n  }\r\n\r\n  async  submitAndRedirect(){\r\n    let fn =(id)=>{\r\n      this.router.navigate([NAVIGATION_RULES.candidats.url+'/'+NAVIGATION_RULES.candidats.details.replace(':id',id)]);\r\n    }\r\n    await this.saveCandidat(fn)\r\n  }\r\n\r\n  async saveCandidat(callback){\r\n    const validEmailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    this.loading=true;\r\n    var error = false;\r\n    //#region get Competences\r\n    this.helperService.generateComp(this.candidate,this.competences);\r\n\r\n    //#endregion\r\n\r\n    //#region  allert Message\r\n    if (this.candidate.nom == \"\" || this.candidate.nom == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un nom valide\")\r\n      error = true;\r\n    }\r\n    if (this.candidate.prenom == \"\" || this.candidate.prenom == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un prenom valide\")\r\n      error  = true;\r\n    }\r\n    if (!this.candidate.cvAnonyme) {\r\n      if (this.candidate.email == \"\" || this.candidate.email == undefined|| !validEmailRegEx.test(this.candidate.email)) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email valide\")\r\n        error  = true;\r\n      }\r\n      else {\r\n        let cand\r\n        await this.candidatsService.getCandidatByEmail(this.candidate.email).toPromise().then(data => {\r\n           cand = data });\r\n        if (cand != null) {\r\n          this.notifierService.notify(\"error\", \"Email existe déjà  !\")\r\n          error  = true;\r\n        }\r\n      }\r\n      if (this.candidate.numeroTel == \"\" || this.candidate.numeroTel == undefined) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un numero Tel valide\")\r\n        error  = true;\r\n      }\r\n      else {\r\n        let cand\r\n        await this.candidatsService.getCandidatByNumTel(this.candidate.numeroTel).toPromise().then(data => { cand = data });\r\n        if (cand != null) {\r\n          this.notifierService.notify(\"error\", \"Numéro de téléphone existe déjà  !\")\r\n          error  = true;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if ((this.candidate.email == \"\" || this.candidate.email == undefined) && (this.candidate.numeroTel == \"\" || this.candidate.numeroTel == undefined)) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email  ou numero Tel  valide\")\r\n        error  = true;\r\n      } else {\r\n        if (this.candidate.email != \"\" && this.candidate.email != undefined) {\r\n          let cand\r\n          await this.candidatsService.getCandidatByEmail(this.candidate.email).toPromise().then(data => { cand = data; });\r\n          if (cand != null) {\r\n            this.notifierService.notify(\"error\", \"Email existe déjà  !\")\r\n            error  = true;\r\n          }\r\n        }\r\n        if (this.candidate.numeroTel != \"\" && this.candidate.numeroTel != undefined) {\r\n          let cand;\r\n          await this.candidatsService.getCandidatByNumTel(this.candidate.numeroTel).toPromise().then(data => { cand = data });;\r\n          if (cand != null) {\r\n            this.notifierService.notify(\"error\", \"Numéro de téléphone existe déjà  !\")\r\n            error  = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.candidate.technologie.id == undefined) {\r\n      this.notifierService.notify(\"error\", \" Choisir un Profil\")\r\n      error  = true;\r\n    }\r\n    if (this.candidate.origine.id == undefined) {\r\n      this.notifierService.notify(\"error\", \" Choisir un Origine CV\")\r\n      error  = true;\r\n    }\r\n    if (this.candidate.codePostal == null || this.candidate.codePostal == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un Code Postal valide\")\r\n      error  = true;\r\n    }\r\n    //#endregion\r\n\r\n    if (!error ) {\r\n      this.candidate.dateInscription = new Date();\r\n      this.candidate.statut = Status[Status.VIDE];\r\n      this.candidate.entretien=null\r\n      this.candidate.motif=null\r\n      this.candidatsService.create(this.candidate, this.currentFile.file.type).toPromise().then((data: Candidate) => {\r\n        if (data != null) {\r\n          this.notifierService.notify(\"success\", \"Candidat ajouté avec succés !\")\r\n          this.loading=false;\r\n          callback(data.id) \r\n        } else {\r\n          this.notifierService.notify(\"error\", \"Erreur l'ors l'ajour\")\r\n        }\r\n      }, error => {\r\n        this.notifierService.notify(\"error\", \"Erreur l'ors l'ajour\")\r\n      })\r\n    }\r\n    this.loading=false;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <h5>Information:</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-2\\\"><label>Nom: </label><span class=\\\"nav-item px-3\\\" style=\\\"font-weight: bold;\\\">{{currentCandidat.nom}}</span></div>\\r\\n            <div class=\\\"col-2\\\"><label>Prénom: </label><span class=\\\"nav-item px-3\\\" style=\\\"font-weight: bold;\\\">{{currentCandidat.prenom}}</span></div>\\r\\n            <div class=\\\"col-2\\\"><label>Age: </label><span class=\\\"nav-item px-3\\\" style=\\\"font-weight: bold;\\\">{{currentCandidat.age}}</span></div>\\r\\n            <div class=\\\"col-2\\\"><label>Tél: </label><span class=\\\"nav-item px-3\\\" style=\\\"font-weight: bold;\\\">{{currentCandidat.numeroTel | mask:\\r\\n                '00-00-00-00-00'}}</span></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-7\\\">\\r\\n              <div *ngIf=\\\"pdfSource!=undefined\\\">\\r\\n                <object style=\\\"margin-top: 20px\\\" [data]=\\\"pdfSource\\\" height=\\\"900px\\\" width=\\\"100%\\\">\\r\\n                  <param name=\\\"view\\\" value=\\\"fitH\\\" />\\r\\n\\r\\n                </object>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-5\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"civilite\\\">Civilité</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <ng-select  bindValue=\\\"id\\\" style=\\\"font-weight: bold;color: black;\\\" bindLabel=\\\"libelle\\\" [items]=\\\"civilites\\\" required #civilite=\\\"ngModel\\\" name=\\\"civilite\\\" [(ngModel)]=\\\"currentCandidat.civilite\\\" \\r\\n                      id=\\\"civilite\\\">\\r\\n                      \\r\\n                    </ng-select> </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"nom\\\">Nom</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"nom\\\" [(ngModel)]=\\\"currentCandidat.nom\\\" id=\\\"nom\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\">Prenom</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"currentCandidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"email\\\">Email</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <input type=\\\"email\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"currentCandidat.email\\\" id=\\\"email\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"telephone\\\">Téléphone</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" [textMask]=\\\"{mask: mask}\\\" name=\\\"telephone\\\" [(ngModel)]=\\\"currentCandidat.numeroTel\\\"\\r\\n                      id=\\\"telephone\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"origineCV\\\">Origine CV</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <ng-select   bindLabel=\\\"libelle\\\" style=\\\"font-weight: bold;color: black;\\\" [items]=\\\"origines\\\"   [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"currentCandidat.origine\\\" name=\\\"origineCV\\\" id=\\\"origineCV\\\">\\r\\n                    </ng-select>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"profil\\\">Profil </label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <ng-select   bindLabel=\\\"libelle\\\" style=\\\"font-weight: bold;color: black;\\\" [items]=\\\"technologies\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"currentCandidat.technologie\\\" name=\\\"technologie\\\"  id=\\\"profil\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"codePostal\\\">Code postal</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <ng-select aria-required=\\\"\\\" style=\\\"font-weight: bold;color: black;\\\" id=\\\"codePostal\\\" [items]=\\\"codePostals\\\" (search)=\\\"codePostaleOnSearch($event)\\\"\\r\\n                      [ngModel]=\\\"currentCandidat?.codePostal\\\" (ngModelChange)=\\\"currentCandidat.codePostal = $event\\\"\\r\\n                      name=\\\"codePostal\\\">\\r\\n                      <ng-option *ngFor=\\\"let codeP of codePostals\\\" [value]=\\\"codeP\\\">{{codeP.code}}\\r\\n                        {{codeP.ville}}</ng-option>\\r\\n\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Region</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <div class=\\\"col-12\\\">\\r\\n                    <p class=\\\"form-control-static\\\" style=\\\"font-weight: bold;color: black;\\\">{{currentCandidat?.codePostal?.region}}</p>\\r\\n                  </div>   </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Ville</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <div class=\\\"col-12\\\">   <p class=\\\"form-control-static\\\" style=\\\"font-weight: bold;color: black;\\\">{{currentCandidat?.codePostal?.ville}}</p>\\r\\n                  </div></div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-4 col-form-label\\\">Mobilité: </label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <div class=\\\"col-6 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\"  [(ngModel)]=\\\"currentCandidat.mobiliteSrc\\\" name=\\\"mobilite\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkboxmobilite1\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkboxmobilite1\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\"  [(ngModel)]=\\\"currentCandidat.mobiliteSrc\\\" name=\\\"mobilite\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkboxmobilite2\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkboxmobilite2\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-md-5 col-form-label\\\">Pole Emploi: </label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <div class=\\\"col-md-6 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                        <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"currentCandidat.posteEnCours\\\" name=\\\"poleEmploi\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox3\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox3\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                        <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"currentCandidat.posteEnCours\\\" name=\\\"poleEmploi\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox4\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox4\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n                  <HR size=\\\"5\\\" align=\\\"center\\\" width=\\\"100%\\\" />\\r\\n             </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"adresse\\\">Adresse</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"adresse\\\" [(ngModel)]=\\\"currentCandidat.adresse\\\" id=\\\"adresse\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"dateNaissance\\\">Date de Naissance</label>\\r\\n                    <input style=\\\"font-weight: bold;color: black;\\\"  [owlDateTimeTrigger]=\\\"dtdateNaissance\\\" [owlDateTime]=\\\"dtdateNaissance\\\" class=\\\"form-control\\\"\\r\\n                      name=\\\"dateNaissance\\\" [(ngModel)]=\\\"currentCandidat.dateNaissance\\\" id=\\\"dateNaissance\\\">\\r\\n                    <owl-date-time (afterPickerClosed)=\\\"dateNaissanceChangedHandler()\\\"  [pickerType]=\\\"'calendar'\\\" #dtdateNaissance></owl-date-time>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"diplome\\\">Diplome</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"diplome\\\" [(ngModel)]=\\\"currentCandidat.diplome\\\" id=\\\"diplome\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"age\\\">Age</label>\\r\\n                    <input readonly type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"age\\\" [(ngModel)]=\\\"currentCandidat.age\\\" id=\\\"age\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"dateObtentionDiplome\\\">Date d'obtention du diplôme</label>\\r\\n\\r\\n                    <month-year-picker  (changed)=\\\"updateDateObtentionDiplome($event)\\\" [innerValue]=\\\"currentCandidat.dateObtentionDiplome\\\"></month-year-picker>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"lieuNaissance\\\">Lieu de Naissance</label>\\r\\n                    <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"lieuNaissance\\\" [(ngModel)]=\\\"currentCandidat.lieuNaissance\\\"\\r\\n                      id=\\\"lieuNaissance\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-4 col-form-label\\\">Sourceur</label>\\r\\n                <div class=\\\"col-7\\\">\\r\\n                  <p class=\\\"form-control-static\\\" style=\\\"margin-top:8px\\\" style=\\\"font-weight: bold;color: black;\\\">{{currentCandidat.creePar.nom}} {{currentCandidat.creePar.prenom}}</p>\\r\\n                </div>\\r\\n\\r\\n                \\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"form-group row competences\\\">\\r\\n                <div class=\\\"col-md-3 col-form-label\\\" *ngFor=\\\"let compt of competences; let i = index\\\">\\r\\n                  <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                      <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                          <div class=\\\"label--checkbox\\\">\\r\\n                              <input   class=\\\"checkbox\\\" type=\\\"checkbox\\\" [name]=\\\"'cmp'+i\\\" [(ngModel)]=\\\"competences[i].selected\\\"\\r\\n                                  id=\\\"inline-checkbox1\\\" [value]=\\\"compt.id\\\">\\r\\n                          </div>\\r\\n                        <label style=\\\"margin-bottom: 0px\\\">{{compt.libelle}}</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row align-items-center\\\" >\\r\\n                <div class=\\\"col-8\\\"></div>\\r\\n                <div  >\\r\\n                  <button (click)=\\\"updateCandidats()\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\">Modifier candidat</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n                  <HR size=\\\"5\\\" align=\\\"center\\\" width=\\\"100%\\\" />\\r\\n                </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-form-label\\\">\\r\\n                  <label class=\\\"form-check-label\\\" style=\\\"padding-right: 30px\\\" for=\\\"envoiMail\\\">\\r\\n                    Envoi e-mail:\\r\\n                  </label> \\r\\n                  <label  class=\\\"label--checkbox\\\">\\r\\n                      <input class=\\\"checkbox\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"envoiMail\\\" name=\\\"envoiMail\\\" value=\\\"true\\\" id=\\\"envoiMail \\\">\\r\\n\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-4 col-form-label\\\">Chargé recrutement</label>\\r\\n                <div class=\\\"col-7\\\">\\r\\n                  <p class=\\\"form-control-static\\\"  style=\\\"margin-top:8px;font-weight: bold;color: black;\\\">{{currentCandidat.entretien.charge!=null ? currentCandidat.entretien.charge.nom :\\\"\\\"}} {{currentCandidat.entretien.charge!=null ? currentCandidat.entretien.charge.prenom :\\\"\\\"}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienDispo\\\">Disponible</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;color: black;\\\" bindValue=\\\"value\\\"  bindLabel=\\\"label\\\" [items]=\\\"refDisponibilite\\\"   [(ngModel)]=\\\"currentCandidat.entretien.disponible\\\" name=\\\"entretienDispo\\\"\\r\\n                      id=\\\"entretienDispo\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-5 col-form-label\\\">Relancer\\r\\n                        <label style=\\\"color: firebrick\\\" *ngIf=\\\"currentCandidat.entretien.disponible=='PREAVIS'||currentCandidat.entretien.disponible=='message_vocal'\\r\\n                    ||currentCandidat.entretien.disponible=='envoi_de_la_plaquette'||currentCandidat.entretien.disponible=='EN_ATTENTE_FORMATION'\\r\\n                    ||currentCandidat.entretien.disponible=='mail_envoye'\\\">*</label>\\r\\n                    </label>\\r\\n                  \\r\\n                    <div class=\\\"col-7 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"relance\\\" (change)=\\\"relanceHandleChange($event)\\\"\\r\\n                          [(ngModel)]=\\\"currentCandidat.entretien.relance\\\" type=\\\"radio\\\" id=\\\"inline-checkbox5\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox5\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"relance\\\" (change)=\\\"relanceHandleChange($event)\\\"\\r\\n                          [(ngModel)]=\\\"currentCandidat.entretien.relance\\\" type=\\\"radio\\\" id=\\\"inline-checkbox6\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox6\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienDate\\\">Date entretien</label>\\r\\n                    <label style=\\\"color: firebrick\\\" *ngIf=\\\"currentCandidat.entretien.disponible=='DISPONIBLE'\\\">*</label>\\r\\n                    <input style=\\\"font-weight: bold;color: black;\\\" [disabled]=\\\"currentCandidat.entretien.relance==true\\\" [owlDateTimeFilter]=\\\"entretienDateFilter\\\"\\r\\n                      [min]=\\\"minRelance\\\" [owlDateTimeTrigger]=\\\"dtentretienDate\\\" [owlDateTime]=\\\"dtentretienDate\\\" class=\\\"form-control\\\"\\r\\n                      name=\\\"entretienDate\\\" [(ngModel)]=\\\"currentCandidat.entretien.date\\\" id=\\\"entretienDate\\\">\\r\\n                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dtentretienDate></owl-date-time>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienDateRelance\\\">Date Relance</label>\\r\\n                    <label style=\\\"color: firebrick\\\" *ngIf=\\\"currentCandidat.entretien.disponible=='PREAVIS'||currentCandidat.entretien.disponible=='message_vocal'\\r\\n                    ||currentCandidat.entretien.disponible=='envoi_de_la_plaquette' ||currentCandidat.entretien.disponible=='EN_ATTENTE_FORMATION'\\r\\n                    ||currentCandidat.entretien.disponible=='mail_envoye'\\\">*</label>\\r\\n                    <input [disabled]=\\\"currentCandidat.entretien.relance==false\\\" [min]=\\\"minRelance\\\" style=\\\"font-weight: bold;color: black;\\\"\\r\\n                      [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\" class=\\\"form-control\\\" name=\\\"entretienDateRelance\\\"\\r\\n                      [(ngModel)]=\\\"currentCandidat.entretien.dateRelance\\\" id=\\\"entretienDateRelance\\\">\\r\\n                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt></owl-date-time>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"timeEntretien\\\">Heure entretien</label>\\r\\n                    <label style=\\\"color: firebrick\\\" *ngIf=\\\"currentCandidat.entretien.disponible=='DISPONIBLE'\\\">*</label>\\r\\n                    <input style=\\\"font-weight: bold;color: black;\\\" [disabled]=\\\"currentCandidat.entretien.relance==true\\\" [owlDateTimeFilter]=\\\"entretienHeureFilter\\\"\\r\\n                      class=\\\"form-control\\\" placeholder=\\\"Heure entretien\\\" [(ngModel)]=\\\"timeEntretien\\\" [owlDateTimeTrigger]=\\\"dt2\\\"\\r\\n                      [owlDateTime]=\\\"dt2\\\">\\r\\n                    <owl-date-time (afterPickerClosed)=\\\"afterHeurePickerClosed()\\\" [pickerType]=\\\"'timer'\\\" #dt2></owl-date-time>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-5 col-form-label\\\">Confirmation Rdv</label>\\r\\n                    <div class=\\\"col-7 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"confirmation\\\" [(ngModel)]=\\\"currentCandidat.entretien.confirmation\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox1\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox1\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"confirmation\\\" [(ngModel)]=\\\"currentCandidat.entretien.confirmation\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox2\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox2\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienLieu\\\">Lieu entretien</label>\\r\\n                    <label style=\\\"color: firebrick\\\" *ngIf=\\\"currentCandidat.entretien.disponible=='DISPONIBLE'\\\">*</label>\\r\\n                    <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" [disabled]=\\\"currentCandidat.entretien.relance==true\\\"  bindLabel=\\\"libelle\\\" [items]=\\\"lieux\\\"  [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"currentCandidat.entretien.lieu\\\" name=\\\"entretienLieu\\\" id=\\\"entretienLieu\\\">\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienPertinence\\\">Pertinence Cv</label>\\r\\n                    <label style=\\\"color: firebrick\\\">*</label>\\r\\n                    <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;color: black;\\\"  [items]=\\\"pertinenecesValeurs\\\"   [(ngModel)]=\\\"currentCandidat.entretien.pertinence\\\" name=\\\"entretienPertinence\\\" \\r\\n                      id=\\\"entretienPertinence\\\">\\r\\n                     </ng-select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                  <textarea style=\\\"font-weight: bold;color: black;\\\"  id=\\\"comEntrtien\\\" [(ngModel)]=\\\"currentCandidat.entretien.commentaire\\\" name=\\\"comEntrtien\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </div>\\r\\n               </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col-form-label\\\"  [class]=\\\"showDetailsButton  ? 'col-md-6' : 'col-md-7' \\\">\\r\\n            </div>\\r\\n            <div [ngStyle] =\\\"{'padding-left': (showDetailsButton) ? '35px' : '45px' } \\\">\\r\\n              <button type=\\\"button\\\" [disabled]=\\\"file==undefined\\\" (click)=\\\"downloadPDF()\\\" class=\\\"btn btn-block btn-warning\\\">Télécharger\\r\\n                Cv</button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"showDetailsButton\\\" style=\\\"padding-left: 5px\\\">\\r\\n              <button type=\\\"button\\\" (click)=\\\"showDetails()\\\" class=\\\"btn btn-block btn-info\\\">Plus de détail</button>\\r\\n            </div>\\r\\n            <div style=\\\"padding-left: 5px\\\" >\\r\\n              <button type=\\\"button\\\" (click)=\\\"evaluerCandidat()\\\"  [disabled]=\\\"currentCandidat.entretien.date==null || currentCandidat.entretien.date > minRelance\\\" class=\\\"btn btn-block btn-success\\\">Evaluer Candidat</button>\\r\\n            </div>\\r\\n            <div style=\\\"padding-left: 5px\\\" >\\r\\n              <button type=\\\"button\\\" (click)=\\\"sauvgarderFicheRedirtect()\\\" class=\\\"btn btn-block btn-success\\\">Sauvegarder</button>\\r\\n            </div>\\r\\n            <div style=\\\"padding-left: 5px\\\" >\\r\\n              <button (click)=\\\"annuler()\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\">Annuler</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div bsModal #emailModalHorCible=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-primary  modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Nouveau email : Candidat Hors cible</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"emailModalHorCible.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\" style=\\\"padding: 52px\\\">\\r\\n          <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Motif </label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <ng-select style=\\\"font-weight: bold;color: black;\\\"  bindLabel=\\\"libelle\\\" [items]=\\\"motifs\\\"   [(ngModel)]=\\\"currentCandidat.motif\\\" name=\\\"motif\\\"  id=\\\"motif\\\">\\r\\n                 </ng-select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Message </label>\\r\\n              <div class=\\\"col-md-8 \\\">\\r\\n                <textarea id=\\\"commentaireMotif\\\" [(ngModel)]=\\\"commentaireMotif\\\" name=\\\"commentaireMotif\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"emailModalHorCible.hide()\\\">Annuler</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"envoiMailFunction()\\\" class=\\\"btn btn-primary\\\">Envoi mail</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal -->\\r\\n\\r\\n\\r\\n\\r\\n  <div bsModal #emailModalDispo=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-primary  modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Envoi e-mail Entretien</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"emailModalDispo.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\" style=\\\"padding: 52px\\\">\\r\\n          <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"candidatEmail\\\">E-mail Candidat</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"candidatEmail\\\" id=\\\"candidatEmail\\\" [(ngModel)]=\\\"emailEntrtien?.candidat.email\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"distCopie0\\\">Destinataire en Cci</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"distCopie0\\\" id=\\\"distCopie0\\\" [(ngModel)]=\\\"emailEntrtien.distCopie[0]\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"distCopie1\\\">Destinataire en Cci</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"distCopie1\\\" id=\\\"distCopie1\\\" [(ngModel)]=\\\"emailEntrtien.distCopie[1]\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"distCopie1\\\">Piece jointe</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div style=\\\"margin-left: 15px\\\">\\r\\n                    <input (change)=\\\"uploadFiles($event)\\\"  accept=\\\".xls, .xlsx, .pdf, .docx, .doc\\\" style=\\\"display: none;\\\" id=\\\"fileUpload\\\" type=\\\"file\\\" multiple />\\r\\n                    <button [disabled]=\\\"this.pieceJoitesTemp.length >= 3\\\" onclick=\\\"document.getElementById('fileUpload').click();\\\"  type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-block btn-outline-primary\\\" >\\r\\n                      <i class=\\\"fa fa-plus\\\"> </i> Selectionner</button>\\r\\n                  </div>\\r\\n                  <button type=\\\"button\\\" style=\\\"margin-left: 20px\\\" (click)=\\\"uploadpieceJoitesTemp()\\\" [disabled]=\\\"disableUploadButton()\\\"  class=\\\"btn btn-outline-success\\\">\\r\\n                    <i class=\\\"fa fa-upload\\\"></i> OK\\r\\n                  </button>\\r\\n                  <button type=\\\"button\\\" style=\\\"margin-left: 20px\\\" (click)=\\\"pieceJoitesTemp=[];emailEntrtien.pieceJoites=[]\\\" [disabled]=\\\"pieceJoitesTemp.length==0\\\" class=\\\"btn btn-outline-danger\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\"> </i> \\r\\n                    Annuler\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n                    <table class=\\\"table\\\" *ngIf=\\\"pieceJoitesTemp.length>0\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th width=\\\"50%\\\">Name</th>\\r\\n                            <th>Size</th>\\r\\n                            <th>Progress</th>\\r\\n                            <th>Status</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let item of pieceJoitesTemp\\\">\\r\\n                            <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                            <td  nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                            <td >\\r\\n                                <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td class=\\\"text-center\\\">\\r\\n                                <span *ngIf=\\\"item.status == 'loaded'\\\"><i class=\\\"fa fa-check\\\"></i></span>\\r\\n                                <span *ngIf=\\\"item.status=='error'\\\"><i class=\\\"fa fa-close\\\"></i></span>\\r\\n                                <span *ngIf=\\\"item.status=='notLoaded'\\\"><i class=\\\"fa fa-upload\\\"></i></span>                               \\r\\n                            </td>\\r\\n                            <td nowrap>                               \\r\\n                                    <i style=\\\"color:red\\\" (click)=\\\"removeUploadedFile(item)\\\" class=\\\"fa fa-trash-o\\\"></i> \\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Message </label>\\r\\n              <div class=\\\"col-md-8 \\\">\\r\\n                <textarea style=\\\"font-weight: bold;color: black;\\\" id=\\\"commentaireMotif\\\" [(ngModel)]=\\\"emailEntrtien.msg\\\" name=\\\"commentaireMotif\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"emailModalDispo.hide()\\\">Annuler</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"envoiMailDispoFunction()\\\" class=\\\"btn btn-primary\\\">Envoi mail</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal -->\\r\\n\\r\\n  <candidats-details-modal #detailsModal [currentCandidat]=\\\"currentCandidat\\\" ></candidats-details-modal>\\r\\n\"","module.exports = \"h5 {\\n  color: black; }\\n\\n.competences {\\n  border: 2px solid #C4C4C4;\\n  border-radius: 12px;\\n  padding: 0px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { Candidate } from '../../../models/Candidate';\r\nimport { CodePostal } from '../../../models/CodePostal';\r\nimport { Technologie } from '../../../models/Technologie';\r\nimport { Origine } from '../../../models/Origine';\r\nimport { TechnologieService } from '../../../services/administrationService/TechnologieService';\r\nimport { OriginesService } from '../../../services/administrationService/origines.service';\r\nimport { CodePostalService } from '../../../services/administrationService/code-postal.service';\r\nimport { CompetencesService } from '../../../services/administrationService/competences.service';\r\nimport { Competence } from '../../../models/Competence';\r\nimport { CandidatsService } from '../../../services/candidats.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Entretien } from '../../../models/Entretien';\r\nimport { Lieu } from '../../../models/Lieu';\r\nimport { LieuxService } from '../../../services/administrationService/Lieux.service.';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { Motif } from '../../../models/Motif';\r\nimport { MotifService } from '../../../services/administrationService/motif.service';\r\nimport { RoutingState } from '../../../helper/routing-state.service';\r\nimport { UtilisateurService } from '../../../services/utilisateur.service';\r\nimport { Disponibilite } from '../../../models/enum/Disponibilite';\r\nimport { HelperService } from '../../../helper/helper.service';\r\nimport { Profil } from '../../../models/enum/Profil';\r\nimport { EntretienService } from '../../../services/entretien-service';\r\nimport { Status } from '../../../models/enum/Status';\r\nimport { NAVIGATION_RULES, PHONE_MASK } from '../../../helper/application.constant';\r\n\r\n@Component({\r\n  selector: 'app-fiche-candidat',\r\n  templateUrl: './fiche-candidat.component.html',\r\n  styleUrls: ['./fiche-candidat.component.scss']\r\n\r\n})\r\nexport class FicheCandidatComponent implements OnInit {\r\n  @ViewChild(\"detailsModal\")\r\n  public detailsModal;\r\n\r\n  @ViewChild(\"emailModalDispo\")\r\n  public emailModalDispo;\r\n\r\n  @ViewChild(\"emailModalHorCible\")\r\n  public emailModalHorCible;\r\n  civilites = [\"M\", \"Mme\"];\r\n\r\n  public showDetailsButton \r\n\r\n  commentaireMotif = \"\";\r\n  minRelance = new Date((new Date().getMonth() + 1) + \"/\" + (new Date().getDate()) + \"/\" + new Date().getFullYear());\r\n  timeEntretien: Date;\r\n  codePostals: Array<CodePostal> = [];\r\n  technologies: Array<Technologie> = []\r\n  origines: Array<Origine> = []\r\n  competences: Array<Competence> = []\r\n  lieux: Array<Lieu> = []\r\n  motifs: Array<Motif> = []\r\n\r\n  pertinenecesValeurs = [1, 2, 3, 4, 5]\r\n  pdfSource;\r\n  refDisponibilite = this.helperService.buildDisponibiliteArray();\r\n  file;\r\n  currentCandidat: Candidate;\r\n  envoiMail: boolean = false;\r\n  pieceJoitesTemp = []\r\n  emailEntrtien = {\r\n    candidat: {},\r\n    distCopie: [\"\", \"\"],\r\n    pieceJoites: [],\r\n    msg: \"\"\r\n\r\n  }\r\n  mask: any[] = PHONE_MASK;\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private competencesService: CompetencesService,\r\n    private codePostalService: CodePostalService, private originesService: OriginesService,\r\n    private technologiesService: TechnologieService, private candidatsService: CandidatsService,\r\n    private sanitizer: DomSanitizer, private router: Router, private lieuxService: LieuxService,\r\n    private notifierService: NotifierService, private motifService: MotifService,\r\n    private routingState: RoutingState, private entretienService: EntretienService,\r\n    private userService: UtilisateurService, private helperService: HelperService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.showDetailsButton = this.routingState.getPreviousUrl().indexOf(NAVIGATION_RULES.candidats.listeTousCandidats)>-1\r\n    this.route.data\r\n      .subscribe((data: { candidat: Candidate, title: string }) => {\r\n        data.title = data.title + data.candidat.id;\r\n        this.currentCandidat = data.candidat;\r\n        if (this.currentCandidat.entretien != undefined && this.currentCandidat.entretien != null && this.currentCandidat.entretien.date!=null)\r\n          this.timeEntretien = this.currentCandidat.entretien.date;\r\n        this.codePostaleOnSearch(this.currentCandidat.codePostal.code)\r\n        this.candidatsService.getCvCandidats(this.currentCandidat).subscribe(res => {\r\n          this.file = res;\r\n          var reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            var fileBase64Value = reader.result + ''\r\n            this.pdfSource = this.sanitizer.bypassSecurityTrustResourceUrl(fileBase64Value.replace(\"pdf/plain\", \"application/pdf\"))\r\n          }\r\n          reader.readAsDataURL(res.data);\r\n        })\r\n      });\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n    this.originesService.findAllOrigines().subscribe(data => {\r\n      this.origines = data;\r\n    })\r\n\r\n    this.lieuxService.findAllLieux().subscribe(data => {\r\n      this.lieux = data;\r\n    })\r\n\r\n    this.motifService.findAllMotifs().subscribe(data => this.motifs = data)\r\n\r\n    this.competencesService.findAllCompetences().subscribe(data => {\r\n      this.competences = data;\r\n      this.currentCandidat.candidatCompetence.forEach((obj, i) => {\r\n        this.competences.forEach((obj2, i) => {\r\n          if (obj2.id == obj.id) {\r\n            obj2.selected = true;\r\n          }\r\n        });\r\n      });\r\n    })\r\n  }\r\n\r\n  private codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.codePostalService.completeCodePostal(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.codePostals = [...  this.codePostals, element]\r\n          if (element.id == this.currentCandidat.codePostal.id) {\r\n            this.currentCandidat.codePostal = element\r\n          }\r\n        });\r\n\r\n      })\r\n    else this.codePostals = []\r\n  }\r\n\r\n  private downloadPDF() {\r\n\r\n    var url = window.URL.createObjectURL(this.file.data);\r\n    var a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n    a.setAttribute('style', 'display: none');\r\n    a.href = url;\r\n    a.download = this.file.filename;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    a.remove(); // remove the element\r\n  }\r\n\r\n  private afterHeurePickerClosed() {\r\n    if (this.timeEntretien == undefined) {\r\n      this.notifierService.notify(\"error\", \"Heure incorrect: l’heure doit être entre 09h et 18h\")\r\n\r\n    }\r\n   // else this.currentCandidat.entretien.date.setHours(this.timeEntretien.getHours(), this.timeEntretien.getMinutes())\r\n  }\r\n\r\n  private entretienHeureFilter = (d: Date): boolean => {\r\n    if (d.getHours() < 18 && d.getHours() >= 9) {\r\n      return true\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private annuler() {\r\n    this.router.navigate([this.routingState.getPreviousUrl()]);\r\n  }\r\n\r\n  private updateDateObtentionDiplome(date: Date) {\r\n    this.currentCandidat.dateObtentionDiplome = date\r\n  }\r\n\r\n  private updateCandidats() {\r\n    const validEmailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    var error = false;\r\n    if (this.currentCandidat.nom == \"\" || this.currentCandidat.nom == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un nom valide\")\r\n      error = true;\r\n    }\r\n    if (this.currentCandidat.prenom == \"\" || this.currentCandidat.prenom == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un prenom valide\")\r\n      error  = true;\r\n    }\r\n    if (this.currentCandidat.email == \"\" || this.currentCandidat.email == undefined || !validEmailRegEx.test(this.currentCandidat.email)) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un email valide\")\r\n      error  = true;\r\n    }\r\n    if (this.currentCandidat.numeroTel == \"\" || this.currentCandidat.numeroTel == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un numero Tel valide\")\r\n      error  = true;\r\n    }\r\n    if (this.currentCandidat.origine.id == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez Choisir un Origine CV valide\")\r\n      error  = true;\r\n    }\r\n    if (!error) {\r\n      //#region get Competences\r\n      this.helperService.generateComp(this.currentCandidat, this.competences);\r\n      //#endregion\r\n      const candidateTemp: any = Object.assign({}, this.currentCandidat);\r\n      if (candidateTemp.entretien != null && (candidateTemp.entretien.id == 0 || candidateTemp.entretien.id == null || candidateTemp.entretien.id == undefined))\r\n        candidateTemp.entretien = null\r\n      if (candidateTemp.motif != null && (candidateTemp.motif.id == 0 || candidateTemp.motif.id == null || candidateTemp.motif.id == undefined)) candidateTemp.motif = null\r\n      if (candidateTemp.suivi != null && (candidateTemp.suivi.id == 0 || candidateTemp.suivi.id == null || candidateTemp.suivi.id == undefined)) candidateTemp.suivi = null\r\n      this.candidatsService.updateCandidat(candidateTemp).subscribe(data => {\r\n        this.notifierService.notify(\"success\", \"Candidat modifié avec success !\")\r\n        this.router.navigate([NAVIGATION_RULES.candidats.url+'/'+NAVIGATION_RULES.candidats.listeNouveauxCandidats]);\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private verifierCvAnym() {\r\n    let error = false;\r\n    //#region cvAnonyme\r\n    if (!this.currentCandidat.cvAnonyme) {\r\n      if (this.currentCandidat.email == \"\" || this.currentCandidat.email == undefined) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email valide\");\r\n        error = true;\r\n      }\r\n      if (this.currentCandidat.numeroTel == \"\" || this.currentCandidat.numeroTel == undefined) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un numero Tel valide\");\r\n        error = true;\r\n      }\r\n    }\r\n    else {\r\n      if ((this.currentCandidat.email == \"\" || this.currentCandidat.email == undefined) && (this.currentCandidat.numeroTel == \"\" || this.currentCandidat.numeroTel == undefined)) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email  ou numero Tel  valide\");\r\n        error = true;\r\n      }\r\n    }\r\n    return error;\r\n    //#endregion\r\n\r\n  }\r\n\r\n  private verfierDispo() {\r\n    let error = false;\r\n    if (this.currentCandidat.entretien.pertinence == undefined) {\r\n      this.notifierService.notify(\"error\", \" Champ obligatoire,choisir la pertinence!\")\r\n      error = true;\r\n    }\r\n    if (this.currentCandidat.entretien.disponible == undefined) {\r\n      this.notifierService.notify(\"error\", \"Champ obligatoire,choisir la disponibilité!\")\r\n      error = true;\r\n    }\r\n    return error;\r\n  }\r\n\r\n  private verfierRelance() {\r\n    let error = false;\r\n\r\n    if (!(this.currentCandidat.entretien.pertinence == undefined)) {\r\n\r\n      var table = [\"PREAVIS\", \"message_vocal\", \"envoi_de_la_plaquette\", \"EN_ATTENTE_FORMATION\", \"mail_envoye\"]\r\n      let dispoValue = this.currentCandidat.entretien.disponible;\r\n      //#region Relance\r\n      if (table.indexOf(dispoValue) >= 0 && this.currentCandidat.entretien.relance == undefined) {\r\n        this.notifierService.notify(\"error\", \"Champs obligatoire, Relancer\")\r\n        error = true;\r\n      } else if (this.currentCandidat.entretien.relance == true && this.currentCandidat.entretien.dateRelance == undefined) {\r\n        this.notifierService.notify(\"error\", \"Champ obligatoire, date relance!\")\r\n        error = true;\r\n      }\r\n      else if (this.currentCandidat.entretien.relance == false && this.currentCandidat.entretien.dateRelance != undefined) {\r\n        this.currentCandidat.entretien.dateRelance = null\r\n      }\r\n    }\r\n    return error;\r\n    //#endregion\r\n  }\r\n\r\n  private verfierEntrtien() {\r\n    let error = false\r\n\r\n    if (!(this.currentCandidat.entretien.pertinence == undefined)) {\r\n\r\n      //#region Entrtien\r\n      let dispoValue = this.currentCandidat.entretien.disponible;\r\n\r\n      if (dispoValue == \"DISPONIBLE\") {\r\n        if (this.currentCandidat.entretien.date == undefined) {\r\n          this.notifierService.notify(\"error\", \"Champs obligatoire, date entretien!\")\r\n          error = true;\r\n        }\r\n        if (this.currentCandidat.entretien.lieu == undefined) {\r\n          this.notifierService.notify(\"error\", \"Champs obligatoire, lieu entretien!\")\r\n          error = true;\r\n        }\r\n        if (this.timeEntretien == undefined) {\r\n          this.notifierService.notify(\"error\", \"Champs obligatoire, heure d'entretien!\")\r\n          error = true;\r\n        }\r\n      }\r\n    }\r\n    return error;\r\n    //#endregion\r\n  }\r\n\r\n  relanceHandleChange(event) {\r\n    if (this.currentCandidat.entretien.relance == false) {\r\n      this.currentCandidat.entretien.dateRelance = undefined\r\n    }\r\n    else {\r\n      this.currentCandidat.entretien.date = undefined\r\n      this.timeEntretien = undefined\r\n    }\r\n  }\r\n\r\n  private async sauvgarderFiche() {\r\n\r\n    //#region get Competences\r\n    this.helperService.generateComp(this.currentCandidat, this.competences);\r\n    //#endregion\r\n    if (!this.verfierDispo() && !this.verfierRelance() && !this.verfierEntrtien()) {\r\n      if (this.currentCandidat.motif != null && (this.currentCandidat.motif.id == 0 || this.currentCandidat.motif.id == null || this.currentCandidat.motif.id == undefined)) this.currentCandidat.motif = null\r\n      if (this.currentCandidat.suivi != null && (this.currentCandidat.suivi.id == 0 || this.currentCandidat.suivi.id == null || this.currentCandidat.suivi.id == undefined)) this.currentCandidat.suivi = null\r\n     \r\n\r\n      if( this.currentCandidat.entretien.date!=undefined)this.currentCandidat.entretien.date.setHours(this.timeEntretien.getHours(), this.timeEntretien.getMinutes())\r\n\r\n      //#region Hors Cible \r\n      if (this.currentCandidat.entretien.disponible == \"hors_cible\" && (this.currentCandidat.emailSourceurEnvoyer == false || this.currentCandidat.emailSourceurEnvoyer == null)) {\r\n        this.emailModalHorCible.show()\r\n        return;\r\n      }\r\n      //#endregion\r\n      //#region envoiMail\r\n      if (this.envoiMail) {\r\n        if (this.currentCandidat.entretien.disponible == \"DISPONIBLE\" && (this.currentCandidat.emailCandidatEnvoyer == null || this.currentCandidat.emailCandidatEnvoyer == false)) {\r\n          this.emailEntrtien.candidat = this.currentCandidat\r\n          this.emailEntrtien.msg = this.buildEntretienMsg(this.currentCandidat)\r\n          this.emailModalDispo.show()\r\n          return;\r\n        }\r\n      }\r\n      //#endregion\r\n      let userProfil = this.userService.getConnetedUserInfo().profil;\r\n      if (Profil[userProfil] == Profil.ADMINISTRATEUR || Profil[userProfil] == Profil.CHARGE || Profil[userProfil] == Profil.DIRECTION) {\r\n        //#region Save Or Update Entretien\r\n        this.currentCandidat.entretien.charge = this.userService.getConnetedUserInfo();\r\n        await this.entretienService.createOrUpdate(this.currentCandidat.entretien).toPromise().then((data: Entretien) => {\r\n          if (this.currentCandidat.entretien.id > 0)\r\n            this.notifierService.notify(\"success\", \"Modifié!, Candidat modifié avec success !\");\r\n          else\r\n            this.notifierService.notify(\"success\", \"Ajout!, Candidat ajouté avec success !\");\r\n          data.date = new Date(data.date)\r\n          this.currentCandidat.entretien = data;\r\n        })\r\n        //#endregion\r\n        //#region  Update Candidat\r\n        if (this.currentCandidat.entretien.date == undefined || this.currentCandidat.entretien.date == null) {\r\n          this.currentCandidat.statut = Status[Status.EN_ATTENTE_EVALUATION]\r\n        }\r\n        if (Disponibilite[this.currentCandidat.entretien.disponible] != Disponibilite.DISPONIBLE) {\r\n          this.currentCandidat.statut = Status[Status.VIDE]\r\n        }\r\n        this.currentCandidat.motif = null;\r\n        await this.candidatsService.updateficheCandidat(this.currentCandidat).toPromise().then(data => {\r\n         if(this.callback!=null) this.callback(data.id)\r\n        })\r\n        //#endregion\r\n      }\r\n    }\r\n  }\r\n\r\n  private envoiMailHorCibleFunction() {\r\n    if (this.currentCandidat.motif != undefined && this.currentCandidat.motif != undefined && this.commentaireMotif != \"\") {\r\n      this.candidatsService.envoyerEmailHorsCibleCandidats(this.currentCandidat, this.userService.getConnetedUserInfo().login, this.commentaireMotif).subscribe(data => {\r\n        this.notifierService.notify(\"success\", \"Mail envoyé avec succès\");\r\n        this.currentCandidat.motif = new Motif();\r\n        this.commentaireMotif = \"\"\r\n        this.emailModalHorCible.hide();\r\n        this.currentCandidat.emailSourceurEnvoyer = true;\r\n        this.sauvgarderFiche();\r\n      })\r\n    }\r\n    else {\r\n      this.notifierService.notify(\"error\", \"Champs obligatoire, Choisir un motif!\")\r\n\r\n    }\r\n  }\r\n\r\n  private envoiMailDispoFunction() {\r\n    this.candidatsService.envoyerEmailDisboCandidats(this.emailEntrtien, this.userService.getConnetedUserInfo().login).subscribe(data => {\r\n      this.notifierService.notify(\"success\", \"Mail envoyé avec succès\");\r\n      this.currentCandidat.emailCandidatEnvoyer = true;\r\n      this.emailModalDispo.hide();\r\n      this.emailEntrtien = {\r\n        candidat: {},\r\n        distCopie: [\"\", \"\"],\r\n        pieceJoites: [],\r\n        msg: \"\"\r\n\r\n      }\r\n      this.pieceJoitesTemp = []\r\n      this.sauvgarderFiche();\r\n    })\r\n  }\r\n\r\n  private uploadFiles(event) {\r\n    for (let index = 0; index < event.target.files.length && index < 3; index++) {\r\n      if (this.pieceJoitesTemp.length < 3) {\r\n        const element = event.target.files[index];\r\n        if (element.size < 131072000) {\r\n          let alradyAdded = false;\r\n          this.pieceJoitesTemp.forEach(el => {\r\n            if (el.file.name == element.name) alradyAdded = true;\r\n          })\r\n          if (!alradyAdded)\r\n            this.pieceJoitesTemp.push({ file: element, progress: 0, status: \"notLoaded\" });\r\n          else\r\n            this.notifierService.notify(\"warning\", \"Fichier \\\"\" + element.name + \"\\\" déja ajouter!\")\r\n        }\r\n        else\r\n          this.notifierService.notify(\"warning\", \"taille du fichier \\\"\" + element.name + \"\\\"est trop lourd!\")\r\n      }\r\n    }\r\n  }\r\n\r\n  private uploadpieceJoitesTemp() {\r\n    let tab = this.pieceJoitesTemp.filter(item => item.status == 'notLoaded')\r\n    for (let index = 0; index < tab.length && index < 3; index++) {\r\n      let element = tab[index];\r\n\r\n      let reader = new FileReader();\r\n      reader.onprogress = (e) => {\r\n        if (e.lengthComputable) {\r\n          element.progress = ((e.loaded / e.total) * 100);\r\n        }\r\n      }\r\n\r\n      reader.addEventListener(\"load\", (e) => {\r\n        // element.progress = 100\r\n        var fileBase64Value = reader.result + ''\r\n        this.emailEntrtien.pieceJoites.push({\r\n          fileName: element.file.name,\r\n          value: fileBase64Value.split(',')[1],\r\n          type: element.file.type,\r\n          size: element.file.size\r\n        })\r\n        element.status = \"loaded\"\r\n      }, false);\r\n      element.status = \"uploading\"\r\n      reader.readAsDataURL(element.file);\r\n    };\r\n\r\n  }\r\n\r\n  private disableUploadButton() {\r\n    return this.pieceJoitesTemp.filter(item => item.status == 'notLoaded').length == 0 || this.pieceJoitesTemp.filter(item => item.status == 'uploading').length > 0\r\n  }\r\n\r\n  private removeUploadedFile(item) {\r\n    this.pieceJoitesTemp.splice(this.pieceJoitesTemp.indexOf(item, 0), 1)\r\n    this.emailEntrtien.pieceJoites.forEach((element, index) => {\r\n      if (element.fileName == item.file.name) {\r\n        this.emailEntrtien.pieceJoites.splice(index, 1)\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildEntretienMsg(candidat) {\r\n\r\n    let presentationTime = new Date(candidat.entretien.date);\r\n    presentationTime.setHours(presentationTime.getHours() + 1)\r\n    let entretienTime = new Date(candidat.entretien.date);\r\n    entretienTime.setHours(entretienTime.getHours() + 2)\r\n    var msg = \"Bonjour \" + candidat.civilite + \". \" + candidat.nom.toUpperCase() + \" \" + candidat.prenom.toUpperCase()\r\n      + \", \\n\\nSuite à notre entretien téléphonique : \\n\\nJe vous confirme donc votre entretien le \";\r\n\r\n    msg += candidat.entretien.date.toLocaleDateString(\"fr-FR\") + \" à \" + this.helperService.formatTime(candidat.entretien.date) + \" dans nos locaux situés:\\n\\n\"\r\n      + candidat.entretien.lieu.adresseAdaming\r\n      + \"\\n\\nLe déroulement sera le suivant: \\n\\n\\t \" + this.helperService.formatTime(candidat.entretien.date)\r\n      + \": Test de logique \\n\\t \" + this.helperService.formatTime(presentationTime)\r\n      + \": Présentation de notre société et opportunités de carrière \\n\\t\"\r\n      + this.helperService.formatTime(entretienTime)\r\n      + \": Entretien individuel \\n\\nMerci de bien vouloir me confirmer votre présence par retour de mail. \\n \\n Ce rendez-vous a pour but d'intégrer notre société en contrat à durée indéterminée dans l'hypothèse où vos tests et entretiens sont concluants. \\n\\n Cordialement,\";\r\n\r\n    return msg\r\n  }\r\n\r\n  \r\npublic callback=null;\r\n\r\n  private async sauvgarderFicheRedirtect() {\r\n    this.callback = (id) => {\r\n      if (this.routingState.getPreviousUrl()==\"/candidats\")\r\n        this.router.navigate([NAVIGATION_RULES.candidats.url+'/'+NAVIGATION_RULES.candidats.listeTousCandidats]);\r\n      else this.annuler();\r\n    }\r\n    await this.sauvgarderFiche();\r\n  }\r\n\r\n  private async evaluerCandidat() {\r\n    this.callback = (id) => {\r\n      this.router.navigate([NAVIGATION_RULES.entretien.url+'/'+NAVIGATION_RULES.entretien.details.replace(':id',id)]);\r\n    }\r\n    await this.sauvgarderFiche();\r\n  }\r\n\r\n  private dateNaissanceChangedHandler(){\r\n    this.currentCandidat.age= this.helperService.getAge(this.currentCandidat.dateNaissance)\r\n  }\r\n\r\n  showDetails() {\r\n    this.detailsModal.show();\r\n  }\r\n}\r\n","module.exports = \".card {\\r\\n    margin-bottom: 1.5rem;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Recherche</label>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Nom:</label>\\r\\n                            <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"nom\\\" [(ngModel)]=\\\"condidat.nom\\\" id=\\\"nom\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Prénom :</label>\\r\\n                            <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"numeroTel\\\" style=\\\"font-weight:bold\\\">N° téléphone:</label>\\r\\n                            <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.numeroTel\\\" id=\\\"numeroTel\\\" [textMask]=\\\"{mask: mask}\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"email\\\" style=\\\"font-weight:bold\\\">Email:</label>\\r\\n                            <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"condidat.email\\\" id=\\\"email\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"dateInscription\\\" style=\\\"font-weight:bold\\\">Date\\r\\n                                Inscription:</label>\\r\\n                            <input type=\\\"text\\\" style=\\\"font-weight: bold;color: black;\\\" class=\\\"form-control\\\" name=\\\"dateInscription\\\" [(ngModel)]=\\\"condidat.dateInscription\\\"\\r\\n                                id=\\\"dateInscription\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Type de profil:</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"libelle\\\"  bindLabel=\\\"libelle\\\" [items]=\\\"technologies\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.technologie\\\" name=\\\"technologie\\\"  >\\r\\n                                </ng-select>\\r\\n                            \\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"nomSourceur\\\" style=\\\"font-weight:bold\\\">Nom Sourceur :</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"nom\\\"  bindLabel=\\\"nom\\\" [items]=\\\"listSourceur\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.nomSourceur\\\" name=\\\"nomSourceur\\\"  >\\r\\n                            </ng-select>\\r\\n                                \\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenomSourceur\\\" style=\\\"font-weight:bold\\\">Prenom Sourceur :</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"prenom\\\"  bindLabel=\\\"prenom\\\" [items]=\\\"listSourceur\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.prenomSourceur\\\" name=\\\"prenomSourceur\\\"  >\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"nomCharge\\\" style=\\\"font-weight:bold\\\">Nom charge :</label>\\r\\n                       \\r\\n                                <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"nom\\\"  bindLabel=\\\"nom\\\" [items]=\\\"listCarge\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.nomCharge\\\" name=\\\"nomCharge\\\"  >\\r\\n                                </ng-select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenomCharge\\\" style=\\\"font-weight:bold\\\">Prenom charge :</label>\\r\\n                           \\r\\n                                <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"prenom\\\"  bindLabel=\\\"prenom\\\" [items]=\\\"listCarge\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.prenomCharge\\\" name=\\\"prenomCharge\\\"  >\\r\\n                                </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"region\\\" style=\\\"font-weight:bold\\\">Disponibilité:</label>\\r\\n                           \\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"value\\\"  bindLabel=\\\"label\\\" [items]=\\\"refDisponibilite\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.disponibilite\\\" name=\\\"disponibilite\\\"  >\\r\\n                                </ng-select>\\r\\n                           \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Region:</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" aria-required=\\\"\\\" id=\\\"region\\\" [items]=\\\"region\\\" (search)=\\\"codePostaleOnSearch($event)\\\"\\r\\n                                [ngModel]=\\\"condidat.region\\\" (ngModelChange)=\\\"condidat.region = $event\\\" name=\\\"region\\\">\\r\\n                                <ng-option *ngFor=\\\"let reg of region\\\" [value]=\\\"reg.code\\\">{{reg.code}}</ng-option>\\r\\n\\r\\n                            </ng-select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-12 col-form-label\\\" style=\\\"font-weight:bold\\\">Relancer</label>\\r\\n                            <div class=\\\"col-12 col-form-label\\\">\\r\\n                                <div class=\\\"form-check form-check-inline\\\">\\r\\n                                    <input class=\\\"form-check-input\\\" name=\\\"relance\\\" [(ngModel)]=\\\"relance\\\" type=\\\"radio\\\"\\r\\n                                    (change)=\\\"relanceHandleChange($event)\\\" id=\\\"inline-checkbox5\\\" [value]=\\\"true\\\">\\r\\n                                    <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox5\\\">PERIODE</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-check form-check-inline\\\">\\r\\n                                    <input class=\\\"form-check-input\\\" name=\\\"relance\\\" [(ngModel)]=\\\"relance\\\" type=\\\"radio\\\"\\r\\n                                    (change)=\\\"relanceHandleChange($event)\\\" id=\\\"inline-checkbox6\\\" [value]=\\\"false\\\">\\r\\n                                    <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox6\\\">MOIS</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                   \\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"dateDebut\\\" style=\\\"font-weight:bold\\\">Date debut</label>\\r\\n                            <input style=\\\"font-weight: bold;color: black;\\\" [disabled]=\\\"relance==false\\\" [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\" class=\\\"form-control\\\" name=\\\"dateDebut\\\"\\r\\n                                [(ngModel)]=\\\"condidat.dateDebut\\\" id=\\\"dateDebut\\\">\\r\\n                            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt></owl-date-time>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"dateFin\\\" style=\\\"font-weight:bold\\\">Date fin</label>\\r\\n                            <input style=\\\"font-weight: bold;color: black;\\\" [disabled]=\\\"relance==false\\\" [owlDateTimeTrigger]=\\\"dtdateFin\\\" [owlDateTime]=\\\"dtdateFin\\\" class=\\\"form-control\\\" name=\\\"dateFin\\\"\\r\\n                                [(ngModel)]=\\\"condidat.dateFin\\\" id=\\\"dateFin\\\">\\r\\n                            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dtdateFin></owl-date-time>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Mois de relance:</label>\\r\\n                            <month-year-picker [disabled]=\\\"relance==true\\\" (changed)=\\\"updateDateRelance($event)\\\" [innerValue]=\\\"condidat.dateRelance\\\"></month-year-picker>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                        <div class=\\\"col-10\\\"></div>\\r\\n                        <div >\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"rechercheCandidat()\\\">Rechercher</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div style=\\\"padding-left: 5px\\\" >\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" (click)=\\\"reset()\\\" style=\\\"float: right;\\\">Réinitialiser</button>\\r\\n                        </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        \\r\\n            <custom-table [item]=\\\"condidat\\\" [actions]=\\\"actions\\\" [title]=\\\"titleTable\\\"  [parent]=\\\"this\\\" #table [columns]=\\\"columns\\\" ></custom-table>\\r\\n   \\r\\n</div>\"","import { Component, OnInit, OnDestroy, ViewChild } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { CandidateDto } from \"../CandidateDto\";\r\nimport { CandidatsService } from \"../../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { OriginesService } from \"../../../services/administrationService/origines.service\";\r\nimport { CompetencesService } from \"../../../services/administrationService/competences.service\";\r\nimport { TechnologieService } from \"../../../services/administrationService/TechnologieService\";\r\nimport { HelperService } from \"../../../helper/helper.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RegionService } from \"../../../services/administrationService/region.service\";\r\nimport { Region } from \"../../../models/region\";\r\nimport { NAVIGATION_RULES, DATE_FORMAT, PHONE_MASK } from \"../../../helper/application.constant\";\r\nimport { RoutingState } from \"../../../helper/routing-state.service\";\r\nimport { UtilisateurService } from \"../../../services/utilisateur.service\";\r\n\r\n@Component({\r\n  selector: 'ngbd-dropdown-basic',\r\n  templateUrl: 'listeCandidatArelancer.component.html',\r\n  styleUrls: [\"listeCandidatArelancer.component.css\"]\r\n})\r\nexport class listeCandidatArelancerComponent implements OnInit, OnDestroy {\r\n\r\n  titleTable = \"List Condidats A relancer \"\r\n\r\n  @ViewChild(\"table\")\r\n  table;\r\n\r\n  actions = {\r\n    visible: true,\r\n    title: 'Actions',\r\n    items: [\r\n      {\r\n        icon: 'fa fa-edit',\r\n        class: 'btn-outline-success btn btn-sm',\r\n        tooltip: 'Détails',\r\n        action: (e) => {\r\n          this.openDetails(e);\r\n        }\r\n      },\r\n      {\r\n        icon: 'fa fa-download',\r\n        class: 'btn-outline-warning btn btn-sm',\r\n        tooltip: 'Telecharger CV',\r\n        action:\r\n          (e) => {\r\n            this.downloadCV(e);\r\n          }\r\n      }\r\n    ]\r\n  }\r\n\r\n  technologies = []\r\n  refDisponibilite = this.helperService.buildDisponibiliteArray();\r\n  region: Array<Region> = [];\r\n  columns = [\r\n    {\r\n      data: 'nom',\r\n      title: 'Nom',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'prenom',\r\n      title: 'Prenom',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'numeroTel',\r\n      title: 'N° Téléphone',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'email',\r\n      title: 'Email',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'dateInscription',\r\n      title: 'Date inscription',\r\n      visible: false,\r\n      dateFormat: DATE_FORMAT\r\n\r\n    },\r\n    {\r\n      data: 'technologie',\r\n      title: 'Type de profil',\r\n      visible: false\r\n    },\r\n    {\r\n      data: 'region',\r\n      title: 'Région',\r\n      visible: false\r\n    },\r\n    {\r\n      data: 'nomSourceur',\r\n      title: 'Nom sourceur',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'prenomSourceur',\r\n      title: 'Prénom sourceur',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'disponibilite',\r\n      title: 'Disponible',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'dateRelance',\r\n      title: 'Date relance',\r\n      visible: true,\r\n      dateFormat: DATE_FORMAT\r\n\r\n    },\r\n    {\r\n      data: 'nomCharge',\r\n      title: 'Nom charge',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'prenomCharge',\r\n      title: 'Prénom charge',\r\n      visible: true\r\n    }\r\n  ]\r\n\r\n  condidat: CandidateDto = new CandidateDto();\r\n  listSourceur: any[];\r\n  listCarge: any[];\r\n  relance: boolean;\r\n  mask: any[] = PHONE_MASK;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private candidatsService: CandidatsService,\r\n    private helperService: HelperService,\r\n    private notifierService: NotifierService,\r\n    private technologiesService: TechnologieService,\r\n    private routingState: RoutingState,\r\n    private regionService: RegionService,private utilisateurService: UtilisateurService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.routingState.getPreviousUrl().indexOf('details') > -1)\r\n      this.condidat = this.helperService.listRelanceCandidatRecherche;\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n    this.utilisateurService.getAllSourceurs().subscribe(data=>{\r\n      this.listSourceur=data\r\n    })\r\n    this.utilisateurService.getAllChages().subscribe(data=>{\r\n      this.listCarge=data\r\n    })\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.helperService.listRelanceCandidatRecherche = this.condidat;\r\n  }\r\n  rechercheCandidat() {\r\n    let callBack = (e) => {\r\n      this.notifierService.notify(\"info\", \"Nombre Candidat : \" + this.table.maxlenght)\r\n    }\r\n    this.table.setPage(1, callBack);\r\n  }\r\n  initTableFunction() {\r\n    this.rechercheCandidat()\r\n  }\r\n  recherche(item, page, size,allValue) {\r\n    return this.candidatsService.rechercheCandidatArelancer(item, page, size)\r\n  }\r\n\r\n  rechercheNbr(item,allValue) {\r\n    return this.candidatsService.rechercheCandidatArelancerNbr(item)\r\n  }\r\n  \r\n  reset() {\r\n    this.condidat = new CandidateDto();\r\n    this.table.item= this.condidat;\r\n    this.rechercheCandidat();\r\n  }\r\n\r\n  downloadCV(candidat) {\r\n    this.candidatsService.getCvCandidats(candidat).subscribe(res => {\r\n      let file = res;\r\n      var url = window.URL.createObjectURL(file.data);\r\n      var a = document.createElement('a');\r\n      document.body.appendChild(a);\r\n      a.setAttribute('style', 'display: none');\r\n      a.href = url;\r\n      a.download = file.filename;\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      a.remove(); // remove the element     \r\n\r\n    })\r\n  }\r\n\r\n  openDetails(candidat) {\r\n    this.router.navigate([NAVIGATION_RULES.candidats.url + '/' + NAVIGATION_RULES.candidats.details.replace(':id', candidat.id)]);\r\n  }\r\n\r\n  codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.regionService.completeRegion(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.region = [...  this.region, element]\r\n        });\r\n      })\r\n    else this.region = []\r\n  }\r\n  private updateDateRelance(date: Date) {\r\n    this.condidat.dateRelance = date\r\n  }\r\n\r\n  relanceHandleChange(event) {\r\n    if (this.relance == false) {\r\n      this.condidat.dateDebut = undefined\r\n      this.condidat.dateFin = undefined\r\n    }\r\n    else {\r\n      this.condidat.dateRelance = undefined\r\n    }\r\n  }\r\n}\r\n","module.exports = \"a.first::after {\\r\\n  content:'...'\\r\\n}\\r\\n\\r\\na.last::before {\\r\\n  content:'...'\\r\\n}\\r\\n\\r\\n.loadingCustom{\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  margin-bottom: 1.5rem;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <form #rechercheForm=\\\"ngForm\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <label style=\\\"font-weight:bold;color:#546E7A;\\\">Recherche</label>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Nom:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"nom\\\" [(ngModel)]=\\\"condidat.nom\\\" id=\\\"nom\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Prénom :</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"numeroTel\\\" style=\\\"font-weight:bold\\\">N° téléphone:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.numeroTel\\\"\\r\\n                                    id=\\\"numeroTel\\\" [textMask]=\\\"{mask: mask}\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"email\\\" style=\\\"font-weight:bold\\\">Email:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"font-weight: bold;color: black;\\\" name=\\\"email\\\" [(ngModel)]=\\\"condidat.email\\\" id=\\\"email\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"dateInscription\\\" style=\\\"font-weight:bold\\\">Date Inscription:</label>\\r\\n                               \\r\\n\\r\\n                                    <input  [owlDateTimeFilter]=\\\"dateDateFilter\\\" style=\\\"font-weight: bold;color: black;\\\"\\r\\n                                    [owlDateTimeTrigger]=\\\"dateInscription\\\" [owlDateTime]=\\\"dateInscription\\\" class=\\\"form-control\\\"\\r\\n                                    name=\\\"dateInscription\\\" [(ngModel)]=\\\"condidat.dateInscription\\\" id=\\\"dateInscription\\\">\\r\\n                                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dateInscription></owl-date-time>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"profil\\\" style=\\\"font-weight:bold\\\">Type de profil:</label>\\r\\n                                <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;color: black;\\\" bindValue=\\\"libelle\\\"  bindLabel=\\\"libelle\\\" [items]=\\\"technologies\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.technologie\\\" name=\\\"technologie\\\"  >\\r\\n                                    </ng-select>\\r\\n                                \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"nomSourceur\\\" style=\\\"font-weight:bold\\\">Nom Sourceur :</label>\\r\\n                                \\r\\n                                    <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;color: black;\\\" bindValue=\\\"nom\\\"  bindLabel=\\\"nom\\\" [items]=\\\"listSourceur\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.nomSourceur\\\" name=\\\"nomSourceur\\\"  >\\r\\n                                    </ng-select>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenomSourceur\\\" style=\\\"font-weight:bold\\\">Prenom Sourceur :</label>\\r\\n                                \\r\\n                                    <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;color: black;\\\" bindValue=\\\"prenom\\\"  bindLabel=\\\"prenom\\\" [items]=\\\"listSourceur\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.prenomSourceur\\\" name=\\\"prenomSourceur\\\"  >\\r\\n                                    </ng-select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Region:</label>\\r\\n                                \\r\\n                                <ng-select bindValue=\\\"code\\\"  style=\\\"font-weight: bold;color: black;\\\" bindLabel=\\\"code\\\" [items]=\\\"region\\\" (search)=\\\"codePostaleOnSearch($event)\\\" \\r\\n                                [ngModel]=\\\"condidat.region\\\" (ngModelChange)=\\\"condidat.region = $event\\\" name=\\\"region\\\">\\r\\n                           </ng-select>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"region\\\" style=\\\"font-weight:bold\\\">Fraicheur CV:</label>\\r\\n                                \\r\\n\\r\\n                                <ng-select placeholder=\\\"--Sélectionner--\\\" style=\\\"font-weight: bold;color: black;\\\"\\r\\n                                [(ngModel)]=\\\"condidat.critereRecheche\\\" name=\\\"critereRecheche\\\">\\r\\n                                <ng-option [value]=\\\"1\\\">Moins 1 mois</ng-option>\\r\\n                                <ng-option [value]=\\\"2\\\">Entre 1 et 6 mois</ng-option>\\r\\n                                <ng-option [value]=\\\"3\\\">Plus de 6 mois</ng-option>\\r\\n\\r\\n                            </ng-select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n\\r\\n                    <div class=\\\"row align-items-center\\\">\\r\\n                        <div class=\\\"col-10\\\"></div>\\r\\n                        <div >\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"rechercheCandidat()\\\">Rechercher</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div style=\\\"padding-left: 5px\\\" >\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" (click)=\\\"reset()\\\" style=\\\"float: right;\\\">Réinitialiser</button>\\r\\n                        </div>\\r\\n                        <button class=\\\"btn btn-sm\\\" (click)=\\\"exportAsXLSX()\\\"  style=\\\"float:left;width: 3%;background:#EFF2F4;\\\">\\r\\n                            <img src=\\\"assets/excel-icon.png\\\">\\r\\n                          </button>\\r\\n                    </div>\\r\\n                   \\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <custom-table  [item]=\\\"condidat\\\" [actions]=\\\"actions\\\" [title]=\\\"titleTable\\\"  [parent]=\\\"this\\\" #table [columns]=\\\"columns\\\" ></custom-table>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, OnDestroy } from \"@angular/core\";\r\nimport { CandidateDto } from \"../CandidateDto\";\r\nimport { CandidatsService } from \"../../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { TechnologieService } from \"../../../services/administrationService/TechnologieService\";\r\nimport { HelperService } from \"../../../helper/helper.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { NAVIGATION_RULES, PHONE_MASK_LABEL, DATE_FORMAT, PHONE_MASK, DATE_FORMAT_MOMENT } from \"../../../helper/application.constant\";\r\nimport { RoutingState } from \"../../../helper/routing-state.service\";\r\nimport { UtilisateurService } from \"../../../services/utilisateur.service\";\r\nimport { RegionService } from \"../../../services/administrationService/region.service\";\r\nimport * as _moment from 'moment';\r\nimport { Region } from \"../../../models/region\";\r\nimport { ExcelService } from \"../../../services/excel.service\";\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n@Component({\r\n  selector: 'ngbd-dropdown-basic',\r\n  templateUrl: 'listeNouveauxCandidats.component.html',\r\n  styleUrls: [\"listeNouveauxCandidats.component.css\"]\r\n\r\n})\r\nexport class listeNouveauxCandidatsComponent implements OnInit, OnDestroy {\r\n\r\n  titleTable = \"List Nouveaux Condidats \"\r\n\r\n  @ViewChild(\"table\")\r\n  table;\r\n\r\n  actions = {\r\n    visible: true,\r\n    title: 'Actions',\r\n    items: [\r\n      {\r\n        icon: 'fa fa-edit',\r\n        class: 'btn-outline-success btn btn-sm',\r\n        tooltip: 'Détails',\r\n        action: (e) => {\r\n          this.openDetails(e);\r\n        }\r\n      },\r\n      {\r\n        icon: 'fa fa-download',\r\n        class: 'btn-outline-warning btn btn-sm',\r\n        tooltip: 'Telecharger CV',\r\n        action:\r\n          (e) => {\r\n            this.downloadCV(e);\r\n          }\r\n      }\r\n    ]\r\n  }\r\n\r\n  columns = [\r\n    {\r\n      data: 'nom',\r\n      title: 'Nom',\r\n      visible: true,\r\n    },\r\n    {\r\n      data: 'prenom',\r\n      title: 'Prenom',\r\n      visible: true,\r\n      align: 'center'\r\n    },\r\n    {\r\n      data: 'numeroTel',\r\n      title: 'N° Téléphone',\r\n      visible: true,\r\n      mask: PHONE_MASK_LABEL,\r\n      align: 'center'\r\n    },\r\n    {\r\n      data: 'email',\r\n      title: 'Email',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'dateInscription',\r\n      title: 'Date inscription',\r\n      visible: true,\r\n      dateFormat: DATE_FORMAT\r\n    },\r\n    {\r\n      data: 'technologie',\r\n      title: 'Type de profil',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'region',\r\n      title: 'Région',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'nomSourceur',\r\n      title: 'Nom sourceur',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'prenomSourceur',\r\n      title: 'Prénom sourceur',\r\n      visible: true\r\n    }\r\n  ]\r\n  mask: any[] = PHONE_MASK;\r\n  technologies = []\r\n  candidats: any[];\r\n  listSourceur: any[];\r\n  condidat: CandidateDto = new CandidateDto();\r\n  CritereRecheche: [\r\n    { value: '1', text: 'Moins 1 mois' },\r\n    { value: '2', text: 'Entre 1 et 6 mois' },\r\n    { value: '3', text: 'Plus de 6 mois' }\r\n  ];\r\n  region: Array<Region> = [];\r\n\r\n\r\n  constructor(private router: Router,\r\n    private technologiesService: TechnologieService,\r\n    private candidatsService: CandidatsService,\r\n    private helperService: HelperService,\r\n    private routingState: RoutingState,\r\n    private notifierService: NotifierService,\r\n    private utilisateurService: UtilisateurService,\r\n    private regionService: RegionService,\r\n    private excelService:ExcelService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.routingState.getPreviousUrl().indexOf('details') > -1)\r\n      this.condidat = this.helperService.listNouveauxCandidatRecherche;\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    }),\r\n      this.utilisateurService.getAllSourceurs().subscribe(data => {\r\n        this.listSourceur = data\r\n      })\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.helperService.listNouveauxCandidatRecherche = this.condidat;\r\n  }\r\n  rechercheCandidat() {\r\n    let callBack = (e) => {\r\n      this.notifierService.notify(\"info\", \"Nombre Candidat : \" + this.table.maxlenght)\r\n    }\r\n    this.table.setPage(1, callBack);\r\n  }\r\n  initTableFunction() {\r\n    this.rechercheCandidat()\r\n  }\r\n  recherche(item, page, size, allValue) {\r\n    return this.candidatsService.rechercheNouveauxcandidats(item, page, size)\r\n  }\r\n\r\n  rechercheNbr(item, allValue) {\r\n    return this.candidatsService.rechercheNouveauxcandidatsNbr(item)\r\n  }\r\n\r\n  reset() {\r\n    this.condidat = new CandidateDto();\r\n    this.table.item= this.condidat;\r\n    this.rechercheCandidat();\r\n  }\r\n\r\n\r\n\r\n\r\n  public downloadCV(candidat) {\r\n    this.candidatsService.getCvCandidats(candidat).subscribe(res => {\r\n      let file = res;\r\n      var url = window.URL.createObjectURL(file.data);\r\n      var a = document.createElement('a');\r\n      document.body.appendChild(a);\r\n      a.setAttribute('style', 'display: none');\r\n      a.href = url;\r\n      a.download = file.filename;\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      a.remove(); // remove the element     \r\n\r\n    })\r\n  }\r\n\r\n  public openDetails(candidat) {\r\n    this.router.navigate([NAVIGATION_RULES.candidats.url + '/' + NAVIGATION_RULES.candidats.details.replace(':id', candidat.id)]);\r\n  }\r\n\r\n\r\n  public exportAsXLSX(): void {\r\n    this.candidatsService.rechercheNouveauxcandidats(this.table.item, 0, this.table.maxlenght).subscribe(data => {\r\n      this.excelService.exportAsExcelFile(data,this.titleTable,this.columns);\r\n    })\r\n  }\r\n\r\n  public codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.regionService.completeRegion(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.region = [...  this.region, element]\r\n        });\r\n      })\r\n    else this.region = []\r\n  }\r\n}\r\n","module.exports = \".card {\\r\\n    margin-bottom: 1.5rem;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Recherche</label>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Nom:</label>\\r\\n                            <input style=\\\"font-weight: bold;color: black;\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nom\\\" [(ngModel)]=\\\"condidat.nom\\\" id=\\\"nom\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Prénom :</label>\\r\\n                            <input style=\\\"font-weight: bold;color: black;\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"numeroTel\\\" style=\\\"font-weight:bold\\\">N° téléphone:</label>\\r\\n                            <input style=\\\"font-weight: bold;color: black;\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.numeroTel\\\" id=\\\"numeroTel\\\" [textMask]=\\\"{mask: mask}\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"email\\\" style=\\\"font-weight:bold\\\">Email:</label>\\r\\n                            <input style=\\\"font-weight: bold;color: black;\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"condidat.email\\\" id=\\\"email\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Type de profil:</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"libelle\\\"  bindLabel=\\\"libelle\\\" [items]=\\\"technologies\\\" [(ngModel)]=\\\"condidat.technologie\\\" name=\\\"technologie\\\"  >\\r\\n                                </ng-select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"dateEntretien\\\" style=\\\"font-weight:bold\\\">Date entretien:</label>\\r\\n                                <input style=\\\"font-weight: bold;color: black;\\\" [owlDateTimeFilter]=\\\"dateEntretienDateFilter\\\"\\r\\n                                    [owlDateTimeTrigger]=\\\"dateEntretien\\\" [owlDateTime]=\\\"dateEntretien\\\" class=\\\"form-control\\\"\\r\\n                                    name=\\\"dateEntretien\\\" [(ngModel)]=\\\"condidat.dateEntretien\\\" id=\\\"dateEntretien\\\">\\r\\n                                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dateEntretien></owl-date-time>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"profil\\\" style=\\\"font-weight:bold\\\">Lieu entretien:</label> \\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"libelle\\\"  bindLabel=\\\"libelle\\\" [items]=\\\"lieux\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.lieuEntretien\\\" name=\\\"lieuEntretien\\\"  >\\r\\n                                </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\"  style=\\\"font-weight:bold\\\">Disponibilité:</label>\\r\\n\\r\\n                          <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"value\\\"  bindLabel=\\\"label\\\" [items]=\\\"refDisponibilite\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.disponibilite\\\" name=\\\"disponibilite\\\"  >\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\"  style=\\\"font-weight:bold\\\">Region:</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" bindValue=\\\"code\\\"  bindLabel=\\\"code\\\" [items]=\\\"region\\\" (search)=\\\"codePostaleOnSearch($event)\\\" \\r\\n                                [ngModel]=\\\"condidat.region\\\" (ngModelChange)=\\\"condidat.region = $event\\\" name=\\\"region\\\">\\r\\n                           </ng-select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Date Relance:</label>\\r\\n                          <month-year-picker (changed)=\\\"updateDateRelance($event)\\\" [(ngModel)]=\\\"condidat.dateRelance\\\"></month-year-picker>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"nomSourceur\\\" style=\\\"font-weight:bold\\\">Nom Sourceur :</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"nom\\\"  bindLabel=\\\"nom\\\" [items]=\\\"listSourceur\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.nomSourceur\\\" name=\\\"nomSourceur\\\"  >\\r\\n                            </ng-select>\\r\\n                                \\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenomSourceur\\\" style=\\\"font-weight:bold\\\">Prenom Sourceur :</label>\\r\\n                            <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"prenom\\\"  bindLabel=\\\"prenom\\\" [items]=\\\"listSourceur\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.prenomSourceur\\\" name=\\\"prenomSourceur\\\"  >\\r\\n                            </ng-select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\" for=\\\"nomCharge\\\" style=\\\"font-weight:bold\\\">Nom charge :</label>\\r\\n                               \\r\\n                                        <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"nom\\\"  bindLabel=\\\"nom\\\" [items]=\\\"listCarge\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.nomCharge\\\" name=\\\"nomCharge\\\"  >\\r\\n                                        </ng-select>\\r\\n        \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-2\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\" for=\\\"prenomCharge\\\" style=\\\"font-weight:bold\\\">Prenom charge :</label>\\r\\n                                   \\r\\n                                        <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"prenom\\\"  bindLabel=\\\"prenom\\\" [items]=\\\"listCarge\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.prenomCharge\\\" name=\\\"prenomCharge\\\"  >\\r\\n                                        </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-col-form-label\\\" for=\\\"statut\\\" style=\\\"font-weight:bold\\\">Statut :</label>\\r\\n                                      \\r\\n                                      <ng-select style=\\\"font-weight: bold;color: black;\\\" placeholder=\\\"--Sélectionner--\\\" bindValue=\\\"value\\\"  bindLabel=\\\"label\\\" [items]=\\\"refStatut\\\"    [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"condidat.statut\\\" name=\\\"disponibilite\\\"  >\\r\\n                                        </ng-select>\\r\\n                                    </div>\\r\\n                           </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                        <div class=\\\"col-10\\\"></div>\\r\\n                        <div >\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"rechercheCandidat()\\\">Rechercher</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div style=\\\"padding-left: 5px\\\" >\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-danger\\\" (click)=\\\"reset()\\\" style=\\\"float: right;\\\">Réinitialiser</button>\\r\\n                        </div>\\r\\n                        <button class=\\\"btn btn-sm\\\" (click)=\\\"exportAsXLSX()\\\"  style=\\\"float:left;width: 3%;background:#EFF2F4;\\\">\\r\\n                            <img src=\\\"assets/excel-icon.png\\\">\\r\\n                          </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n <custom-table [item]=\\\"condidat\\\" [actions]=\\\"actions\\\" [title]=\\\"titleTable\\\" [parent]=\\\"this\\\" #table [columns]=\\\"columns\\\" ></custom-table>\\r\\n       \\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ViewChild, forwardRef } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { CandidateDto } from \"../CandidateDto\";\r\nimport { CandidatsService } from \"../../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { OriginesService } from \"../../../services/administrationService/origines.service\";\r\nimport { CompetencesService } from \"../../../services/administrationService/competences.service\";\r\nimport { TechnologieService } from \"../../../services/administrationService/TechnologieService\";\r\nimport { LieuxService } from \"../../../services/administrationService/Lieux.service.\";\r\nimport { HelperService } from \"../../../helper/helper.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CodePostalService } from \"../../../services/administrationService/code-postal.service\";\r\nimport { CodePostal } from \"../../../models/CodePostal\";\r\nimport { RegionService } from \"../../../services/administrationService/region.service\";\r\nimport { Region } from \"../../../models/region\";\r\nimport { NAVIGATION_RULES, PHONE_MASK_LABEL, DATE_FORMAT,PHONE_MASK, DATE_FORMAT_MOMENT } from \"../../../helper/application.constant\";\r\nimport { Status } from \"../../../models/enum/Status\";\r\nimport { Disponibilite } from \"../../../models/enum/Disponibilite\";\r\nimport { RoutingState } from \"../../../helper/routing-state.service\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { UtilisateurService } from \"../../../services/utilisateur.service\";\r\nimport { ExcelService } from \"../../../services/excel.service\";\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\nimport * as _moment from 'moment';\r\n\r\n\r\n@Component({\r\n  selector: 'list',\r\n  templateUrl: 'listeTousCandidats.component.html',\r\n  styleUrls: [\"listeTousCandidats.component.css\"]\r\n})\r\nexport class listeTousCandidatsComponent implements OnInit, OnDestroy {\r\n\r\ntitleTable=\"List Tous les Condidats \"\r\n\r\n  @ViewChild(\"table\")\r\n  table;\r\n\r\n  actions = {\r\n    visible:true,\r\n    title:'Actions',\r\n    items:[\r\n    {\r\n      icon: 'fa fa-edit',\r\n      class: 'btn-outline-success btn btn-sm',\r\n      tooltip:'Détails',\r\n      action: (e) => {\r\n        this.openDetails(e);    \r\n      }\r\n    },\r\n    {\r\n      icon: 'fa fa-download',\r\n      class: 'btn-outline-warning btn btn-sm',\r\n      tooltip:'Telecharger CV',\r\n      action:\r\n        (e) => {\r\n          this.downloadCV(e);\r\n        }\r\n    }\r\n  ]\r\n  }\r\n\r\n  columns = [\r\n    {\r\n      data: 'nom',\r\n      title: 'Nom',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'prenom',\r\n      title: 'Prenom',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'numeroTel',\r\n      title: 'N° Téléphone',\r\n      visible: true,\r\n      mask: PHONE_MASK_LABEL\r\n    },\r\n    {\r\n      data: 'email',\r\n      title: 'Email',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'dateInscription',\r\n      title: 'Date inscription',\r\n      visible: true,\r\n      dateFormat: DATE_FORMAT\r\n    },\r\n    {\r\n      data: 'statut',\r\n      title: 'Délai Traitement\t',\r\n      visible: true,\r\n      html: false,\r\n      rendered: (e) => {\r\n        return e.dateEntretien != null && e.dateInscription!=null \r\n        ?Math.ceil((new Date(   _moment(e.dateEntretien).format(\"MM/DD/YYYY\")   ).getTime() -    new Date(   _moment(e.dateInscription).format(\"MM/DD/YYYY\")   ).getTime()) / (1000 * 3600 * 24))+\" (J)\" : \" - \"\r\n      }\r\n    },\r\n    {\r\n      data: 'statut',\r\n      title: 'Statut',\r\n      visible: false,\r\n      html: false,\r\n      rendered: (e) => {\r\n        return Status[e.statut]\r\n      }\r\n    },\r\n    {\r\n      data: 'dateRelance',\r\n      title: 'Date relance',\r\n      visible: true,\r\n      dateFormat: DATE_FORMAT\r\n    },\r\n    {\r\n      data: 'technologie',\r\n      title: 'Type de profil',\r\n      visible: false\r\n    },\r\n    {\r\n      data: 'region',\r\n      title: 'Région',\r\n      visible: false\r\n    },\r\n    {\r\n      data: 'nomSourceur',\r\n      title: 'Nom sourceur',\r\n      visible: false\r\n    },\r\n    {\r\n      data: 'prenomSourceur',\r\n      title: 'Prénom sourceur',\r\n      visible: false\r\n    },\r\n    {\r\n      data: 'dateEntretien',\r\n      title: 'Date entretien',\r\n      visible: true,\r\n      dateFormat: DATE_FORMAT\r\n    },\r\n    {\r\n      data: 'lieuEntretien',\r\n      title: 'Lieu entretien',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'disponibilite',\r\n      title: 'Disponible',\r\n      visible: true,\r\n      html: false,\r\n      rendered: (e) => {\r\n        return Disponibilite[e.disponibilite]\r\n      }\r\n    },\r\n    {\r\n      data: 'nomCharge',\r\n      title: 'Nom charge',\r\n      visible: true\r\n    },\r\n    {\r\n      data: 'prenomCharge',\r\n      title: 'Prénom charge',\r\n      visible: true\r\n    }\r\n  ]\r\n\r\n  public loading = false;\r\n  technologies = []\r\n  lieux = []\r\n\r\n  mask: any[] = PHONE_MASK;\r\n\r\n  region: Array<Region> = [];\r\n  refStatut = this.helperService.buildStatutArray();\r\n  refDisponibilite = this.helperService.buildDisponibiliteArray();\r\n  condidat: CandidateDto = new CandidateDto();\r\n  listSourceur: any[];\r\n  listCarge: any[];\r\n\r\n\r\n\r\n  constructor(private router: Router, private candidatsService: CandidatsService, private routingState: RoutingState,\r\n    private notifierService: NotifierService, private technologiesService: TechnologieService,\r\n    private lieuxService: LieuxService, private helperService: HelperService, private regionService: RegionService,\r\n    private utilisateurService: UtilisateurService,\r\n    private excelService:ExcelService) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.routingState.getPreviousUrl().indexOf('details') > -1) \r\n      this.condidat = this.helperService.listTousCandidatRecherche;\r\n\r\n    this.lieuxService.findAllLieux().subscribe(data => {\r\n      this.lieux = data;\r\n    })\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n    this.utilisateurService.getAllSourceurs().subscribe(data=>{\r\n      this.listSourceur=data\r\n    })\r\n    this.utilisateurService.getAllChages().subscribe(data=>{\r\n      this.listCarge=data\r\n    })\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.helperService.listTousCandidatRecherche = this.condidat;\r\n  }\r\n\r\n  initTableFunction(){\r\n    this.rechercheCandidat()\r\n  }\r\n  rechercheCandidat() {\r\n    let callBack = (e) => {\r\n      this.notifierService.notify(\"info\", \"Nombre Candidat : \" + this.table.maxlenght)\r\n    }\r\n    this.table.setPage(1, callBack);\r\n  }\r\n\r\n\r\n  recherche(item, page, size,allValue) {\r\n    return this.candidatsService.rechercheTouscandidats(item, page, size)\r\n  }\r\n\r\n  rechercheNbr(item,allValue){\r\n    return this.candidatsService.rechercheTouscandidatsNbr(item) \r\n  }\r\n  \r\n  reset() {\r\n    this.condidat = new CandidateDto();\r\n    this.table.item= this.condidat;\r\n    this.rechercheCandidat();\r\n  }\r\n\r\n\r\n  downloadCV(candidat) {\r\n    this.candidatsService.getCvCandidats(candidat).subscribe(res => {\r\n      let file = res;\r\n      var url = window.URL.createObjectURL(file.data);\r\n      var a = document.createElement('a');\r\n      document.body.appendChild(a);\r\n      a.setAttribute('style', 'display: none');\r\n      a.href = url;\r\n      a.download = file.filename;\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      a.remove(); // remove the element     \r\n\r\n    })\r\n  }\r\n\r\n  codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.regionService.completeRegion(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.region = [...  this.region, element]\r\n        });\r\n      })\r\n    else this.region = []\r\n  }\r\n\r\n  private updateDateRelance(date: Date) {\r\n    this.condidat.dateRelance = date\r\n  }\r\n\r\n  openDetails(candidat) {\r\n    this.router.navigate([NAVIGATION_RULES.candidats.url + '/' + NAVIGATION_RULES.candidats.details.replace(':id', candidat.id)]);\r\n  }\r\n\r\n  public exportAsXLSX():void {\r\n    this.candidatsService.rechercheTouscandidats(this.table.item, 0, this.table.maxlenght).subscribe(data => {\r\n      this.excelService.exportAsExcelFile(data,this.titleTable,this.columns);\r\n    })\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}