{"version":3,"sources":["webpack:///./node_modules/ng-pick-datetime-moment/index.js","webpack:///./node_modules/ng-pick-datetime-moment/moment-adapter/moment-date-time-adapter.class.js","webpack:///./node_modules/ng-pick-datetime-moment/moment-adapter/moment-date-time-format.class.js","webpack:///./node_modules/ng-pick-datetime-moment/moment-adapter/moment-date-time.module.js","webpack:///./src/app/helper/month-year-picker.ts","webpack:///./src/app/models/Technologie.ts","webpack:///./src/app/services/entretien-service.ts","webpack:///./src/app/views/candidats/candidats-routing.module.ts","webpack:///./src/app/views/candidats/candidats.component.css","webpack:///./src/app/views/candidats/candidats.component.html","webpack:///./src/app/views/candidats/candidats.component.ts","webpack:///./src/app/views/candidats/candidats.module.ts","webpack:///./src/app/views/candidats/fiche-candidat/CandidatDetailResolve.ts","webpack:///./src/app/views/candidats/fiche-candidat/fiche-candidat.component.html","webpack:///./src/app/views/candidats/fiche-candidat/fiche-candidat.component.scss","webpack:///./src/app/views/candidats/fiche-candidat/fiche-candidat.component.ts","webpack:///./src/app/views/candidats/listeCandidatArelancer/listeCandidatArelancer.component.html","webpack:///./src/app/views/candidats/listeCandidatArelancer/listeCandidatArelancer.component.ts","webpack:///./src/app/views/candidats/listeNouveauxCandidats/listeNouveauxCandidats.component.css","webpack:///./src/app/views/candidats/listeNouveauxCandidats/listeNouveauxCandidats.component.html","webpack:///./src/app/views/candidats/listeNouveauxCandidats/listeNouveauxCandidats.component.ts","webpack:///./src/app/views/candidats/listeTousCandidats/listeTousCandidats.component.html","webpack:///./src/app/views/candidats/listeTousCandidats/listeTousCandidats.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AACD;AACoB;;;;;;;;;;;;;ACFnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC4E;AACJ;AAChC;AACzC,aAAa,oDAAe,GAAG,oDAAe,GAAG,0CAAO;AACjD,+CAA+C,4DAAc;AACpE;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qDAAqD,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C,iCAAiC,aAAa;AAC9C,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"views-candidats-candidats-module.js","sourcesContent":["export * from './moment-adapter/moment-date-time-adapter.class';\nexport * from './moment-adapter/moment-date-time-format.class';\nexport { OwlMomentDateTimeModule } from './moment-adapter/moment-date-time.module';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Inject, Injectable, Optional, InjectionToken } from '@angular/core';\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from 'ng-pick-datetime';\nimport * as _moment from 'moment/moment';\nvar moment = _moment.default ? _moment.default : _moment;\nexport var OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS = new InjectionToken('OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY\n});\nexport function OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\nfunction range(length, valueFunction) {\n    var valuesArray = Array(length);\n    for (var i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\nvar MomentDateTimeAdapter = (function (_super) {\n    __extends(MomentDateTimeAdapter, _super);\n    function MomentDateTimeAdapter(owlDateTimeLocale, options) {\n        var _this = _super.call(this) || this;\n        _this.owlDateTimeLocale = owlDateTimeLocale;\n        _this.options = options;\n        _this.setLocale(owlDateTimeLocale || moment.locale());\n        return _this;\n    }\n    MomentDateTimeAdapter.prototype.setLocale = function (locale) {\n        var _this = this;\n        _super.prototype.setLocale.call(this, locale);\n        var momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n            dates: range(31, function (i) { return _this.createDate(2017, 0, i + 1).format('D'); }),\n        };\n    };\n    MomentDateTimeAdapter.prototype.getYear = function (date) {\n        return this.clone(date).year();\n    };\n    MomentDateTimeAdapter.prototype.getMonth = function (date) {\n        return this.clone(date).month();\n    };\n    MomentDateTimeAdapter.prototype.getDay = function (date) {\n        return this.clone(date).day();\n    };\n    MomentDateTimeAdapter.prototype.getDate = function (date) {\n        return this.clone(date).date();\n    };\n    MomentDateTimeAdapter.prototype.getHours = function (date) {\n        return this.clone(date).hours();\n    };\n    MomentDateTimeAdapter.prototype.getMinutes = function (date) {\n        return this.clone(date).minutes();\n    };\n    MomentDateTimeAdapter.prototype.getSeconds = function (date) {\n        return this.clone(date).seconds();\n    };\n    MomentDateTimeAdapter.prototype.getTime = function (date) {\n        return this.clone(date).valueOf();\n    };\n    MomentDateTimeAdapter.prototype.getNumDaysInMonth = function (date) {\n        return this.clone(date).daysInMonth();\n    };\n    MomentDateTimeAdapter.prototype.differenceInCalendarDays = function (dateLeft, dateRight) {\n        return this.clone(dateLeft).diff(dateRight, 'days');\n    };\n    MomentDateTimeAdapter.prototype.getYearName = function (date) {\n        return this.clone(date).format('YYYY');\n    };\n    MomentDateTimeAdapter.prototype.getMonthNames = function (style) {\n        return style === 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    };\n    MomentDateTimeAdapter.prototype.getDayOfWeekNames = function (style) {\n        if (style === 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style === 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    };\n    MomentDateTimeAdapter.prototype.getDateNames = function () {\n        return this._localeData.dates;\n    };\n    MomentDateTimeAdapter.prototype.toIso8601 = function (date) {\n        return this.clone(date).format();\n    };\n    MomentDateTimeAdapter.prototype.isEqual = function (dateLeft, dateRight) {\n        if (dateLeft && dateRight) {\n            return this.clone(dateLeft).isSame(this.clone(dateRight));\n        }\n        return dateLeft === dateRight;\n    };\n    MomentDateTimeAdapter.prototype.isSameDay = function (dateLeft, dateRight) {\n        if (dateLeft && dateRight) {\n            return this.clone(dateLeft).isSame(this.clone(dateRight), 'day');\n        }\n        return dateLeft === dateRight;\n    };\n    MomentDateTimeAdapter.prototype.isValid = function (date) {\n        return this.clone(date).isValid();\n    };\n    MomentDateTimeAdapter.prototype.invalid = function () {\n        return moment.invalid();\n    };\n    MomentDateTimeAdapter.prototype.isDateInstance = function (obj) {\n        return moment.isMoment(obj);\n    };\n    MomentDateTimeAdapter.prototype.addCalendarYears = function (date, amount) {\n        return this.clone(date).add({ years: amount });\n    };\n    MomentDateTimeAdapter.prototype.addCalendarMonths = function (date, amount) {\n        return this.clone(date).add({ months: amount });\n    };\n    MomentDateTimeAdapter.prototype.addCalendarDays = function (date, amount) {\n        return this.clone(date).add({ days: amount });\n    };\n    MomentDateTimeAdapter.prototype.setHours = function (date, amount) {\n        return this.clone(date).hours(amount);\n    };\n    MomentDateTimeAdapter.prototype.setMinutes = function (date, amount) {\n        return this.clone(date).minutes(amount);\n    };\n    MomentDateTimeAdapter.prototype.setSeconds = function (date, amount) {\n        return this.clone(date).seconds(amount);\n    };\n    MomentDateTimeAdapter.prototype.createDate = function (year, month, date, hours, minutes, seconds) {\n        if (hours === void 0) { hours = 0; }\n        if (minutes === void 0) { minutes = 0; }\n        if (seconds === void 0) { seconds = 0; }\n        if (month < 0 || month > 11) {\n            throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n        }\n        if (date < 1) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n        }\n        if (hours < 0 || hours > 23) {\n            throw Error(\"Invalid hours \\\"\" + hours + \"\\\". Hours has to be between 0 and 23.\");\n        }\n        if (minutes < 0 || minutes > 59) {\n            throw Error(\"Invalid minutes \\\"\" + minutes + \"\\\". Minutes has to between 0 and 59.\");\n        }\n        if (seconds < 0 || seconds > 59) {\n            throw Error(\"Invalid seconds \\\"\" + seconds + \"\\\". Seconds has to be between 0 and 59.\");\n        }\n        var result = this.createMoment({ year: year, month: month, date: date, hours: hours, minutes: minutes, seconds: seconds }).locale(this.locale);\n        if (!result.isValid()) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n        }\n        return result;\n    };\n    MomentDateTimeAdapter.prototype.clone = function (date) {\n        return this.createMoment(date).clone().locale(this.locale);\n    };\n    MomentDateTimeAdapter.prototype.now = function () {\n        return this.createMoment().locale(this.locale);\n    };\n    MomentDateTimeAdapter.prototype.format = function (date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateTimeAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    };\n    MomentDateTimeAdapter.prototype.parse = function (value, parseFormat) {\n        if (value && typeof value === 'string') {\n            return this.createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this.createMoment(value).locale(this.locale) : null;\n    };\n    MomentDateTimeAdapter.prototype.deserialize = function (value) {\n        var date;\n        if (value instanceof Date) {\n            date = this.createMoment(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this.createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return date;\n        }\n        return _super.prototype.deserialize.call(this, value);\n    };\n    MomentDateTimeAdapter.prototype.createMoment = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return (this.options && this.options.useUtc) ? moment.utc.apply(moment, args) : moment.apply(void 0, args);\n    };\n    MomentDateTimeAdapter.decorators = [\n        { type: Injectable },\n    ];\n    MomentDateTimeAdapter.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [OWL_DATE_TIME_LOCALE,] },] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS,] },] },\n    ]; };\n    return MomentDateTimeAdapter;\n}(DateTimeAdapter));\nexport { MomentDateTimeAdapter };\n","export var OWL_MOMENT_DATE_TIME_FORMATS = {\n    parseInput: 'l LT',\n    fullPickerInput: 'l LT',\n    datePickerInput: 'l',\n    timePickerInput: 'LT',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n};\n","import { NgModule } from '@angular/core';\nimport { MomentDateTimeAdapter, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS } from './moment-date-time-adapter.class';\nimport { OWL_MOMENT_DATE_TIME_FORMATS } from './moment-date-time-format.class';\nimport { DateTimeAdapter, OWL_DATE_TIME_FORMATS, OWL_DATE_TIME_LOCALE } from 'ng-pick-datetime';\nvar MomentDateTimeModule = (function () {\n    function MomentDateTimeModule() {\n    }\n    MomentDateTimeModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        {\n                            provide: DateTimeAdapter,\n                            useClass: MomentDateTimeAdapter,\n                            deps: [OWL_DATE_TIME_LOCALE, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS]\n                        },\n                    ],\n                },] },\n    ];\n    return MomentDateTimeModule;\n}());\nexport { MomentDateTimeModule };\nvar ɵ0 = OWL_MOMENT_DATE_TIME_FORMATS;\nvar OwlMomentDateTimeModule = (function () {\n    function OwlMomentDateTimeModule() {\n    }\n    OwlMomentDateTimeModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MomentDateTimeModule],\n                    providers: [{ provide: OWL_DATE_TIME_FORMATS, useValue: ɵ0 }],\n                },] },\n    ];\n    return OwlMomentDateTimeModule;\n}());\nexport { OwlMomentDateTimeModule };\nexport { ɵ0 };\n","import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, OnInit } from '@angular/core';\r\n\r\nimport * as _moment from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { OwlDateTimeComponent, DateTimeAdapter, OWL_DATE_TIME_FORMATS, OWL_DATE_TIME_LOCALE, OwlDateTimeFormats } from 'ng-pick-datetime';\r\nimport { MomentDateTimeAdapter } from 'ng-pick-datetime-moment';\r\n\r\nconst moment = (_moment as any).default ? (_moment as any).default : _moment;\r\nexport const MY_MOMENT_DATE_TIME_FORMATS: OwlDateTimeFormats = {\r\n  parseInput: 'MM/YYYY',\r\n  fullPickerInput: 'l LT',\r\n  datePickerInput: 'MM/YYYY',\r\n  timePickerInput: 'LT',\r\n  monthYearLabel: 'MMM YYYY',\r\n  dateA11yLabel: 'LL',\r\n  monthYearA11yLabel: 'MMMM YYYY',\r\n};\r\nimport {\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'month-year-picker',\r\n  template: `\r\n  <input  [owlDateTimeTrigger]=\"dtdateObtentionDiplome\"\r\n  [owlDateTime]=\"dtdateObtentionDiplome\" class=\"form-control\" name=\"dateObtentionDiplome\" \r\n    [formControl]=\"dateTime\" id=\"dateObtentionDiplome\">\r\n\r\n<owl-date-time [pickerType]=\"'calendar'\"\r\n[startView]=\"'multi-years'\"\r\n(yearSelected)=\"chosenYearHandler($event)\"\r\n(monthSelected)=\"chosenMonthHandler($event, dtdateObtentionDiplome)\"\r\n#dtdateObtentionDiplome=\"owlDateTime\"></owl-date-time>\r\n  `,\r\n  providers: [\r\n    // `MomentDateTimeAdapter` and `OWL_MOMENT_DATE_TIME_FORMATS` can be automatically provided by importing\r\n    // `OwlMomentDateTimeModule` in your applications root module. We provide it at the component level\r\n    // here, due to limitations of our example generation script.\r\n    { provide: DateTimeAdapter, useClass: MomentDateTimeAdapter, deps: [OWL_DATE_TIME_LOCALE] },\r\n\r\n    { provide: OWL_DATE_TIME_FORMATS, useValue: MY_MOMENT_DATE_TIME_FORMATS },\r\n  ],\r\n\r\n})\r\nexport class MonthYeatPickerComponent implements OnInit {\r\n  ngOnInit(): void {\r\n    if (this.innerValue != undefined) this.dateTime = new FormControl(moment(this.innerValue))\r\n  }\r\n  @Input()\r\n  private innerValue: Date;\r\n\r\n  @Output() changed = new EventEmitter<Date>();\r\n\r\n\r\n  public dateTime = new FormControl(moment());\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    const ctrlValue = this.dateTime.value;\r\n    ctrlValue.year(normalizedYear.year());\r\n    this.dateTime.setValue(ctrlValue);\r\n  }\r\n\r\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: OwlDateTimeComponent<Moment>) {\r\n    const ctrlValue = this.dateTime.value;\r\n    ctrlValue.month(normalizedMonth.month());\r\n    this.dateTime.setValue(ctrlValue);\r\n    this.changed.emit(ctrlValue.toDate())\r\n    datepicker.close();\r\n  }\r\n\r\n\r\n\r\n}","export class Technologie{\r\n    id:number;\r\n    libelle:String;\r\n    reporting:boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BACK_END_URL } from '../helper/application.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntretienService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n\tpublic createOrUpdate(entity) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\t\treturn this.httpClient.post(BACK_END_URL+\"/entretien\",entity,httpOptions)\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes,\r\n     RouterModule } from '@angular/router';\r\nimport { CandidatsComponent } from './candidats.component';\r\nimport { CandidatDetailResolve } from './fiche-candidat/CandidatDetailResolve';\r\nimport { FicheCandidatComponent } from './fiche-candidat/fiche-candidat.component';\r\nimport { listeNouveauxCandidatsComponent } from './listeNouveauxCandidats/listeNouveauxCandidats.component';\r\nimport { listeTousCandidatsComponent } from './listeTousCandidats/listeTousCandidats.component';\r\nimport { listeCandidatArelancerComponent } from './listeCandidatArelancer/listeCandidatArelancer.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CandidatsComponent,\r\n    data: {\r\n      title: 'Candidats'\r\n    }\r\n  },\r\n  \r\n    {\r\n      path: 'details/:id',\r\n      component: FicheCandidatComponent,\r\n      data: {\r\n        title: 'Candidats / '\r\n      },\r\n      resolve: {\r\n        candidat: CandidatDetailResolve \r\n      },\r\n  },\r\n  {\r\n    path: 'listeNouveauxCandidats',\r\n    component: listeNouveauxCandidatsComponent,\r\n    data: {\r\n      title: 'listeNouveauxCandidats'\r\n    }\r\n  },\r\n  {\r\n    path: 'listeTousCandidats',\r\n    component: listeTousCandidatsComponent,\r\n    data: {\r\n      title: 'listeTousCandidats'\r\n    }\r\n  },\r\n  {\r\n    path: 'listeCandidatArelancer',\r\n    component: listeCandidatArelancerComponent,\r\n    data: {\r\n      title: 'listeCandidatArelancer'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CandidatsRoutingModule {}\r\n","module.exports = \".competences {\\r\\n    border: 2px solid #C4C4C4;\\r\\n    border-radius: 12px;\\r\\n    padding: 0px;\\r\\n}\\r\\nlabel{\\r\\n    color: rgb(84, 110, 122);\\r\\n    font-size: 15px\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                        <label style=\\\"font-weight:bold;color:#546E7A;\\\">Nouveau Candidat\\r\\n                        </label>\\r\\n                        </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-3 col-md-3\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <div class=\\\"col-6 col-sm-4 col-md-2 col-xl mb-3 mb-xl-0\\\">\\r\\n                        <input (change)=\\\"uploadFiles($event)\\\" style=\\\"display: none;\\\" id=\\\"fileUpload\\\" type=\\\"file\\\"\\r\\n                            webkitdirectory mozdirectory />\\r\\n                        <button onclick=\\\"document.getElementById('fileUpload').click();\\\" style=\\\"width: 110px\\\" type=\\\"button\\\"\\r\\n                            class=\\\"btn btn-block btn-outline-primary\\\">Select. fichiers</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <dx-tree-view id=\\\"simple-treeview\\\" [items]=\\\"folders\\\" dataStructure=\\\"plain\\\" parentIdExpr=\\\"categoryId\\\"\\r\\n                        keyExpr=\\\"ID\\\" displayExpr=\\\"name\\\" (onItemClick)=\\\"selectItem($event)\\\" (onItemExpanded)=\\\"onItemExpanded($event)\\\"\\r\\n                        (onItemCollapsed)=\\\"onItemCollapsed($event)\\\"></dx-tree-view>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                    <button [disabled]=\\\"currentFile==undefined\\\" (click)=\\\"afficherPdf()\\\" style=\\\"width: 100px\\\" type=\\\"button\\\"\\r\\n                        class=\\\"btn btn-block btn-outline-primary\\\">Afficher</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.col-->\\r\\n        <div class=\\\"col-sm-9 col-md-9\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <form (ngSubmit)=\\\"onSubmit()\\\" >\\r\\n                    <div class=\\\"card-body\\\">\\r\\n\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"civilite\\\">Civilité</label>\\r\\n                                    <select [disabled]=\\\"candidateFound==false\\\" required #civilite=\\\"ngModel\\\" name=\\\"civilite\\\"\\r\\n                                    [(ngModel)]=\\\"candidate.civilite\\\" class=\\\"form-control\\\" id=\\\"civilite\\\">\\r\\n                                            <option value=\\\"M\\\">M</option>\\r\\n                                            <option value=\\\"Mme\\\">Mme</option>\\r\\n                                    </select> </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"nom\\\">Nom</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"   name=\\\"nom\\\"\\r\\n                                        [(ngModel)]=\\\"candidate.nom\\\" id=\\\"nom\\\">                                        \\r\\n                                      \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\">Prenom</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"prenom\\\"\\r\\n                                        [(ngModel)]=\\\"candidate.prenom\\\" id=\\\"prenom\\\">\\r\\n                                   \\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"email\\\">Email</label>\\r\\n                                    <input type=\\\"email\\\"  class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"candidate.email\\\"\\r\\n                                        id=\\\"email\\\">\\r\\n                                        \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"telephone\\\">Téléphone</label>\\r\\n                                    <input type=\\\"text\\\"  class=\\\"form-control\\\"  [textMask]=\\\"{mask: mask}\\\"  name=\\\"telephone\\\"\\r\\n                                        [(ngModel)]=\\\"candidate.numeroTel\\\" id=\\\"telephone\\\">\\r\\n                                       \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"origineCV\\\">Origine CV</label>\\r\\n                                    <select   [(ngModel)]=\\\"candidate.origine.id\\\"    name=\\\"origineCV\\\"\\r\\n                                    [disabled]=\\\"candidateFound===false\\\" class=\\\"form-control\\\" id=\\\"origineCV\\\">\\r\\n                                        <option value=\\\"undefined\\\">--Sélectionner--</option>\\r\\n                                        <option *ngFor=\\\"let origine of origines\\\" [value]=\\\"origine.id\\\">{{origine.libelle}}</option>\\r\\n                                    </select>\\r\\n                                   \\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"profil\\\">Profil </label>\\r\\n                                    <select [(ngModel)]=\\\"candidate.technologie.id\\\"  name=\\\"technologie\\\" [disabled]=\\\"candidateFound===false\\\" class=\\\"form-control\\\" id=\\\"profil\\\">\\r\\n                                        <option value=\\\"undefined\\\">--Sélectionner--</option>\\r\\n                                        <option *ngFor=\\\"let tech of technologies\\\" [value]=\\\"tech.id\\\">{{tech.libelle}}</option>\\r\\n                                    </select>\\r\\n                                     \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"codePostal\\\">Code postal</label>\\r\\n                                    <ng-select aria-required=\\\"\\\" [disabled]=\\\"candidateFound==false\\\" \\r\\n                                     id=\\\"codePostal\\\" [items]=\\\"codePostals\\\" (search)=\\\"codePostaleOnSearch($event)\\\" \\r\\n                                         [ngModel]=\\\"candidate?.codePostal\\\" (ngModelChange)=\\\"candidate.codePostal = $event\\\" name=\\\"codePostal\\\">\\r\\n                                        <ng-option *ngFor=\\\"let codeP of codePostals\\\" [value]=\\\"codeP\\\">{{codeP.code}}\\r\\n                                            {{codeP.ville}}</ng-option>\\r\\n\\r\\n                                    </ng-select>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label>Region</label>\\r\\n                                    <p class=\\\"form-control-static\\\">{{candidate?.codePostal?.region}}</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-4\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label>Ville</label>\\r\\n                                    <p class=\\\"form-control-static\\\">{{candidate?.codePostal?.ville}}</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row competences\\\">\\r\\n                            <div class=\\\"col-md-2 col-form-label\\\" *ngFor=\\\"let compt of competences; let i = index\\\">\\r\\n                                <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [name]=\\\"'cmp'+i\\\" [(ngModel)]=\\\"competences[i].selected\\\" id=\\\"inline-checkbox1\\\" [value]=\\\"compt.id\\\">\\r\\n                                    <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox1\\\">{{compt.libelle}}</label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-10 \\\"></div>\\r\\n                            <button (click)=\\\"recherchecandidate()\\\" style=\\\"float: right;\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-primary col-2 \\\">Rechercher</button>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"pdfSrc!=undefined\\\">\\r\\n                            <object style=\\\"margin-top: 20px\\\" [data]=\\\"pdfSrc\\\" height=\\\"450px\\\" width=\\\"100%\\\">\\r\\n                                    <param name=\\\"view\\\" value=\\\"fitH\\\" />            \\r\\n\\r\\n                            </object>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-footer\\\">\\r\\n\\r\\n                        <div class=\\\"row align-items-center\\\">\\r\\n                            <div class=\\\"col-md-6 col-form-label\\\">\\r\\n                                <div class=\\\"form-check\\\">\\r\\n                                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"candidate.cvAnonyme\\\" name=\\\"cvAnonyme\\\" value=\\\"true\\\" id=\\\"cvanonyme \\\">\\r\\n                                    <label class=\\\"form-check-label\\\" for=\\\"cvanonyme\\\">\\r\\n                                        CV anonyme\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-2\\\">\\r\\n                                <button type=\\\"button\\\" (click)=\\\"annuler()\\\" class=\\\"btn btn-block btn-primary\\\">Annuler</button>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"col-2\\\">\\r\\n                                <button (click)=\\\"submitAndRedirect()\\\" [disabled]=\\\"pdfSrc==undefined\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\">Planifier\\r\\n                                    Rdv</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-2\\\">\\r\\n                                <button  [disabled]=\\\"pdfSrc==undefined\\\" type=\\\"submit\\\" class=\\\"btn btn-block btn-primary\\\">Enregistrer</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.co2-->\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"candidatsFound.length>0\\\">\\r\\n        <div  class=\\\"col-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <i class=\\\"fa fa-align-justify\\\"></i> Candidats Trouvés\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Nom</th>\\r\\n                            <th>Prénom</th>\\r\\n                            <th>N° Téléphone</th>\\r\\n                            <th>Email</th>\\r\\n                            <th>Date Inscription</th>\\r\\n                            <th>Statut</th>\\r\\n                            <th>Type de profil</th>\\r\\n                            <th>Sourceur</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let candidat of candidatsFound\\\">\\r\\n                            <td>{{candidat.nom}}</td>\\r\\n                            <td>{{candidat.prenom}}</td>\\r\\n                            <td>{{candidat.numeroTel}}</td>\\r\\n                            <td>{{candidat.email}}</td>\\r\\n                            <td>{{candidat.dateInscription}}</td>\\r\\n                            <td>{{candidat.statut}}</td>\\r\\n                            <td>{{candidat.technologie}}</td>\\r\\n                            <td>{{candidat.nomCharge }} {{candidat.prenomSourceur}}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\\r\\n    <!--/.row-->\\r\\n</div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { Candidate } from \"../../models/Candidate\";\r\nimport { CandidatsService } from \"../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { OriginesService } from \"../../services/administrationService/origines.service\";\r\nimport { CompetencesService } from \"../../services/administrationService/competences.service\";\r\nimport { TechnologieService } from \"../../services/administrationService/TechnologieService\";\r\nimport { CodePostalService } from \"../../services/administrationService/code-postal.service\";\r\nimport { CodePostal } from \"../../models/CodePostal\";\r\nimport { Technologie } from \"../../models/Technologie\";\r\nimport { Origine } from \"../../models/Origine\";\r\nimport { Competence } from \"../../models/Competence\";\r\nimport { USER_NAME } from \"../../helper/auth.constant\";\r\nimport { UtilisateurService } from \"../../services/utilisateur.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Status } from \"../../models/enum/Status\";\r\n\r\n@Component({\r\n  templateUrl: 'candidats.component.html',\r\n  styleUrls: [\"candidats.component.css\"]\r\n})\r\nexport class CandidatsComponent implements OnInit, OnDestroy {\r\n  ngOnDestroy(): void {\r\n    this.candidatsService.folders = this.folders;\r\n  }\r\n\r\n  candidate: Candidate;\r\n  codePostals: Array<CodePostal> = [];\r\n  technologies: Array<Technologie> = []\r\n  origines: Array<Origine> = []\r\n  competences: Array<Competence> = []\r\n  candidatsFound: Array<Candidate> = []\r\n  candidateFound: boolean;\r\n  pdfSrc;\r\n  folders;\r\n  currentFile: any;\r\n  listNomCvs = []\r\n  allFiles = []\r\n  mask: any[] = [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/];\r\n\r\n\r\n  constructor(private router:Router,private utilisateurService: UtilisateurService, private codePostalService: CodePostalService, private originesService: OriginesService, private technologiesService: TechnologieService,\r\n    private sanitizer: DomSanitizer, private candidatsService: CandidatsService,\r\n    private notifierService: NotifierService, private competencesService: CompetencesService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n    this.originesService.findAllOrigines().subscribe(data => {\r\n      this.origines = data;\r\n    })\r\n    this.competencesService.findAllCompetences().subscribe(data => {\r\n      this.competences = data;\r\n    })\r\n    this.candidatsService.getListNomCvs().subscribe(data => {\r\n      this.listNomCvs = data;\r\n      this.folders = this.folders.filter(element => {\r\n        return this.listNomCvs.indexOf(element.name) == -1\r\n      });\r\n    })\r\n\r\n   this.candidate= new Candidate();\r\n   this.candidateFound=false\r\n    this.candidate.creePar.id = this.utilisateurService.getConnetedUserInfo().id\r\n    this.folders = this.candidatsService.folders;\r\n  \r\n    this.currentFile = {};\r\n    this.pdfSrc = null\r\n  }\r\n\r\n\r\n  //#region Tree Setting\r\n  selectItem(e) {\r\n    if (e.itemData.type == \"file\")\r\n      this.currentFile = e.itemData;\r\n  }\r\n  uploadFiles(event) {\r\n    if (event.target.files && event.target.files.length) {\r\n      this.allFiles = event.target.files\r\n      this.createFilesStructure(event.target.files)\r\n    }\r\n  }\r\n  createFilesStructure(files) {\r\n    var structure = []\r\n    var filteredfiles = []\r\n    Array.from(files).forEach((element: any) => {\r\n      if ((element.type == \"application/pdf\" || element.type == \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n        || element.type == \"application/msword\"\r\n        || element.type == \"application/octet-stream\") && this.listNomCvs.indexOf(element.name) == -1)\r\n\r\n        filteredfiles.push(element)\r\n    });\r\n\r\n    structure = this.generateParentFolder(filteredfiles);\r\n\r\n    Array.from(filteredfiles).forEach((element: any) => {\r\n      let categoryId = element.webkitRelativePath.split('/')\r\n      categoryId.pop()\r\n      structure.push({\r\n        name: element.name,\r\n        file: element,\r\n        ID: element.webkitRelativePath.split('/').join('_'),\r\n        categoryId: categoryId.join('_'),\r\n        expanded: false,\r\n        type: 'file',\r\n        icon: \"assets/img/tree/file-pdf-regular.svg\"\r\n      })\r\n    });\r\n    this.folders = structure;\r\n  }\r\n  generateParentFolder(files) {\r\n    var structure = []\r\n    Array.from(files).forEach((element: any) => {\r\n      element.webkitRelativePath.replace(\"_\", \"UnderReplaced\")\r\n      let ID = element.webkitRelativePath.split('/')\r\n      while (ID.length > 1) {\r\n        ID.pop()\r\n        var node = {\r\n          name: ID[ID.length - 1].replace(\"UnderReplaced\", \"_\"),\r\n          ID: ID.join('_'),\r\n          file: element,\r\n          expanded: false,\r\n          type: 'folder',\r\n          icon: \"assets/img/tree/folder-solid.svg\"\r\n        }\r\n        if (ID.length > 1) {\r\n          let tempId = []\r\n          ID.forEach(element => {\r\n            tempId.push(element)\r\n          });\r\n          tempId.pop()\r\n          node['categoryId'] = tempId.join('_')\r\n        }\r\n        structure.push(node)\r\n      }\r\n    });\r\n\r\n\r\n    var tempAray = []\r\n    structure.forEach(element => {\r\n      var inTable = false;\r\n      tempAray.forEach(element1 => {\r\n        if (element.ID == element1.ID)\r\n          inTable = true;\r\n      });\r\n      if (!inTable) tempAray.push(element)\r\n    });\r\n    return tempAray;\r\n\r\n  }\r\n  onItemExpanded(e) {\r\n    e.node.itemData.icon = \"assets/img/tree/folder-open-solid.svg\"\r\n  }\r\n  onItemCollapsed(e) {\r\n    e.node.itemData.icon = \"assets/img/tree/folder-solid.svg\"\r\n  }\r\n  //#endregion\r\n\r\n  afficherPdf() {\r\n    this.candidate.nomCV = this.currentFile.name\r\n    var reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      var fileBase64Value = reader.result + ''\r\n      var file = {\r\n        filename: this.currentFile.name,\r\n        filetype: this.currentFile.file.type,\r\n        value: fileBase64Value.split(',')[1],\r\n        loginUser: this.utilisateurService.getConnetedUserInfo().login\r\n      }\r\n      this.candidatsService.uploadWordFile(file).subscribe(data => {\r\n        this.pdfSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\"data:application/pdf;base64,\" + data.value)\r\n      })\r\n    }\r\n    reader.readAsDataURL(this.currentFile.file);\r\n  }\r\n\r\n  recherchecandidate() {\r\n    this.candidateFound = true;\r\n    if (this.candidate.nom == \"\" || this.candidate.prenom == \"\" || this.candidate.nom == undefined || this.candidate.prenom == undefined) {\r\n      this.notifierService.notify(\"info\", \"Il faut remplir au moins Nom et Prénom\")\r\n    } else {\r\n      var candidateTemp = {\r\n        nom: this.candidate.nom,\r\n        prenom: this.candidate.prenom,\r\n        email: this.candidate.email,\r\n        numeroTel: this.candidate.numeroTel\r\n      }\r\n      this.candidatsService.rechercheNouveauxcandidats(candidateTemp,0,0).subscribe((data) => {\r\n        this.candidatsFound = data\r\n        this.notifierService.notify(\"info\", \"Nombre Candidat : \" + data.length)\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.codePostalService.completeCodePostal(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.codePostals = [...  this.codePostals, element]\r\n        });\r\n      })\r\n    else this.codePostals = []\r\n  }\r\n\r\n  async onSubmit() {\r\n    let fn =(e)=>{\r\n      this.router.navigateByUrl('/dashboard', {skipLocationChange: true}).then(()=>\r\n      this.router.navigate([\"candidats\"]));\r\n    }\r\n  await this.saveCandidat(fn)\r\n  }\r\n  annuler(){\r\n    this.router.navigateByUrl('/dashboard', {skipLocationChange: true}).then(()=>\r\n    this.router.navigate([\"candidats\"]));\r\n  }\r\n\r\n  async submitAndRedirect(){\r\n    let fn =(id)=>{\r\n      this.router.navigate([\"/candidats/details/\"+id]);\r\n    }\r\n    await this.saveCandidat(fn)\r\n  }\r\n\r\n  async saveCandidat(callback){\r\n    var error = false;\r\n    //#region get Competences\r\n    this.competences.forEach((obj, i) => {\r\n      if (obj.selected) {\r\n        delete obj.selected;\r\n        this.candidate.candidatCompetence.push({\r\n          pk: {\r\n            competence: obj,\r\n          }\r\n        })\r\n      }\r\n    });\r\n    //#endregion\r\n\r\n    //#region  allert Message\r\n    if (this.candidate.nom == \"\" || this.candidate.nom == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un nom valide\")\r\n      error = true;\r\n    }\r\n    if (this.candidate.prenom == \"\" || this.candidate.prenom == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un prenom valide\")\r\n      error = true;\r\n    }\r\n    if (!this.candidate.cvAnonyme) {\r\n      if (this.candidate.email == \"\" || this.candidate.email == undefined) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email valide\")\r\n        error = true;\r\n      }\r\n      else {\r\n        let cand\r\n        await this.candidatsService.getCandidatByEmail(this.candidate.email).toPromise().then(data => { cand = data });;\r\n        if (cand != null) {\r\n          this.notifierService.notify(\"error\", \"Email existe déjà  !\")\r\n          error = true;\r\n        }\r\n      }\r\n      if (this.candidate.numeroTel == \"\" || this.candidate.numeroTel == undefined) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un numero Tel valide\")\r\n        error = true;\r\n      }\r\n      else {\r\n        let cand\r\n        await this.candidatsService.getCandidatByNumTel(this.candidate.numeroTel).toPromise().then(data => { cand = data });;\r\n        if (cand != null) {\r\n          this.notifierService.notify(\"error\", \"Numéro de téléphone existe déjà  !\")\r\n          error = true;\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      if ((this.candidate.email == \"\" || this.candidate.email == undefined) && (this.candidate.numeroTel == \"\" || this.candidate.numeroTel == undefined)) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email  ou numero Tel  valide\")\r\n        error = true;\r\n      } else {\r\n        if (this.candidate.email != \"\" && this.candidate.email != undefined) {\r\n          let cand\r\n          await this.candidatsService.getCandidatByEmail(this.candidate.email).toPromise().then(data => { cand = data; });\r\n          if (cand != null) {\r\n            this.notifierService.notify(\"error\", \"Email existe déjà  !\")\r\n            error = true;\r\n          }\r\n        }\r\n        if (this.candidate.numeroTel != \"\" && this.candidate.numeroTel != undefined) {\r\n          let cand;\r\n          await this.candidatsService.getCandidatByNumTel(this.candidate.numeroTel).toPromise().then(data => { cand = data });;\r\n          if (cand != null) {\r\n            this.notifierService.notify(\"error\", \"Numéro de téléphone existe déjà  !\")\r\n            error = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.candidate.technologie.id == undefined) {\r\n      this.notifierService.notify(\"error\", \" Choisir un Profil\")\r\n      error = true;\r\n    }\r\n    if (this.candidate.origine.id == undefined) {\r\n      this.notifierService.notify(\"error\", \" Choisir un Origine CV\")\r\n      error = true;\r\n    }\r\n    if (this.candidate.codePostal == null || this.candidate.codePostal == undefined) {\r\n      this.notifierService.notify(\"error\", \" Écrivez un Code Postal valide\")\r\n      error = true;\r\n    }\r\n    //#endregion\r\n\r\n    if (!error) {\r\n      this.candidate.dateInscription = new Date();\r\n      this.candidate.statut = Status[Status.VIDE];\r\n      this.candidate.entretien=null\r\n      this.candidate.motif=null\r\n      this.candidatsService.create(this.candidate, this.currentFile.file.type).toPromise().then((data: Candidate) => {\r\n        if (data != null) {\r\n          this.notifierService.notify(\"success\", \"Candidat ajouté avec succés !\")\r\n          callback(data.id) \r\n        } else {\r\n          this.notifierService.notify(\"error\", \"Erreur l'ors l'ajour\")\r\n        }\r\n      }, error => {\r\n        this.notifierService.notify(\"error\", \"Erreur l'ors l'ajour\")\r\n      })\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { CandidatsComponent } from './candidats.component';\r\nimport { CandidatsRoutingModule } from './candidats-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DxTreeViewModule } from 'devextreme-angular';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { FicheCandidatComponent } from './fiche-candidat/fiche-candidat.component'\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { MonthYeatPickerComponent } from '../../helper/month-year-picker';\r\n\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\nimport { listeNouveauxCandidatsComponent } from './listeNouveauxCandidats/listeNouveauxCandidats.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { listeTousCandidatsComponent } from './listeTousCandidats/listeTousCandidats.component';\r\nimport { listeCandidatArelancerComponent } from './listeCandidatArelancer/listeCandidatArelancer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CandidatsRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    DxTreeViewModule,\r\n    CommonModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    NgxMaskModule.forRoot(),\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    ModalModule.forRoot(),\r\n    AlertModule.forRoot(),\r\n    NgxPaginationModule,\r\n    TextMaskModule,\r\n    NgxLoadingModule.forRoot({})\r\n\r\n  ],\r\n  declarations: [\r\n    listeCandidatArelancerComponent,\r\n    listeTousCandidatsComponent,\r\n    listeNouveauxCandidatsComponent,\r\n    CandidatsComponent,\r\n    FicheCandidatComponent,\r\n    MonthYeatPickerComponent\r\n  ]\r\n})\r\nexport class CandidatsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    Router, Resolve,\r\n    ActivatedRouteSnapshot\r\n} from '@angular/router';\r\nimport { CandidatsService } from '../../../services/candidats.service';\r\nimport { Candidate } from '../../../models/Candidate';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CandidatDetailResolve implements Resolve<any> {\r\n    constructor(private candidatService:CandidatsService, private router: Router) { }\r\n    \r\n    resolve(route: ActivatedRouteSnapshot): Promise<any> | boolean {\r\n        let id = +route.params['id'];\r\n        return this.candidatService.getCandidatById(id).toPromise().then((candidat:Candidate )=> {\r\n            if (candidat) {\r\n                return candidat;\r\n            } else { // id not found\r\n                this.router.navigate(['/dashborad']);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n}","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <h5>Information:</h5>\\r\\n            </div>\\r\\n            <div class=\\\"col-2\\\"><label>Nom: </label><span class=\\\"field\\\">{{currentCandidat.nom}}</span></div>\\r\\n            <div class=\\\"col-2\\\"><label>Prénom: </label><span class=\\\"field\\\">{{currentCandidat.prenom}}</span></div>\\r\\n            <div class=\\\"col-2\\\"><label>Age: </label><span class=\\\"field\\\">{{currentCandidat.age}}</span></div>\\r\\n            <div class=\\\"col-2\\\"><label>Tél: </label><span class=\\\"field\\\">{{currentCandidat.numeroTel | mask:\\r\\n                '00-00-00-00-00'}}</span></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-7\\\">\\r\\n              <div *ngIf=\\\"pdfSource!=undefined\\\">\\r\\n                <object style=\\\"margin-top: 20px\\\" [data]=\\\"pdfSource\\\" height=\\\"1500px\\\" width=\\\"100%\\\">\\r\\n                  <param name=\\\"view\\\" value=\\\"fitH\\\" />\\r\\n\\r\\n                </object>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-5\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"civilite\\\">Civilité</label>\\r\\n                    <select required #civilite=\\\"ngModel\\\" name=\\\"civilite\\\" [(ngModel)]=\\\"currentCandidat.civilite\\\" class=\\\"form-control\\\"\\r\\n                      id=\\\"civilite\\\">\\r\\n                      <option value=\\\"M\\\">M</option>\\r\\n                      <option value=\\\"Mme\\\">Mme</option>\\r\\n                    </select> </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"nom\\\">Nom</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nom\\\" [(ngModel)]=\\\"currentCandidat.nom\\\" id=\\\"nom\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\">Prenom</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"currentCandidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"email\\\">Email</label>\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"currentCandidat.email\\\" id=\\\"email\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"telephone\\\">Téléphone</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" mask='00-00-00-00-00' name=\\\"telephone\\\" [(ngModel)]=\\\"currentCandidat.numeroTel\\\"\\r\\n                      id=\\\"telephone\\\">\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"origineCV\\\">Origine CV</label>\\r\\n                    <select  [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"currentCandidat.origine\\\" name=\\\"origineCV\\\" class=\\\"form-control\\\" id=\\\"origineCV\\\">\\r\\n                      <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                      <option *ngFor=\\\"let origine of origines\\\" [ngValue]=\\\"origine\\\">{{origine.libelle}}</option>\\r\\n                    </select>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"profil\\\">Profil </label>\\r\\n                    <select  [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"currentCandidat.technologie\\\" name=\\\"technologie\\\" class=\\\"form-control\\\" id=\\\"profil\\\">\\r\\n                      <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                      <option *ngFor=\\\"let tech of technologies\\\" [ngValue]=\\\"tech\\\">{{tech.libelle}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"codePostal\\\">Code postal</label>\\r\\n                    <ng-select aria-required=\\\"\\\" id=\\\"codePostal\\\" [items]=\\\"codePostals\\\" (search)=\\\"codePostaleOnSearch($event)\\\"\\r\\n                      [ngModel]=\\\"currentCandidat?.codePostal\\\" (ngModelChange)=\\\"currentCandidat.codePostal = $event\\\"\\r\\n                      name=\\\"codePostal\\\">\\r\\n                      <ng-option *ngFor=\\\"let codeP of codePostals\\\" [value]=\\\"codeP\\\">{{codeP.code}}\\r\\n                        {{codeP.ville}}</ng-option>\\r\\n\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Region</label>\\r\\n                    <p class=\\\"form-control-static\\\">{{currentCandidat?.codePostal?.region}}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label>Ville</label>\\r\\n                    <p class=\\\"form-control-static\\\">{{currentCandidat?.codePostal?.ville}}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-7 col-form-label\\\">Mobilité: </label>\\r\\n                    <div class=\\\"col-4 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"mobiliteSrc\\\" [(ngModel)]=\\\"currentCandidat.mobiliteSrc\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox1\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox1\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"mobiliteSrc\\\" [(ngModel)]=\\\"currentCandidat.mobiliteSrc\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox2\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox2\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-md-7 col-form-label\\\">Pole Emploi: </label>\\r\\n                    <div class=\\\"col-md-4 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                        <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"currentCandidat.posteEnCours\\\" name=\\\"poleEmploi\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox3\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox3\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                        <input class=\\\"form-check-input\\\" [(ngModel)]=\\\"currentCandidat.posteEnCours\\\" name=\\\"poleEmploi\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox4\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox4\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"adresse\\\">Adresse</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"adresse\\\" [(ngModel)]=\\\"currentCandidat.adresse\\\" id=\\\"adresse\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"dateNaissance\\\">Date de Naissance</label>\\r\\n                    <input [owlDateTimeTrigger]=\\\"dtdateNaissance\\\" [owlDateTime]=\\\"dtdateNaissance\\\" class=\\\"form-control\\\"\\r\\n                      name=\\\"dateNaissance\\\" [(ngModel)]=\\\"currentCandidat.dateNaissance\\\" id=\\\"dateNaissance\\\">\\r\\n                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dtdateNaissance></owl-date-time>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"diplome\\\">Diplome</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"diplome\\\" [(ngModel)]=\\\"currentCandidat.diplome\\\" id=\\\"diplome\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"age\\\">Age</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"age\\\" [(ngModel)]=\\\"currentCandidat.age\\\" id=\\\"age\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"dateObtentionDiplome\\\">Date d'obtention du diplôme</label>\\r\\n\\r\\n                    <month-year-picker (changed)=\\\"updateDateObtentionDiplome($event)\\\" [innerValue]=\\\"currentCandidat.dateObtentionDiplome\\\"></month-year-picker>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"lieuNaissance\\\">Lieu de Naissance</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lieuNaissance\\\" [(ngModel)]=\\\"currentCandidat.lieuNaissance\\\"\\r\\n                      id=\\\"lieuNaissance\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-3 col-form-label\\\">Sourceur</label>\\r\\n                <div class=\\\"col-8\\\">\\r\\n                  <p class=\\\"form-control-static\\\">{{currentCandidat.creePar.nom}} {{currentCandidat.creePar.prenom}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group row competences\\\">\\r\\n                <div class=\\\"col-md-3 col-form-label\\\" *ngFor=\\\"let compt of competences; let i = index\\\">\\r\\n                  <div class=\\\"form-check form-check-inline mr-1\\\">\\r\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [name]=\\\"'cmp'+i\\\" [(ngModel)]=\\\"competences[i].selected\\\"\\r\\n                      id=\\\"inline-checkbox1\\\" [value]=\\\"compt.id\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox1\\\">{{compt.libelle}}</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"row align-items-center\\\" style=\\\"margin-bottom: 50px\\\">\\r\\n                <div class=\\\"col-8\\\"></div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                  <button (click)=\\\"updateCandidats()\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\">Modifier candidat</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\"padding-bottom: 10px\\\">\\r\\n                <div class=\\\"col-md-6 col-form-label\\\">\\r\\n                  <label class=\\\"form-check-label\\\" style=\\\"padding-right: 30px\\\" for=\\\"envoiMail\\\">\\r\\n                    Envoi e-mail:\\r\\n                  </label> <input class=\\\"\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"envoiMail\\\" name=\\\"envoiMail\\\" value=\\\"true\\\" id=\\\"envoiMail \\\">\\r\\n\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienDispo\\\">Disponible</label>\\r\\n                    <select [(ngModel)]=\\\"currentCandidat.entretien.disponible\\\" name=\\\"entretienDispo\\\" class=\\\"form-control\\\"\\r\\n                      id=\\\"entretienDispo\\\">\\r\\n                      <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                      <option *ngFor=\\\"let refDis of refDisponibilite\\\" [value]=\\\"refDis.value\\\">{{refDis.label}}</option>\\r\\n                    </select>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-7 col-form-label\\\">Relancer: </label>\\r\\n                    <div class=\\\"col-4 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"relance\\\" (change)=\\\"relanceHandleChange($event)\\\"\\r\\n                          [(ngModel)]=\\\"currentCandidat.entretien.relance\\\" type=\\\"radio\\\" id=\\\"inline-checkbox5\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox5\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"relance\\\" (change)=\\\"relanceHandleChange($event)\\\"\\r\\n                          [(ngModel)]=\\\"currentCandidat.entretien.relance\\\" type=\\\"radio\\\" id=\\\"inline-checkbox6\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox6\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienDate\\\">Date entretien</label>\\r\\n                    <input [disabled]=\\\"currentCandidat.entretien.relance==true\\\" [owlDateTimeFilter]=\\\"entretienDateFilter\\\"\\r\\n                      [min]=\\\"minRelance\\\" [owlDateTimeTrigger]=\\\"dtentretienDate\\\" [owlDateTime]=\\\"dtentretienDate\\\" class=\\\"form-control\\\"\\r\\n                      name=\\\"entretienDate\\\" [(ngModel)]=\\\"currentCandidat.entretien.date\\\" id=\\\"entretienDate\\\">\\r\\n                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dtentretienDate></owl-date-time>\\r\\n\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienDateRelance\\\">Date Relance</label>\\r\\n                    <input [disabled]=\\\"currentCandidat.entretien.relance==false\\\" [min]=\\\"minRelance\\\"\\r\\n                      [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\" class=\\\"form-control\\\" name=\\\"entretienDateRelance\\\"\\r\\n                      [(ngModel)]=\\\"currentCandidat.entretien.dateRelance\\\" id=\\\"entretienDateRelance\\\">\\r\\n                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt></owl-date-time>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"timeEntretien\\\">Heure entretien</label>\\r\\n                    <input [disabled]=\\\"currentCandidat.entretien.relance==true\\\" [owlDateTimeFilter]=\\\"entretienHeureFilter\\\"\\r\\n                      class=\\\"form-control\\\" placeholder=\\\"Time:\\\" [(ngModel)]=\\\"timeEntretien\\\" [owlDateTimeTrigger]=\\\"dt2\\\"\\r\\n                      [owlDateTime]=\\\"dt2\\\">\\r\\n                    <owl-date-time (afterPickerClosed)=\\\"afterHeurePickerClosed()\\\" [pickerType]=\\\"'timer'\\\" #dt2></owl-date-time>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-7 col-form-label\\\">Confirmation Rdv: </label>\\r\\n                    <div class=\\\"col-4 col-form-label\\\">\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"confirmation\\\" [(ngModel)]=\\\"currentCandidat.entretien.confirmation\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox1\\\" [value]=\\\"true\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox1\\\">Oui</label>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" name=\\\"confirmation\\\" [(ngModel)]=\\\"currentCandidat.entretien.confirmation\\\"\\r\\n                          type=\\\"radio\\\" id=\\\"inline-checkbox2\\\" [value]=\\\"false\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox2\\\">Non</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienLieu\\\">Lieu entretien</label>\\r\\n                    <select [compareWith]=\\\"helperService.compareFn\\\" [(ngModel)]=\\\"currentCandidat.entretien.lieu\\\" name=\\\"entretienLieu\\\" class=\\\"form-control\\\" id=\\\"entretienLieu\\\">\\r\\n                      <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                      <option *ngFor=\\\"let lieu of lieux\\\" [ngValue]=\\\"lieu\\\">{{lieu.libelle}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"entretienPertinence\\\">Pertinence Cv</label>\\r\\n                    <select [(ngModel)]=\\\"currentCandidat.entretien.pertinence\\\" name=\\\"entretienPertinence\\\" class=\\\"form-control\\\"\\r\\n                      id=\\\"entretienPertinence\\\">\\r\\n                      <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                      <option *ngFor=\\\"let pertinenece of pertinenecesValeurs\\\" [value]=\\\"pertinenece\\\">{{pertinenece}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                  <textarea  id=\\\"comEntrtien\\\" [(ngModel)]=\\\"currentCandidat.entretien.commentaire\\\" name=\\\"comEntrtien\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </div>\\r\\n               </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col-md-4 col-form-label\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-2\\\">\\r\\n              <button type=\\\"button\\\" [disabled]=\\\"file==undefined\\\" (click)=\\\"downloadPDF()\\\" class=\\\"btn btn-block btn-primary\\\">Télécharger\\r\\n                Cv</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-2\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\">Evaluer Candidat</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-2\\\">\\r\\n              <button type=\\\"button\\\" (click)=\\\"sauvgarderFiche()\\\" class=\\\"btn btn-block btn-primary\\\">Sauvegarder</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-2\\\">\\r\\n              <button (click)=\\\"annuler()\\\" type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\">Annuler</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div bsModal #emailModalHorCible=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-primary  modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Nouveau email : Candidat Hors cible</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"emailModalHorCible.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\" style=\\\"padding: 52px\\\">\\r\\n          <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Motif </label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <select [(ngModel)]=\\\"currentCandidat.motif\\\" name=\\\"motif\\\" class=\\\"form-control\\\" id=\\\"motif\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                  <option *ngFor=\\\"let motif of motifs\\\" [ngValue]=\\\"motif\\\">{{motif.libelle}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Message </label>\\r\\n              <div class=\\\"col-md-8 \\\">\\r\\n                <textarea id=\\\"commentaireMotif\\\" [(ngModel)]=\\\"commentaireMotif\\\" name=\\\"commentaireMotif\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"emailModalHorCible.hide()\\\">Annuler</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"envoiMailFunction()\\\" class=\\\"btn btn-primary\\\">Envoi mail</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal -->\\r\\n\\r\\n\\r\\n\\r\\n  <div bsModal #emailModalDispo=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-primary  modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Envoi e-mail Entretien</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"emailModalDispo.hide()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\" style=\\\"padding: 52px\\\">\\r\\n          <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"candidatEmail\\\">E-mail Candidat</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input class=\\\"form-control\\\" name=\\\"candidatEmail\\\" id=\\\"candidatEmail\\\" [(ngModel)]=\\\"emailEntrtien?.candidat.email\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"distCopie0\\\">Destinataire en Cci</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input class=\\\"form-control\\\" name=\\\"distCopie0\\\" id=\\\"distCopie0\\\" [(ngModel)]=\\\"emailEntrtien.distCopie[0]\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"distCopie1\\\">Destinataire en Cci</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input class=\\\"form-control\\\" name=\\\"distCopie1\\\" id=\\\"distCopie1\\\" [(ngModel)]=\\\"emailEntrtien.distCopie[1]\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"distCopie1\\\">Destinataire en Cci</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div style=\\\"margin-left: 15px\\\">\\r\\n                    <input (change)=\\\"uploadFiles($event)\\\"  accept=\\\".xls, .xlsx, .pdf, .docx, .doc\\\" style=\\\"display: none;\\\" id=\\\"fileUpload\\\" type=\\\"file\\\" multiple />\\r\\n                    <button [disabled]=\\\"this.pieceJoitesTemp.length >= 3\\\" onclick=\\\"document.getElementById('fileUpload').click();\\\"  type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-block btn-outline-primary\\\" >\\r\\n                      <i class=\\\"fa fa-plus\\\"> </i> Selectionner</button>\\r\\n                  </div>\\r\\n                  <button type=\\\"button\\\" style=\\\"margin-left: 20px\\\" (click)=\\\"uploadpieceJoitesTemp()\\\" [disabled]=\\\"disableUploadButton()\\\"  class=\\\"btn btn-outline-success\\\">\\r\\n                    <i class=\\\"fa fa-upload\\\"></i> OK\\r\\n                  </button>\\r\\n                  <button type=\\\"button\\\" style=\\\"margin-left: 20px\\\" (click)=\\\"pieceJoitesTemp=[];emailEntrtien.pieceJoites=[]\\\" [disabled]=\\\"pieceJoitesTemp.length==0\\\" class=\\\"btn btn-outline-danger\\\">\\r\\n                    <i class=\\\"fa fa-trash\\\"> </i> \\r\\n                    Annuler\\r\\n                  </button>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n                    <table class=\\\"table\\\" *ngIf=\\\"pieceJoitesTemp.length>0\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                            <th width=\\\"50%\\\">Name</th>\\r\\n                            <th>Size</th>\\r\\n                            <th>Progress</th>\\r\\n                            <th>Status</th>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <tr *ngFor=\\\"let item of pieceJoitesTemp\\\">\\r\\n                            <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                            <td  nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                            <td >\\r\\n                                <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td class=\\\"text-center\\\">\\r\\n                                <span *ngIf=\\\"item.status == 'loaded'\\\"><i class=\\\"fa fa-check\\\"></i></span>\\r\\n                                <span *ngIf=\\\"item.status=='error'\\\"><i class=\\\"fa fa-close\\\"></i></span>\\r\\n                                <span *ngIf=\\\"item.status=='notLoaded'\\\"><i class=\\\"fa fa-upload\\\"></i></span>                               \\r\\n                            </td>\\r\\n                            <td nowrap>                               \\r\\n                                    <i style=\\\"color:red\\\" (click)=\\\"removeUploadedFile(item)\\\" class=\\\"fa fa-trash-o\\\"></i> \\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"text-input\\\">Message </label>\\r\\n              <div class=\\\"col-md-8 \\\">\\r\\n                <textarea id=\\\"commentaireMotif\\\" [(ngModel)]=\\\"emailEntrtien.msg\\\" name=\\\"commentaireMotif\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"emailModalDispo.hide()\\\">Annuler</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"envoiMailDispoFunction()\\\" class=\\\"btn btn-primary\\\">Envoi mail</button>\\r\\n        </div>\\r\\n      </div><!-- /.modal-content -->\\r\\n    </div><!-- /.modal-dialog -->\\r\\n  </div><!-- /.modal -->\"","module.exports = \"label {\\n  color: black;\\n  font-size: 15px;\\n  font-weight: bold;\\n  margin-right: 2px; }\\n\\n.field {\\n  font-size: 15px;\\n  font-style: italic; }\\n\\nh5 {\\n  color: black; }\\n\\n.competences {\\n  border: 2px solid #C4C4C4;\\n  border-radius: 12px;\\n  padding: 0px; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { Candidate } from '../../../models/candidate';\r\nimport { CodePostal } from '../../../models/CodePostal';\r\nimport { Technologie } from '../../../models/Technologie';\r\nimport { Origine } from '../../../models/Origine';\r\nimport { TechnologieService } from '../../../services/administrationService/TechnologieService';\r\nimport { OriginesService } from '../../../services/administrationService/origines.service';\r\nimport { CodePostalService } from '../../../services/administrationService/code-postal.service';\r\nimport { CompetencesService } from '../../../services/administrationService/competences.service';\r\nimport { Competence } from '../../../models/Competence';\r\nimport { CandidatsService } from '../../../services/candidats.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Entretien } from '../../../models/Entretien';\r\nimport { Lieu } from '../../../models/Lieu';\r\nimport { LieuxService } from '../../../services/administrationService/Lieux.service.';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { Motif } from '../../../models/Motif';\r\nimport { MotifService } from '../../../services/administrationService/motif.service';\r\nimport { RoutingState } from '../../../helper/routing-state.service';\r\nimport { UtilisateurService } from '../../../services/utilisateur.service';\r\nimport { Disponibilite } from '../../../models/enum/Disponibilite';\r\nimport { HelperService } from '../../../helper/helper.service';\r\nimport { Profil } from '../../../models/enum/Profil';\r\nimport { EntretienService } from '../../../services/entretien-service';\r\nimport { Status } from '../../../models/enum/Status';\r\n\r\n@Component({\r\n  selector: 'app-fiche-candidat',\r\n  templateUrl: './fiche-candidat.component.html',\r\n  styleUrls: ['./fiche-candidat.component.scss']\r\n\r\n})\r\nexport class FicheCandidatComponent implements OnInit {\r\n\r\n\r\n  @ViewChild(\"emailModalDispo\")\r\n  public emailModalDispo;\r\n\r\n  @ViewChild(\"emailModalHorCible\")\r\n  public emailModalHorCible;\r\n\r\n  commentaireMotif = \"\";\r\n  minRelance = new Date();\r\n  timeEntretien: Date;\r\n  codePostals: Array<CodePostal> = [];\r\n  technologies: Array<Technologie> = []\r\n  origines: Array<Origine> = []\r\n  competences: Array<Competence> = []\r\n  lieux: Array<Lieu> = []\r\n  motifs: Array<Motif> = []\r\n\r\n  pertinenecesValeurs = [1, 2, 3, 4, 5]\r\n  pdfSource;\r\n  refDisponibilite = this.helperService.buildDisponibiliteArray();\r\n  file;\r\n  currentCandidat: Candidate;\r\n  envoiMail: boolean = false;\r\n  pieceJoitesTemp = []\r\n  emailEntrtien = {\r\n    candidat: {},\r\n    distCopie: [\"\", \"\"],\r\n    pieceJoites: [],\r\n    msg: \"\"\r\n\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private competencesService: CompetencesService,\r\n    private codePostalService: CodePostalService, private originesService: OriginesService,\r\n    private technologiesService: TechnologieService, private candidatsService: CandidatsService,\r\n    private sanitizer: DomSanitizer, private router: Router, private lieuxService: LieuxService,\r\n    private notifierService: NotifierService, private motifService: MotifService,\r\n    private routingState: RoutingState, private entretienService: EntretienService,\r\n    private userService: UtilisateurService, private helperService: HelperService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data\r\n      .subscribe((data: { candidat: Candidate, title: string }) => {\r\n        data.title = data.title + data.candidat.id;\r\n        this.currentCandidat = data.candidat;\r\n        if (this.currentCandidat.entretien != undefined && this.currentCandidat.entretien != null)\r\n          this.timeEntretien = this.currentCandidat.entretien.date;\r\n        this.codePostaleOnSearch(this.currentCandidat.codePostal.code)\r\n        this.candidatsService.getCvCandidats(this.currentCandidat).subscribe(res => {\r\n          this.file = res;\r\n          var reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            var fileBase64Value = reader.result + ''\r\n            this.pdfSource = this.sanitizer.bypassSecurityTrustResourceUrl(fileBase64Value.replace(\"pdf/plain\", \"application/pdf\"))\r\n          }\r\n          reader.readAsDataURL(res.data);\r\n        })\r\n      });\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n    this.originesService.findAllOrigines().subscribe(data => {\r\n      this.origines = data;\r\n    })\r\n\r\n    this.lieuxService.findAllLieux().subscribe(data => {\r\n      this.lieux = data;\r\n    })\r\n\r\n    this.motifService.findAllMotifs().subscribe(data => this.motifs = data)\r\n\r\n    this.competencesService.findAllCompetences().subscribe(data => {\r\n      this.competences = data;\r\n      this.currentCandidat.candidatCompetence.forEach((obj, i) => {\r\n        this.competences.forEach((obj2, i) => {\r\n          if (obj2.id == obj.pk.competence.id) {\r\n            obj2.selected = true;\r\n          }\r\n        });\r\n      });\r\n    })\r\n  }\r\n\r\n  private codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.codePostalService.completeCodePostal(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.codePostals = [...  this.codePostals, element]\r\n          if (element.id == this.currentCandidat.codePostal.id) {\r\n            this.currentCandidat.codePostal = element\r\n          }\r\n        });\r\n\r\n      })\r\n    else this.codePostals = []\r\n  }\r\n\r\n  private downloadPDF() {\r\n\r\n    var url = window.URL.createObjectURL(this.file.data);\r\n    var a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n    a.setAttribute('style', 'display: none');\r\n    a.href = url;\r\n    a.download = this.file.filename;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    a.remove(); // remove the element\r\n  }\r\n\r\n  private afterHeurePickerClosed() {\r\n    if (this.timeEntretien == undefined) {\r\n      this.notifierService.notify(\"error\", \"Heure incorrect: l’heure doit être entre 09h et 18h\")\r\n\r\n    }\r\n    else this.currentCandidat.entretien.date.setHours(this.timeEntretien.getHours(), this.timeEntretien.getMinutes())\r\n  }\r\n\r\n  private entretienHeureFilter = (d: Date): boolean => {\r\n    if (d.getHours() < 18 && d.getHours() >= 9) {\r\n      return true\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private annuler() {\r\n    this.router.navigate([this.routingState.getPreviousUrl()]);\r\n  }\r\n\r\n  private updateDateObtentionDiplome(date: Date) {\r\n    this.currentCandidat.dateObtentionDiplome = date\r\n  }\r\n\r\n  private updateCandidats() {\r\n    let errorCv = this.verifierCvAnym();\r\n    if (!errorCv) {\r\n      //#region get Competences\r\n      this.generateComp();\r\n      //#endregion\r\n      const candidateTemp: any = Object.assign({}, this.currentCandidat);\r\n      candidateTemp.entretien = null\r\n      candidateTemp.motif = null\r\n      this.candidatsService.updateCandidat(candidateTemp).subscribe(data => {\r\n        this.notifierService.notify(\"success\", \"Candidat modifié avec success !\")\r\n        this.router.navigate([\"/candidats/listeNouveauxCandidats\"]);\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  private generateComp() {\r\n    this.competences.forEach((obj, i) => {\r\n      if (obj.selected) {\r\n        //delete obj.selected;\r\n        this.currentCandidat.candidatCompetence.push({\r\n          pk: {\r\n            competence: obj,\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private verifierCvAnym() {\r\n    let error = false;\r\n    //#region cvAnonyme\r\n    if (!this.currentCandidat.cvAnonyme) {\r\n      if (this.currentCandidat.email == \"\" || this.currentCandidat.email == undefined) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email valide\");\r\n        error = true;\r\n      }\r\n      if (this.currentCandidat.numeroTel == \"\" || this.currentCandidat.numeroTel == undefined) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un numero Tel valide\");\r\n        error = true;\r\n      }\r\n    }\r\n    else {\r\n      if ((this.currentCandidat.email == \"\" || this.currentCandidat.email == undefined) && (this.currentCandidat.numeroTel == \"\" || this.currentCandidat.numeroTel == undefined)) {\r\n        this.notifierService.notify(\"error\", \" Écrivez un email  ou numero Tel  valide\");\r\n        error = true;\r\n      }\r\n    }\r\n    return error;\r\n    //#endregion\r\n\r\n  }\r\n\r\n  private verfierDispo() {\r\n    let error = false;\r\n    if (this.currentCandidat.entretien.pertinence == undefined) {\r\n      this.notifierService.notify(\"error\", \" Champ obligatoire,choisir la pertinence!\")\r\n      error = true;\r\n    }\r\n    if (this.currentCandidat.entretien.disponible == undefined) {\r\n      this.notifierService.notify(\"error\", \"Champ obligatoire,choisir la disponibilité!\")\r\n      error = true;\r\n    }\r\n    return error;\r\n  }\r\n\r\n  private verfierRelance() {\r\n    let error = false;\r\n\r\n    if (!(this.currentCandidat.entretien.pertinence == undefined)) {\r\n\r\n      var table = [\"PREAVIS\", \"message_vocal\", \"envoi_de_la_plaquette\", \"EN_ATTENTE_FORMATION\", \"mail_envoye\"]\r\n      let dispoValue = this.currentCandidat.entretien.disponible;\r\n      //#region Relance\r\n      if (table.indexOf(dispoValue) >= 0 && this.currentCandidat.entretien.relance == undefined) {\r\n        this.notifierService.notify(\"error\", \"Champs obligatoire, Relancer\")\r\n        error = true;\r\n      } else if (this.currentCandidat.entretien.relance == true && this.currentCandidat.entretien.dateRelance == undefined) {\r\n        this.notifierService.notify(\"error\", \"Champ obligatoire, date relance!\")\r\n        error = true;\r\n      }\r\n      else if (this.currentCandidat.entretien.relance == false && this.currentCandidat.entretien.dateRelance != undefined) {\r\n        this.currentCandidat.entretien.dateRelance = null\r\n      }\r\n    }\r\n    return error;\r\n    //#endregion\r\n  }\r\n\r\n  private verfierEntrtien() {\r\n    let error = false\r\n\r\n    if (!(this.currentCandidat.entretien.pertinence == undefined)) {\r\n\r\n      //#region Entrtien\r\n      let dispoValue = this.currentCandidat.entretien.disponible;\r\n\r\n      if (dispoValue == \"DISPONIBLE\") {\r\n        if (this.currentCandidat.entretien.date == undefined) {\r\n          this.notifierService.notify(\"error\", \"Champs obligatoire, date entretien!\")\r\n          error = true;\r\n        }\r\n        if (this.currentCandidat.entretien.lieu == undefined) {\r\n          this.notifierService.notify(\"error\", \"Champs obligatoire, lieu entretien!\")\r\n          error = true;\r\n        }\r\n        if (this.timeEntretien == undefined) {\r\n          this.notifierService.notify(\"error\", \"Champs obligatoire, heure d'entretien!\")\r\n          error = true;\r\n        }\r\n      }\r\n    }\r\n    return error;\r\n    //#endregion\r\n  }\r\n\r\n  relanceHandleChange(event) {\r\n    if (this.currentCandidat.entretien.relance == false) {\r\n      this.currentCandidat.entretien.dateRelance = undefined\r\n    }\r\n    else {\r\n      this.currentCandidat.entretien.date = undefined\r\n      this.timeEntretien = undefined\r\n    }\r\n  }\r\n\r\n  private async sauvgarderFiche() {\r\n    //#region get Competences\r\n    this.generateComp();\r\n    //#endregion\r\n    if (!this.verfierDispo() && !this.verfierRelance() && !this.verfierEntrtien()) {\r\n      //#region Hors Cible \r\n      if (this.currentCandidat.entretien.disponible == \"hors_cible\" && (this.currentCandidat.emailSourceurEnvoyer == false || this.currentCandidat.emailSourceurEnvoyer == null)) {\r\n        this.emailModalHorCible.show()\r\n        return;\r\n      }\r\n      //#endregion\r\n      //#region envoiMail\r\n      if (this.envoiMail) {\r\n        if (this.currentCandidat.entretien.disponible == \"DISPONIBLE\" && (this.currentCandidat.emailCandidatEnvoyer == null || this.currentCandidat.emailCandidatEnvoyer == false)) {\r\n          this.emailEntrtien.candidat = this.currentCandidat\r\n          this.emailEntrtien.msg = this.buildEntretienMsg(this.currentCandidat)\r\n          this.emailModalDispo.show()\r\n          return;\r\n        }\r\n      }\r\n      //#endregion\r\n      let userProfil = this.userService.getConnetedUserInfo().profil;\r\n      if (Profil[userProfil] == Profil.ADMINISTRATEUR || Profil[userProfil] == Profil.CHARGE || Profil[userProfil] == Profil.DIRECTION) {\r\n        //#region Save Or Update Entretien\r\n        this.currentCandidat.entretien.charge = this.userService.getConnetedUserInfo();\r\n        await this.entretienService.createOrUpdate(this.currentCandidat.entretien).toPromise().then((data: Entretien) => {\r\n          if (this.currentCandidat.entretien.id > 0)\r\n            this.notifierService.notify(\"success\", \"Modifié!, Candidat modifié avec success !\");\r\n          else\r\n            this.notifierService.notify(\"success\", \"Ajout!, Candidat ajouté avec success !\");\r\n          data.date = new Date(data.date)\r\n          this.currentCandidat.entretien = data;\r\n        })\r\n        //#endregion\r\n        //#region  Update Candidat\r\n        if (this.currentCandidat.entretien.date == undefined || this.currentCandidat.entretien.date == null) {\r\n          this.currentCandidat.statut = Status[Status.EN_ATTENTE_EVALUATION]\r\n        }\r\n        if (Disponibilite[this.currentCandidat.entretien.disponible] != Disponibilite.DISPONIBLE) {\r\n          this.currentCandidat.statut = Status[Status.VIDE]\r\n        }\r\n        this.currentCandidat.motif = null;\r\n        await this.candidatsService.updateCandidat(this.currentCandidat).toPromise().then(data => {\r\n        })\r\n        //#endregion\r\n      }\r\n      this.annuler()\r\n    }\r\n  }\r\n\r\n  private envoiMailHorCibleFunction() {\r\n    if (this.currentCandidat.motif != undefined && this.currentCandidat.motif != undefined && this.commentaireMotif != \"\") {\r\n      this.candidatsService.envoyerEmailHorsCibleCandidats(this.currentCandidat, this.userService.getConnetedUserInfo().login, this.commentaireMotif).subscribe(data => {\r\n        this.notifierService.notify(\"success\", \"Mail envoyer avec success\");\r\n        this.currentCandidat.motif = new Motif();\r\n        this.commentaireMotif = \"\"\r\n        this.emailModalHorCible.hide();\r\n        this.currentCandidat.emailSourceurEnvoyer = true;\r\n        this.sauvgarderFiche();\r\n      })\r\n    }\r\n    else {\r\n      this.notifierService.notify(\"error\", \"Champs obligatoire, Choisir un motif!\")\r\n\r\n    }\r\n  }\r\n\r\n  private envoiMailDispoFunction() {\r\n    this.candidatsService.envoyerEmailDisboCandidats(this.emailEntrtien, this.userService.getConnetedUserInfo().login).subscribe(data => {\r\n      this.notifierService.notify(\"success\", \"Mail envoyer avec success\");\r\n      this.currentCandidat.emailCandidatEnvoyer = true;\r\n      this.emailModalDispo.hide();\r\n      this.emailEntrtien = {\r\n        candidat: {},\r\n        distCopie: [\"\", \"\"],\r\n        pieceJoites: [],\r\n        msg: \"\"\r\n\r\n      }\r\n      this.pieceJoitesTemp = []\r\n      this.sauvgarderFiche();\r\n    })\r\n  }\r\n\r\n  private uploadFiles(event) {\r\n    for (let index = 0; index < event.target.files.length && index < 3; index++) {\r\n      if (this.pieceJoitesTemp.length < 3) {\r\n        const element = event.target.files[index];\r\n        if (element.size < 131072000) {\r\n          let alradyAdded = false;\r\n          this.pieceJoitesTemp.forEach(el => {\r\n            if (el.file.name == element.name) alradyAdded = true;\r\n          })\r\n          if (!alradyAdded)\r\n            this.pieceJoitesTemp.push({ file: element, progress: 0, status: \"notLoaded\" });\r\n          else\r\n            this.notifierService.notify(\"warning\", \"Fichier \\\"\" + element.name + \"\\\" déja ajouter!\")\r\n        }\r\n        else\r\n          this.notifierService.notify(\"warning\", \"taille du fichier \\\"\" + element.name + \"\\\"est trop lourd!\")\r\n      }\r\n    }\r\n  }\r\n\r\n  private uploadpieceJoitesTemp() {\r\n    let tab = this.pieceJoitesTemp.filter(item => item.status == 'notLoaded')\r\n    for (let index = 0; index < tab.length && index < 3; index++) {\r\n      let element = tab[index];\r\n\r\n      let reader = new FileReader();\r\n      reader.onprogress = (e) => {\r\n        if (e.lengthComputable) {\r\n          element.progress = ((e.loaded / e.total) * 100);\r\n        }\r\n      }\r\n\r\n      reader.addEventListener(\"load\", (e) => {\r\n        // element.progress = 100\r\n        var fileBase64Value = reader.result + ''\r\n        this.emailEntrtien.pieceJoites.push({\r\n          fileName: element.file.name,\r\n          value: fileBase64Value.split(',')[1],\r\n          type: element.file.type,\r\n          size: element.file.size\r\n        })\r\n        element.status = \"loaded\"\r\n      }, false);\r\n      element.status = \"uploading\"\r\n      reader.readAsDataURL(element.file);\r\n    };\r\n\r\n  }\r\n\r\n  private disableUploadButton() {\r\n    return this.pieceJoitesTemp.filter(item => item.status == 'notLoaded').length == 0 || this.pieceJoitesTemp.filter(item => item.status == 'uploading').length > 0\r\n  }\r\n\r\n  private removeUploadedFile(item) {\r\n    this.pieceJoitesTemp.splice(this.pieceJoitesTemp.indexOf(item, 0), 1)\r\n    this.emailEntrtien.pieceJoites.forEach((element, index) => {\r\n      if (element.fileName == item.file.name) {\r\n        this.emailEntrtien.pieceJoites.splice(index, 1)\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildEntretienMsg(candidat) {\r\n\r\n    let presentationTime = new Date(candidat.entretien.date);\r\n    presentationTime.setHours(presentationTime.getHours() + 1)\r\n    let entretienTime = new Date(candidat.entretien.date);\r\n    entretienTime.setHours(entretienTime.getHours() + 2)\r\n    var msg = \"Bonjour \" + candidat.civilite + \". \" + candidat.nom.toUpperCase() + \" \" + candidat.prenom.toUpperCase()\r\n      + \", \\n\\nSuite à notre entretien téléphonique : \\n\\nJe vous confirme donc votre entretien le \";\r\n\r\n    msg += candidat.entretien.date.toLocaleDateString(\"fr-FR\") + \" à \" + this.helperService.formatTime(candidat.entretien.date) + \" dans nos locaux situés:\\n\\n\"\r\n      + candidat.entretien.lieu.adresseAdaming\r\n      + \"\\n\\nLe déroulement sera le suivant: \\n\\n\\t \" + this.helperService.formatTime(candidat.entretien.date)\r\n      + \": Test de logique \\n\\t \" + this.helperService.formatTime(presentationTime)\r\n      + \": Présentation de notre société et opportunités de carrière \\n\\t\"\r\n      + this.helperService.formatTime(entretienTime)\r\n      + \": Entretien individuel \\n\\nMerci de bien vouloir me confirmer votre présence par retour de mail. \\n \\n Ce rendez-vous a pour but d'intégrer notre société en contrat à durée indéterminée dans l'hypothèse où vos tests et entretiens sont concluants. \\n\\n Cordialement,\";\r\n\r\n    return msg\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Recherche</label>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Nom:</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nom\\\" [(ngModel)]=\\\"condidat.nom\\\" id=\\\"nom\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Prénom :</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"numeroTel\\\" style=\\\"font-weight:bold\\\">N° téléphone:</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.numeroTel\\\" id=\\\"numeroTel\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"email\\\" style=\\\"font-weight:bold\\\">Email:</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"condidat.email\\\" id=\\\"email\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"dateInscription\\\" style=\\\"font-weight:bold\\\">Date Inscription:</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"dateInscription\\\" [(ngModel)]=\\\"condidat.dateInscription\\\"\\r\\n                                id=\\\"dateInscription\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Type de profil:</label>\\r\\n                                <select [(ngModel)]=\\\"condidat.technologie\\\" name=\\\"profil\\\" class=\\\"form-control input-sm\\\">\\r\\n                                    <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                                    <option *ngFor=\\\"let tech of technologies\\\" [value]=\\\"tech.libelle\\\">{{ tech.libelle }}</option>\\r\\n                                </select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Nom sourceur :</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nomSourceur\\\" [(ngModel)]=\\\"condidat.nomSourceur\\\"\\r\\n                                id=\\\"nomSourceur\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Prenom sourceur :</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nomSourceur\\\" [(ngModel)]=\\\"condidat.prenomSourceur\\\"\\r\\n                                    id=\\\"nomSourceur\\\">\\r\\n    \\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"nomSourceur\\\" style=\\\"font-weight:bold\\\">Nom charge :</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nomSourceur\\\" [(ngModel)]=\\\"condidat.nomCharge\\\"\\r\\n                                    id=\\\"nomSourceur\\\">\\r\\n    \\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenomSourceur\\\" style=\\\"font-weight:bold\\\">Prenom charge :</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenomSourceur\\\" [(ngModel)]=\\\"condidat.prenomCharge\\\"\\r\\n                                    id=\\\"prenomSourceur\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    \\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"region\\\" style=\\\"font-weight:bold\\\">Disponibilité:</label>\\r\\n                            <select [(ngModel)]=\\\"condidat.disponibilite\\\" name=\\\"disponibilite\\\" class=\\\"form-control\\\"\\r\\n                            id=\\\"disponibilite\\\">\\r\\n                            <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                            <option *ngFor=\\\"let refDis of refDisponibilite\\\" [value]=\\\"refDis.value\\\">{{refDis.label}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Region:</label>\\r\\n                                <ng-select aria-required=\\\"\\\"  \\r\\n                                id=\\\"region\\\" [items]=\\\"region\\\" (search)=\\\"codePostaleOnSearch($event)\\\" \\r\\n                                    [ngModel]=\\\"condidat.region\\\" (ngModelChange)=\\\"condidat.region = $event\\\" name=\\\"region\\\">\\r\\n                                   <ng-option *ngFor=\\\"let reg of region\\\" [value]=\\\"reg.code\\\">{{reg.code}}</ng-option>\\r\\n    \\r\\n                               </ng-select>\\r\\n    \\r\\n                            </div>\\r\\n                        </div>\\r\\n                   \\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                                <label class=\\\"col-7 col-form-label\\\" style=\\\"font-weight:bold\\\">Relancer: </label>\\r\\n                                <div class=\\\"col-4 col-form-label\\\">\\r\\n                                  <div class=\\\"form-check form-check-inline\\\">\\r\\n                                    <input class=\\\"form-check-input\\\" name=\\\"relance\\\"\\r\\n                                      [(ngModel)]=\\\"condidat.relancer\\\" type=\\\"radio\\\" id=\\\"inline-checkbox5\\\" [value]=\\\"true\\\">\\r\\n                                    <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox5\\\">PERIODE</label>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"form-check form-check-inline\\\">\\r\\n                                    <input class=\\\"form-check-input\\\" name=\\\"relance\\\"\\r\\n                                      [(ngModel)]=\\\"condidat.relancer\\\" type=\\\"radio\\\" id=\\\"inline-checkbox6\\\" [value]=\\\"false\\\">\\r\\n                                    <label class=\\\"form-check-label\\\" for=\\\"inline-checkbox6\\\">MOIS</label>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Date Relance:</label>\\r\\n                        <month-year-picker   [(ngModel)]=\\\"condidat.dateRelance\\\"></month-year-picker>\\r\\n            \\r\\n                        </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label for=\\\"dateDebut\\\" style=\\\"font-weight:bold\\\">Date debut</label>\\r\\n                          <input  \\r\\n                            [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\" class=\\\"form-control\\\" name=\\\"dateDebut\\\"\\r\\n                            [(ngModel)]=\\\"condidat.dateDebut\\\" id=\\\"dateDebut\\\">\\r\\n                          <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt></owl-date-time>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              <label for=\\\"dateFin\\\" style=\\\"font-weight:bold\\\">Date fin</label>\\r\\n                              <input  \\r\\n                                [owlDateTimeTrigger]=\\\"dtdateFin\\\" [owlDateTime]=\\\"dtdateFin\\\" class=\\\"form-control\\\" name=\\\"dateFin\\\"\\r\\n                                [(ngModel)]=\\\"condidat.dateFin\\\" id=\\\"dateFin\\\">\\r\\n                              <owl-date-time [pickerType]=\\\"'calendar'\\\" #dtdateFin></owl-date-time>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"rechercheCandidat()\\\">Rechercher</button>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"reset()\\\" style=\\\"float: right;\\\">Réinitialiser</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Liste des nouveaux candidats</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"form-group row\\\" style=\\\"float: right\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div autoClose=\\\"false\\\" class=\\\"btn-group\\\" style=\\\"float: right;\\\" dropdown>\\r\\n                                <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\r\\n                                    Colonnes <span class=\\\"caret\\\"></span>\\r\\n                                </button>\\r\\n                                <ul (click)=\\\"$event.stopPropagation()\\\" class=\\\"light\\\" *dropdownMenu class=\\\"dropdown-menu\\\"\\r\\n                                    role=\\\"menu\\\">\\r\\n                                    <li role=\\\"menuitem\\\" *ngFor=\\\"let col of columns\\\"> <a class=\\\"dropdown-item\\\"><input\\r\\n                                                [(ngModel)]=\\\"col.visible\\\" type=\\\"checkbox\\\" />{{col.title}}</a></li>\\r\\n\\r\\n                                </ul>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <table class=\\\"table  table-striped table-responsive\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th [hidden]=\\\"!col.visible\\\" *ngFor=\\\"let col of columns\\\"> {{col.title }}</th>\\r\\n                            <th style=\\\"width: 100px\\\">ACTION</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let c of candidats| paginate: { itemsPerPage:10, currentPage: p }\\\">\\r\\n                            <td [hidden]=\\\"!col.visible\\\" *ngFor=\\\"let col of columns\\\"> {{c[col.data] }}</td>\\r\\n                            <td style=\\\"width: 100px\\\"><button type=\\\"button\\\" (click)=\\\"openDetails(c)\\\" class=\\\"btn btn-outline-primary btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" style=\\\"margin-left: 5px\\\" (click)=\\\"downloadCV(c)\\\" class=\\\"btn btn-outline-info btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-download\\\"></i>\\r\\n                                </button></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"panel-footer panel-default pager\\\">\\r\\n                    <ul class=\\\"pagination justify-content-center\\\">\\r\\n                        <li [class.disabled]=\\\"1==currentPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(1)\\\" class=\\\"page-link\\\">«</a>\\r\\n                        </li>\\r\\n                        <li [class.disabled]=\\\"1==currentPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(currentPage-1)\\\" class=\\\"page-link\\\">‹</a>\\r\\n                        </li>\\r\\n                        <li [class.active]=\\\"p==currentPage\\\" class=\\\"page-item\\\" *ngFor=\\\" let p of pages\\\">\\r\\n                            <a class=\\\"page-link\\\" (click)=\\\"setPage(p)\\\">{{p}}</a>\\r\\n                        </li>\\r\\n                        <li [class.disabled]=\\\"currentPage==lastPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(currentPage+1)\\\" class=\\\"page-link\\\">›</a>\\r\\n                        </li>\\r\\n                        <li [class.disabled]=\\\"currentPage==lastPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(lastPage)\\\" class=\\\"page-link\\\">»</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<ngx-loading [show]=\\\"loading\\\" [config]=\\\"\\\"></ngx-loading>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { CandidateDto } from \"../CandidateDto\";\r\nimport { CandidatsService } from \"../../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { OriginesService } from \"../../../services/administrationService/origines.service\";\r\nimport { CompetencesService } from \"../../../services/administrationService/competences.service\";\r\nimport { TechnologieService } from \"../../../services/administrationService/TechnologieService\";\r\nimport { HelperService } from \"../../../helper/helper.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { RegionService } from \"../../../services/administrationService/region.service\";\r\nimport { Region } from \"../../../models/region\";\r\n\r\n@Component({\r\n  selector: 'ngbd-dropdown-basic',\r\n  templateUrl: 'listeCandidatArelancer.component.html',\r\n  \r\n})\r\nexport class listeCandidatArelancerComponent implements OnInit {\r\n\r\n  public loading = false;\r\n  technologies=[]\r\n  origines=[]\r\n  competences=[]\r\n  candidats: any[];\r\n  refDisponibilite = this.helperService.buildDisponibiliteArray();\r\n  region: Array<Region> = [];\r\n  columns =[\r\n    {\r\n      data:'nom',\r\n      title:'Nom',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'prenom',\r\n      title:'Prenom',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'numeroTel',\r\n      title:'N° Téléphone',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'email',\r\n      title:'Email',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'dateInscription',\r\n      title:'Date inscription',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'technologie',\r\n      title:'Type de profil',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'region',\r\n      title:'Région',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'nomSourceur',\r\n      title:'Nom sourceur',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'prenomSourceur',\r\n      title:'Prénom sourceur',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'disponibilite',\r\n      title:'Disponible',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'dateRelance',\r\n      title:'Date relance',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'nomCharge',\r\n      title:'Nom charge',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'prenomCharge',\r\n      title:'Prénom charge',\r\n      visible:true\r\n    }\r\n  ]\r\n  pages = [];\r\n  size = 10;\r\n  currentPage = 1;\r\n  maxlenght = 0;\r\n  lastPage = 1;\r\n  condidat: CandidateDto = new CandidateDto();\r\n\r\n  constructor(\r\n    private router:Router,\r\n    private candidatsService:CandidatsService,\r\n    private helperService:HelperService,\r\n    private notifierService:NotifierService,\r\n    private technologiesService: TechnologieService,\r\n    private regionService: RegionService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.rechercheCandidat();\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n  }\r\n  rechercheCandidat() {\r\n    this.loading=true;\r\n    this.currentPage = 1;\r\n    let callBack = (e)=>{\r\n      this.notifierService.notify(\"info\", \"Nombre Candidat : \" +  this.maxlenght)\r\n    }\r\n    this.doRechercheCandidat(callBack);\r\n   }\r\n\r\n   doRechercheCandidat(callBack?){\r\n    let page = (this.currentPage - 1) * this.size;\r\n    this.candidatsService.rechercheCandidatArelancer(this.condidat, page, this.size).subscribe(data => {\r\n      this.maxlenght = data.total;\r\n      this.candidats = data.results;\r\n      this.lastPage = Math.ceil(this.maxlenght / this.size)\r\n      this.pages = this.helperService.generatePages(this.currentPage, this.lastPage);\r\n      this.loading=false;\r\n      if(callBack) callBack();\r\n    },error=>{\r\n      this.loading=false\r\n    })\r\n   }\r\n\r\n   reset() {\r\n    this.condidat.nom = null;\r\n    this.condidat.prenom = null;\r\n    this.condidat.numeroTel = null;\r\n    this.condidat.email = null;\r\n    this.condidat.dateInscription = null;\r\n    this.condidat.technologie = null;\r\n    this.condidat.nomSourceur = null;\r\n    this.condidat.prenomSourceur = null;\r\n    this.condidat.nomCharge = null;\r\n    this.condidat.prenomCharge = null;\r\n    this.condidat.disponibilite = null;\r\n    this.condidat.region = null;\r\n    this.condidat.dateRelance = null;\r\n    this.condidat.dateDebut = null;\r\n    this.condidat.dateFin = null;\r\n    this.rechercheCandidat();\r\n  }\r\n\r\n  \r\n  setPage(p) {\r\n    this.loading=true;\r\n    this.currentPage = p;\r\n    this.pages = this.helperService.generatePages(this.currentPage, this.lastPage)\r\n    this.doRechercheCandidat();\r\n  }\r\n  downloadCV(candidat){\r\n    this.candidatsService.getCvCandidats(candidat).subscribe(res => {\r\n      let file = res;\r\n        var url = window.URL.createObjectURL(file.data);\r\n        var a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.setAttribute('style', 'display: none');\r\n        a.href = url;\r\n        a.download =file.filename;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        a.remove(); // remove the element     \r\n       \r\n    })\r\n  }\r\n\r\n  openDetails(candidat){\r\n    this.router.navigate([\"/candidats/details/\"+candidat.id]);\r\n  }\r\n\r\n  codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.regionService.completeRegion(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.region = [...  this.region, element]\r\n        });\r\n      })\r\n    else this.region = []\r\n  }\r\n  private updateDateRelance(date: Date) {\r\n    this.condidat.dateRelance = date\r\n  }\r\n\r\n  /*relanceHandleChange(event) {\r\n    if (this.condidat.relancer == true) {\r\n      this.condidat.dateRelance = undefined\r\n    }\r\n  }*/\r\n}\r\n","module.exports = \"a.first::after {\\r\\n  content:'...'\\r\\n}\\r\\n\\r\\na.last::before {\\r\\n  content:'...'\\r\\n}\\r\\n\\r\\n.loadingCustom{\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  margin-bottom: 1.5rem;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <form #rechercheForm=\\\"ngForm\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <label style=\\\"font-weight:bold;color:#546E7A;\\\">Recherche</label>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Nom:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nom\\\" [(ngModel)]=\\\"condidat.nom\\\" id=\\\"nom\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Prénom :</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"numeroTel\\\" style=\\\"font-weight:bold\\\">N° téléphone:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.numeroTel\\\"\\r\\n                                    id=\\\"numeroTel\\\" [textMask]=\\\"{mask: mask}\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"email\\\" style=\\\"font-weight:bold\\\">Email:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"condidat.email\\\" id=\\\"email\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"dateInscription\\\" style=\\\"font-weight:bold\\\">Date Inscription:</label>\\r\\n                               \\r\\n\\r\\n                                    <input  [owlDateTimeFilter]=\\\"dateDateFilter\\\"\\r\\n                                    [owlDateTimeTrigger]=\\\"dateInscription\\\" [owlDateTime]=\\\"dateInscription\\\" class=\\\"form-control\\\"\\r\\n                                    name=\\\"dateInscription\\\" [(ngModel)]=\\\"condidat.dateInscription\\\" id=\\\"dateInscription\\\">\\r\\n                                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dateInscription></owl-date-time>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"profil\\\" style=\\\"font-weight:bold\\\">Type de profil:</label>\\r\\n                                <select [(ngModel)]=\\\"condidat.technologie\\\" name=\\\"profil\\\" class=\\\"form-control input-sm\\\" id=\\\"profil\\\">\\r\\n                                    <option value=\\\"\\\">-- Sélectionner --</option>\\r\\n                                    <option *ngFor=\\\"let tech of technologies\\\" [value]=\\\"tech.libelle\\\">{{ tech.libelle }}</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"nomSourceur\\\" style=\\\"font-weight:bold\\\">Nom Sourceur :</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nomSourceur\\\" [(ngModel)]=\\\"condidat.nomSourceur\\\"\\r\\n                                    id=\\\"nomSourceur\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenomSourceur\\\" style=\\\"font-weight:bold\\\">Prenom Sourceur :</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenomSourceur\\\" [(ngModel)]=\\\"condidat.prenomSourceur\\\"\\r\\n                                    id=\\\"prenomSourceur\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Region:</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"region\\\" [(ngModel)]=\\\"condidat.region\\\" id=\\\"region\\\">\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"form-col-form-label\\\" for=\\\"region\\\" style=\\\"font-weight:bold\\\">Fraicheur CV:</label>\\r\\n                                <select [(ngModel)]=\\\"condidat.critereRecheche\\\" name=\\\"region\\\" class=\\\"form-control input-sm\\\">\\r\\n                                    <option selected value=\\\"\\\">-- Sélectionner --</option>\\r\\n                                    <option value=\\\"1\\\">Moins 1 mois</option>\\r\\n                                    <option value=\\\"2\\\">Entre 1 et 6 mois</option>\\r\\n                                    <option value=\\\"3\\\">Plus de 6 mois</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n\\r\\n                    <div class=\\\"row align-items-center\\\">\\r\\n                        <div class=\\\"col-2\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"rechercheCandidat()\\\">Rechercher</button>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-2\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"reset()\\\" style=\\\"float: right;\\\">Réinitialiser</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Liste des nouveaux candidats</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div autoClose=\\\"false\\\" class=\\\"btn-group\\\" style=\\\"float: right;\\\" dropdown>\\r\\n                    <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\r\\n                        Colonnes <span class=\\\"caret\\\"></span>\\r\\n                    </button>\\r\\n                    <ul (click)=\\\"$event.stopPropagation()\\\" class=\\\"light\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n                            <li role=\\\"menuitem\\\" *ngFor=\\\"let col of columns\\\"> <a class=\\\"dropdown-item\\\"><input [(ngModel)]=\\\"col.visible\\\" type=\\\"checkbox\\\" />{{col.title}}</a></li>\\r\\n                       \\r\\n                    </ul>\\r\\n                </div>\\r\\n                <table class=\\\"table  table-striped\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th [hidden]=\\\"!col.visible\\\" *ngFor=\\\"let col of columns\\\"> {{col.title }}</th>\\r\\n                            <th style=\\\"width: 120px\\\">ACTION</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let c of candidats\\\">\\r\\n                            <td [hidden]=\\\"!col.visible\\\" *ngFor=\\\"let col of columns\\\"> {{c[col.data] }}</td>\\r\\n                            <td style=\\\"width: 120px\\\"><button type=\\\"button\\\" (click)=\\\"openDetails(c)\\\" class=\\\"btn btn-outline-primary btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" style=\\\"margin-left: 5px\\\" (click)=\\\"downloadCV(c)\\\" class=\\\"btn btn-outline-info btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-download\\\"></i>\\r\\n                                </button></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <ul class=\\\"pagination justify-content-center\\\">\\r\\n                    <li [class.disabled]=\\\"1==currentPage\\\" class=\\\"page-item\\\">\\r\\n                        <a (click)=\\\"setPage(1)\\\" class=\\\"page-link\\\">«</a>\\r\\n                    </li>\\r\\n                    <li [class.disabled]=\\\"1==currentPage\\\" class=\\\"page-item\\\">\\r\\n                        <a (click)=\\\"setPage(currentPage-1)\\\" class=\\\"page-link\\\">‹</a>\\r\\n                    </li>\\r\\n                    <li [class.active]=\\\"p==currentPage\\\" class=\\\"page-item\\\" *ngFor=\\\" let p of pages\\\">\\r\\n                        <a class=\\\"page-link\\\" (click)=\\\"setPage(p)\\\">{{p}}</a>\\r\\n                    </li>\\r\\n                    <li [class.disabled]=\\\"currentPage==lastPage\\\" class=\\\"page-item\\\">\\r\\n                        <a (click)=\\\"setPage(currentPage+1)\\\" class=\\\"page-link\\\">›</a>\\r\\n                    </li>\\r\\n                    <li [class.disabled]=\\\"currentPage==lastPage\\\" class=\\\"page-item\\\">\\r\\n                        <a (click)=\\\"setPage(lastPage)\\\" class=\\\"page-link\\\">»</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <!--<ngx-loading [show]=\\\"loading\\\" [config]=\\\"\\\"></ngx-loading>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { CandidateDto } from \"../CandidateDto\";\r\nimport { CandidatsService } from \"../../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { OriginesService } from \"../../../services/administrationService/origines.service\";\r\nimport { CompetencesService } from \"../../../services/administrationService/competences.service\";\r\nimport { TechnologieService } from \"../../../services/administrationService/TechnologieService\";\r\nimport { HelperService } from \"../../../helper/helper.service\";\r\nimport { ngxLoadingAnimationTypes } from \"ngx-loading\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'ngbd-dropdown-basic',\r\n  templateUrl: 'listeNouveauxCandidats.component.html',\r\n  styleUrls: [\"listeNouveauxCandidats.component.css\"]\r\n\r\n})\r\nexport class listeNouveauxCandidatsComponent implements OnInit {\r\n\r\n\r\n  \r\n  columns =[\r\n    {\r\n      data:'nom',\r\n      title:'Nom',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'prenom',\r\n      title:'Prenom',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'numeroTel',\r\n      title:'N° Téléphone',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'email',\r\n      title:'Email',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'dateInscription',\r\n      title:'Date inscription',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'technologie',\r\n      title:'Type de profil',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'region',\r\n      title:'Région',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'nomSourceur',\r\n      title:'Nom sourceur',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'prenomSourceur',\r\n      title:'Prénom sourceur',\r\n      visible:true\r\n    }\r\n  ]\r\n\r\n\r\n  public loading = false;\r\n  mask: any[] = [/\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/];\r\n  technologies = []\r\n  origines = []\r\n  competences = []\r\n  candidats: any[];\r\n\r\n  pages = [];\r\n  size = 10;\r\n  currentPage = 1;\r\n  maxlenght = 0;\r\n  lastPage = 1;\r\n\r\n  condidat: CandidateDto = new CandidateDto();\r\n  CritereRecheche: [\r\n    { value: '1', text: 'Moins 1 mois' },\r\n    { value: '2', text: 'Entre 1 et 6 mois' },\r\n    { value: '3', text: 'Plus de 6 mois' }\r\n  ];\r\n\r\n  constructor(private router:Router, private technologiesService: TechnologieService,\r\n    private candidatsService: CandidatsService, private helperService: HelperService,\r\n    private notifierService: NotifierService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.rechercheCandidat();\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n  }\r\n\r\n  rechercheCandidat() {\r\n    this.loading=true;\r\n    this.currentPage = 1;\r\n    let callBack = (e)=>{\r\n      this.notifierService.notify(\"info\", \"Nombre Candidat : \" +  this.maxlenght)\r\n    }\r\n    this.doRechercheCandidat(callBack);\r\n\r\n  }\r\n\r\n  doRechercheCandidat(callBack?) {\r\n    let page = (this.currentPage - 1) * this.size;\r\n    this.candidatsService.rechercheNouveauxcandidats(this.condidat, page, this.size).subscribe(data => {\r\n      this.maxlenght = data.total;\r\n      this.candidats = data.results;\r\n      this.lastPage = Math.ceil(this.maxlenght / this.size)\r\n      this.pages = this.helperService.generatePages(this.currentPage, this.lastPage);\r\n      this.loading=false;\r\n      if(callBack) callBack();\r\n    },error=>{\r\n      this.loading=false\r\n    })\r\n  }\r\n\r\n  reset() {\r\n    this.condidat.nom = null;\r\n    this.condidat.prenom = null;\r\n    this.condidat.numeroTel = null;\r\n    this.condidat.email = null;\r\n    this.condidat.dateInscription = null;\r\n    this.condidat.technologie = null;\r\n    this.condidat.nomSourceur = null;\r\n    this.condidat.prenomSourceur = null;\r\n    this.condidat.region = null;\r\n    this.condidat.dateInscription = null;\r\n    this.condidat.critereRecheche = null;\r\n    this.rechercheCandidat();\r\n  }\r\n\r\n  setPage(p) {\r\n    this.loading=true;\r\n    this.currentPage = p;\r\n    this.pages = this.helperService.generatePages(this.currentPage, this.lastPage)\r\n    this.doRechercheCandidat();\r\n  }\r\n\r\n\r\n  downloadCV(candidat){\r\n    this.candidatsService.getCvCandidats(candidat).subscribe(res => {\r\n      let file = res;\r\n        var url = window.URL.createObjectURL(file.data);\r\n        var a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.setAttribute('style', 'display: none');\r\n        a.href = url;\r\n        a.download =file.filename;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        a.remove(); // remove the element     \r\n       \r\n    })\r\n  }\r\n\r\n  openDetails(candidat){\r\n    this.router.navigate([\"/candidats/details/\"+candidat.id]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Recherche</label>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Nom:</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nom\\\" [(ngModel)]=\\\"condidat.nom\\\" id=\\\"nom\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Prénom :</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.prenom\\\" id=\\\"prenom\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"numeroTel\\\" style=\\\"font-weight:bold\\\">N° téléphone:</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenom\\\" [(ngModel)]=\\\"condidat.numeroTel\\\" id=\\\"numeroTel\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"email\\\" style=\\\"font-weight:bold\\\">Email:</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"condidat.email\\\" id=\\\"email\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nom\\\" style=\\\"font-weight:bold\\\">Type de profil:</label>\\r\\n                                <select [(ngModel)]=\\\"condidat.technologie\\\" name=\\\"profil\\\" class=\\\"form-control input-sm\\\">\\r\\n                                    <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                                    <option *ngFor=\\\"let tech of technologies\\\" [value]=\\\"tech.libelle\\\">{{ tech.libelle }}</option>\\r\\n                                </select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"dateEntretien\\\" style=\\\"font-weight:bold\\\">Date entretien:</label>\\r\\n                                <input  [owlDateTimeFilter]=\\\"dateEntretienDateFilter\\\"\\r\\n                                    [owlDateTimeTrigger]=\\\"dateEntretien\\\" [owlDateTime]=\\\"dateEntretien\\\" class=\\\"form-control\\\"\\r\\n                                    name=\\\"dateEntretien\\\" [(ngModel)]=\\\"condidat.dateEntretien\\\" id=\\\"dateEntretien\\\">\\r\\n                                    <owl-date-time [pickerType]=\\\"'calendar'\\\" #dateEntretien></owl-date-time>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"profil\\\" style=\\\"font-weight:bold\\\">Lieu entretien:</label>\\r\\n                            <select [(ngModel)]=\\\"condidat.lieuEntretien\\\" class=\\\"form-control input-sm\\\">\\r\\n                                <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                                <option *ngFor=\\\"let lieu of lieux\\\" [value]=\\\"lieu.libelle\\\">{{ lieu.libelle }}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"region\\\" style=\\\"font-weight:bold\\\">Disponibilité:</label>\\r\\n                            <select [(ngModel)]=\\\"condidat.disponibilite\\\" name=\\\"disponibilite\\\" class=\\\"form-control\\\"\\r\\n                            id=\\\"disponibilite\\\">\\r\\n                            <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                            <option *ngFor=\\\"let refDis of refDisponibilite\\\" [value]=\\\"refDis.value\\\">{{refDis.label}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Region:</label>\\r\\n                            <ng-select aria-required=\\\"\\\"  \\r\\n                            id=\\\"region\\\" [items]=\\\"region\\\" (search)=\\\"codePostaleOnSearch($event)\\\" \\r\\n                                [ngModel]=\\\"condidat.region\\\" (ngModelChange)=\\\"condidat.region = $event\\\" name=\\\"region\\\">\\r\\n                               <ng-option *ngFor=\\\"let reg of region\\\" [value]=\\\"reg.code\\\">{{reg.code}}</ng-option>\\r\\n\\r\\n                           </ng-select>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenom\\\" style=\\\"font-weight:bold\\\">Date Relance:</label>\\r\\n                          <month-year-picker (changed)=\\\"updateDateRelance($event)\\\" [(ngModel)]=\\\"condidat.dateRelance\\\"></month-year-picker>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"nomSourceur\\\" style=\\\"font-weight:bold\\\">Nom Sourceur :</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nomSourceur\\\" [(ngModel)]=\\\"condidat.nomSourceur\\\"\\r\\n                                id=\\\"nomSourceur\\\">\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"prenomSourceur\\\" style=\\\"font-weight:bold\\\">Prenom Sourceur :</label>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenomSourceur\\\" [(ngModel)]=\\\"condidat.prenomSourceur\\\"\\r\\n                                id=\\\"prenomSourceur\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\" for=\\\"nomSourceur\\\" style=\\\"font-weight:bold\\\">Nom charge :</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nomSourceur\\\" [(ngModel)]=\\\"condidat.nomCharge\\\"\\r\\n                                        id=\\\"nomSourceur\\\">\\r\\n        \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-2\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label class=\\\"form-col-form-label\\\" for=\\\"prenomSourceur\\\" style=\\\"font-weight:bold\\\">Prenom charge :</label>\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"prenomSourceur\\\" [(ngModel)]=\\\"condidat.prenomCharge\\\"\\r\\n                                        id=\\\"prenomSourceur\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-sm-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label class=\\\"form-col-form-label\\\" for=\\\"statut\\\" style=\\\"font-weight:bold\\\">Statut :</label>\\r\\n                                        <select [(ngModel)]=\\\"condidat.statut\\\" name=\\\"statut\\\" class=\\\"form-control\\\"\\r\\n                                        id=\\\"statut\\\">\\r\\n                                        <option [ngValue]=\\\"undefined\\\">--Séléctionner--</option>\\r\\n                                        <option *ngFor=\\\"let refSt of refStatut\\\" [value]=\\\"refSt.value\\\">{{refSt.label}}</option>\\r\\n                                      </select>\\r\\n                                    </div>\\r\\n                           </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n\\r\\n                <div class=\\\"row align-items-center\\\">\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"rechercheCandidat()\\\">Rechercher</button>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-2\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"reset()\\\" style=\\\"float: right;\\\">Réinitialiser</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Liste des nouveaux candidats</label>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"form-group row\\\" style=\\\"float: right\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div autoClose=\\\"false\\\" class=\\\"btn-group\\\" style=\\\"float: right;\\\" dropdown>\\r\\n                                <button dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\">\\r\\n                                    Colonnes <span class=\\\"caret\\\"></span>\\r\\n                                </button>\\r\\n                                <ul (click)=\\\"$event.stopPropagation()\\\" class=\\\"light\\\" *dropdownMenu class=\\\"dropdown-menu\\\"\\r\\n                                    role=\\\"menu\\\">\\r\\n                                    <li role=\\\"menuitem\\\" *ngFor=\\\"let col of columns\\\"> <a class=\\\"dropdown-item\\\"><input\\r\\n                                                [(ngModel)]=\\\"col.visible\\\" type=\\\"checkbox\\\" />{{col.title}}</a></li>\\r\\n\\r\\n                                </ul>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <table class=\\\"table  table-striped table-responsive\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th [hidden]=\\\"!col.visible\\\" *ngFor=\\\"let col of columns\\\"> {{col.title }}</th>\\r\\n                            <th style=\\\"width: 100px\\\">ACTION</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let c of candidats| paginate: { itemsPerPage:10, currentPage: p }\\\">\\r\\n                            <td [hidden]=\\\"!col.visible\\\" *ngFor=\\\"let col of columns\\\"> {{c[col.data] }}</td>\\r\\n\\r\\n                            <td style=\\\"width: 100px\\\"><button type=\\\"button\\\" (click)=\\\"openDetails(c)\\\" class=\\\"btn btn-outline-primary btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" style=\\\"margin-left: 5px\\\" (click)=\\\"downloadCV(c)\\\" class=\\\"btn btn-outline-info btn-sm\\\">\\r\\n                                    <i class=\\\"fa fa-download\\\"></i>\\r\\n                                </button></td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\"panel-footer panel-default pager\\\">\\r\\n                    <ul class=\\\"pagination justify-content-center\\\">\\r\\n                        <li [class.disabled]=\\\"1==currentPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(1)\\\" class=\\\"page-link\\\">«</a>\\r\\n                        </li>\\r\\n                        <li [class.disabled]=\\\"1==currentPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(currentPage-1)\\\" class=\\\"page-link\\\">‹</a>\\r\\n                        </li>\\r\\n                        <li [class.active]=\\\"p==currentPage\\\" class=\\\"page-item\\\" *ngFor=\\\" let p of pages\\\">\\r\\n                            <a class=\\\"page-link\\\" (click)=\\\"setPage(p)\\\">{{p}}</a>\\r\\n                        </li>\\r\\n                        <li [class.disabled]=\\\"currentPage==lastPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(currentPage+1)\\\" class=\\\"page-link\\\">›</a>\\r\\n                        </li>\\r\\n                        <li [class.disabled]=\\\"currentPage==lastPage\\\" class=\\\"page-item\\\">\\r\\n                            <a (click)=\\\"setPage(lastPage)\\\" class=\\\"page-link\\\">»</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!--<ngx-loading [show]=\\\"loading\\\" [config]=\\\"\\\"></ngx-loading>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { CandidateDto } from \"../CandidateDto\";\r\nimport { CandidatsService } from \"../../../services/candidats.service\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { OriginesService } from \"../../../services/administrationService/origines.service\";\r\nimport { CompetencesService } from \"../../../services/administrationService/competences.service\";\r\nimport { TechnologieService } from \"../../../services/administrationService/TechnologieService\";\r\nimport { LieuxService } from \"../../../services/administrationService/Lieux.service.\";\r\nimport { HelperService } from \"../../../helper/helper.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CodePostalService } from \"../../../services/administrationService/code-postal.service\";\r\nimport { CodePostal } from \"../../../models/CodePostal\";\r\nimport { RegionService } from \"../../../services/administrationService/region.service\";\r\nimport { Region } from \"../../../models/region\";\r\n\r\n@Component({\r\n  selector: 'ngbd-dropdown-basic',\r\n  templateUrl: 'listeTousCandidats.component.html',\r\n  \r\n})\r\nexport class listeTousCandidatsComponent implements OnInit {\r\n\r\n  columns =[\r\n    {\r\n      data:'nom',\r\n      title:'Nom',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'prenom',\r\n      title:'Prenom',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'numeroTel',\r\n      title:'N° Téléphone',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'email',\r\n      title:'Email',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'dateInscription',\r\n      title:'Date inscription',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'statut',\r\n      title:'Statut',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'dateRelance',\r\n      title:'Date relance',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'technologie',\r\n      title:'Type de profil',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'region',\r\n      title:'Région',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'nomSourceur',\r\n      title:'Nom sourceur',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'prenomSourceur',\r\n      title:'Prénom sourceur',\r\n      visible:false\r\n    },\r\n    {\r\n      data:'dateEntretien',\r\n      title:'Date entretien',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'lieuEntretien',\r\n      title:'Lieu entretienr',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'disponibilite',\r\n      title:'Disponible',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'nomCharge',\r\n      title:'Nom charge',\r\n      visible:true\r\n    },\r\n    {\r\n      data:'prenomCharge',\r\n      title:'Prénom charge',\r\n      visible:true\r\n    }\r\n  ]\r\n\r\n  public loading = false;\r\n  technologies=[]\r\n  lieux=[]\r\n  origines=[]\r\n  competences=[]\r\n  candidats: any[];\r\n\r\n  pages = [];\r\n  size = 10;\r\n  currentPage = 1;\r\n  maxlenght = 0;\r\n  lastPage = 1;\r\n  region: Array<Region> = [];\r\n  refStatut = this.helperService.buildStatutArray();\r\n  refDisponibilite = this.helperService.buildDisponibiliteArray();\r\n  condidat: CandidateDto = new CandidateDto();\r\n\r\n  constructor(private router:Router,private candidatsService:CandidatsService,\r\n    private notifierService:NotifierService, private technologiesService: TechnologieService,\r\n    private lieuxService:LieuxService,private helperService:HelperService, private regionService: RegionService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.rechercheCandidat()\r\n    this.lieuxService.findAllLieux().subscribe(data=>{\r\n      this.lieux = data;\r\n    })\r\n    this.technologiesService.findAllTechnologies().subscribe(data => {\r\n      this.technologies = data;\r\n    })\r\n  } \r\n\r\n  rechercheCandidat() {\r\n    this.loading=true;\r\n    this.currentPage = 1;\r\n    let callBack = (e)=>{\r\n      this.notifierService.notify(\"info\", \"Nombre Candidat : \" +  this.maxlenght)\r\n    }\r\n    this.doRechercheCandidat(callBack);\r\n   }\r\n\r\n   doRechercheCandidat(callBack?){\r\n    let page = (this.currentPage - 1) * this.size;\r\n    this.candidatsService.rechercheTouscandidats(this.condidat, page, this.size).subscribe(data => {\r\n      this.maxlenght = data.total;\r\n      this.candidats = data.results;\r\n      this.lastPage = Math.ceil(this.maxlenght / this.size)\r\n      this.pages = this.helperService.generatePages(this.currentPage, this.lastPage);\r\n      this.loading=false;\r\n      if(callBack) callBack();\r\n    },error=>{\r\n      this.loading=false\r\n    })\r\n   }\r\n\r\n   reset() {\r\n    this.condidat.nom = null;\r\n    this.condidat.prenom = null;\r\n    this.condidat.numeroTel = null;\r\n    this.condidat.email = null;\r\n    this.condidat.dateEntretien = null;\r\n    this.condidat.technologie = null;\r\n    this.condidat.nomSourceur = null;\r\n    this.condidat.prenomSourceur = null;\r\n    this.condidat.region = null;\r\n    this.condidat.dateRelance=null;\r\n    this.condidat.statut=null;\r\n    this.rechercheCandidat();\r\n  }\r\n\r\n  \r\n  setPage(p) {\r\n    this.loading=true;\r\n    this.currentPage = p;\r\n    this.pages = this.helperService.generatePages(this.currentPage, this.lastPage)\r\n    this.doRechercheCandidat();\r\n  }\r\n\r\n  downloadCV(candidat){\r\n    this.candidatsService.getCvCandidats(candidat).subscribe(res => {\r\n      let file = res;\r\n        var url = window.URL.createObjectURL(file.data);\r\n        var a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.setAttribute('style', 'display: none');\r\n        a.href = url;\r\n        a.download =file.filename;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        a.remove(); // remove the element     \r\n       \r\n    })\r\n  }\r\n\r\n  openDetails(candidat){\r\n    this.router.navigate([\"/candidats/details/\"+candidat.id]);\r\n  }\r\n\r\n  codePostaleOnSearch(value) {\r\n    if (value != \"\")\r\n      this.regionService.completeRegion(value).subscribe(data => {\r\n        data.forEach(element => {\r\n          this.region = [...  this.region, element]\r\n        });\r\n      })\r\n    else this.region = []\r\n  }\r\n\r\n  private updateDateRelance(date: Date) {\r\n    this.condidat.dateRelance = date\r\n  }\r\n}\r\n"],"sourceRoot":""}