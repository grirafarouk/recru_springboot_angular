{"version":3,"sources":["webpack:///./src/app/models/SourceurReporting.ts","webpack:///./src/app/services/reportingSourceurService/ReportingSourceur/reportingSourceur.service.ts","webpack:///./src/app/views/candidats/reportingSourceur/reportingSourceur-routing.module.ts","webpack:///./src/app/views/candidats/reportingSourceur/reportingSourceur.component.css","webpack:///./src/app/views/candidats/reportingSourceur/reportingSourceur.component.html","webpack:///./src/app/views/candidats/reportingSourceur/reportingSourceur.component.ts","webpack:///./src/app/views/candidats/reportingSourceur/reportingSourceur.module.ts"],"names":[],"mappings":"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","file":"views-candidats-reportingSourceur-reportingSourceur-module.js","sourcesContent":["export class SourceurReporting {\r\n    idUser: number;\r\n    nomSourceur:string;\r\n\t nbrTotal:number;\r\n\t nbrDsipo:number;\r\n\t nbrHors:number;\r\n\t autre:number;;\r\n\t taux:number;;\r\n\t taux_hors:number;;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BACK_END_URL } from '../../../helper/application.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportingSourceurService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n  \r\n  findReportingSourceur(): Observable<any> {\r\n    return this.httpClient.get(BACK_END_URL + \"/ReportingSourceur/listeReporting\");\r\n  }\r\n  findAllSourceur(): Observable<any> {\r\n    return this.httpClient.get(BACK_END_URL + \"/ReportingSourceur/listeReportingSourceur\");\r\n  }\r\n  getChartTechnologies(): Observable<any>  {\r\n    return this.httpClient.get(BACK_END_URL+\"/ReportingSourceur/mapTechnologieParSourceur\");\r\n  }\r\n  rechercheReportingSourceur(sourceur): Observable<any> {\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.httpClient.post(BACK_END_URL + \"/ReportingSourceur/RechercheReportingSourceur\" ,sourceur, httpOptions);\r\n  }\r\n\r\n  recherchemapTechnologieParSourceur (sourceur) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    return this.httpClient.post(BACK_END_URL + \"/ReportingSourceur/RecherchemapTechnologieParSourceur\", sourceur, httpOptions);\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes,\r\n     RouterModule } from '@angular/router';\r\nimport { reportingSourceurComponent } from './reportingSourceur.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: reportingSourceurComponent,\r\n    data: {\r\n      title: 'reportingSourceur'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class reportingSourceurRoutingModule {}\r\n","module.exports = \".card {\\r\\n    margin-bottom: 1.5rem;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                            <label style=\\\"font-weight:bold;color:#546E7A;\\\">Recherche</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row\\\">      \\r\\n                                    <div class=\\\"col-sm-2\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"profil\\\" style=\\\"font-weight:bold\\\">Sourceur :</label>\\r\\n                                                <select [(ngModel)]=\\\"sourceur.idUser\\\"  class=\\\"form-control input-sm\\\">\\r\\n                                                    <option value=\\\"\\\">-- SÃ©lectionner --</option>\\r\\n                                                    <option *ngFor=\\\"let sr of ListSourceur\\\" [value]=\\\"sr.idUser\\\">{{ sr.nomSourceur }}</option>\\r\\n                                                  </select>\\r\\n                                            </div>\\r\\n                                    </div>\\r\\n                                <div class=\\\"col-sm-2\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                      <label for=\\\"dateDebut\\\" style=\\\"font-weight:bold\\\">Date debut</label>\\r\\n                                      <input  \\r\\n                                        [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\" class=\\\"form-control\\\" name=\\\"dateDebut\\\"\\r\\n                                        id=\\\"dateDebut\\\">\\r\\n                                      <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt></owl-date-time>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                                  <div class=\\\"col-sm-2\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                          <label for=\\\"dateFin\\\" style=\\\"font-weight:bold\\\">Date fin</label>\\r\\n                                          <input  \\r\\n                                            [owlDateTimeTrigger]=\\\"dtdateFin\\\" [owlDateTime]=\\\"dtdateFin\\\" class=\\\"form-control\\\" name=\\\"dateFin\\\"\\r\\n                                             id=\\\"dateFin\\\">\\r\\n                                          <owl-date-time [pickerType]=\\\"'calendar'\\\" #dtdateFin></owl-date-time>\\r\\n                                        </div>\\r\\n                                      </div>\\r\\n                                      \\r\\n                                    \\r\\n                                          \\r\\n                                            \\r\\n                                            \\r\\n                                           \\r\\n                                </div>\\r\\n                               \\r\\n                    </div>\\r\\n                    <div class=\\\"card-footer\\\">\\r\\n\\r\\n                            <div class=\\\"row align-items-center\\\">\\r\\n                                <div class=\\\"col-2\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"rechercherReportingSourceur()\\\">Rechercher</button>\\r\\n                                </div>\\r\\n    \\r\\n                                <div class=\\\"col-2\\\">\\r\\n                                    <button  type=\\\"button\\\" class=\\\"btn btn-block btn-primary\\\" (click)=\\\"reset()\\\" style=\\\"float: right;\\\">RÃ©initialiser</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"card\\\"> \\r\\n                        <div class=\\\"card-header\\\">\\r\\n                                <label style=\\\"font-weight:bold;color:#546E7A;\\\">Reporting sourceur</label>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                        <div class=\\\"card-body\\\">\\r\\n                                                <div class=\\\"card\\\" style=\\\"height: 95% !important;\\\">\\r\\n                                                        <div class=\\\"card-header\\\">\\r\\n                                                          <label style=\\\"font-weight:bold;color:#546E7A;\\\">RÃ©partition des statuts</label>\\r\\n                                                        </div>\\r\\n                                                        <div class=\\\"card-body\\\" >\\r\\n                                                            <canvas baseChart class=\\\"chart\\\"\\r\\n                                                            [data]=\\\"pieChart2Data\\\"\\r\\n                                                            [labels]=\\\"pieChart2Labels\\\"\\r\\n                                                            [colors]=\\\"Chart2Colors\\\"\\r\\n                                                            [chartType]=\\\"pieChartType\\\"></canvas>\\r\\n                                                        </div>\\r\\n                                                      </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"card\\\" style=\\\"height: 95% !important;\\\">\\r\\n                                    <div class=\\\"card-header\\\">\\r\\n                                      <label style=\\\"font-weight:bold;color:#546E7A;\\\">RÃ©partition des technologies</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"card-body\\\" >\\r\\n                                        <canvas baseChart class=\\\"chart\\\"\\r\\n                                        [data]=\\\"pieChartData\\\"\\r\\n                                        [labels]=\\\"pieChartLabels\\\"\\r\\n                                        [colors]=\\\"ChartColors\\\"\\r\\n                                        [chartType]=\\\"pieChartType\\\"></canvas>\\r\\n                                    </div>\\r\\n                                  </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n               \\r\\n                  </div>\\r\\n                </div>\\r\\n        <div class=\\\"card\\\"> \\r\\n                         \\r\\n            <div class=\\\"card-header\\\">\\r\\n                    <label style=\\\"font-weight:bold;color:#546E7A;\\\">Reporting sourceur</label>\\r\\n            </div>\\r\\n         \\r\\n                \\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <table class=\\\"table table-bordered table-striped\\\" >\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th>Sourceur</th>\\r\\n                        <th>Totale</th>\\r\\n                        <th>CV disponibles</th>\\r\\n                        <th>Hors cible</th>\\r\\n                        <th>Taux de satisfaction</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let rep of ListReporting| paginate: { itemsPerPage:10, currentPage: p }\\\">\\r\\n                        <td>{{rep.nomSourceur}}</td>\\r\\n                        <td>{{rep.nbrTotal}}</td>\\r\\n                        <td>{{rep.nbrDsipo}}</td>\\r\\n                        <td>{{rep.nbrHors}}</td>\\r\\n                        <td>{{rep.taux}}%</td>\\r\\n                        \\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                  <div class=\\\"panel-footer panel-default pager\\\">\\r\\n                    <pagination-controls (pageChange)=\\\"p =$event\\\"></pagination-controls>\\r\\n                  </div>\\r\\n                </div>\\r\\n          \\r\\n          </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { NotifierService } from \"angular-notifier\";\r\nimport { ReportingSourceurService } from \"../../../services/reportingSourceurService/ReportingSourceur/reportingSourceur.service\";\r\nimport { SourceurReporting } from \"../../../models/SourceurReporting\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'ngbd-dropdown-basic',\r\n  templateUrl: 'reportingSourceur.component.html',\r\n  styleUrls: [\"reportingSourceur.component.css\"]\r\n  \r\n})\r\nexport class reportingSourceurComponent implements OnInit {\r\n  \r\n  ListReporting=[]\r\n  ListSourceur=[]\r\n  pieChartData: number[] = [];\r\n  pieChartLabels: string[]=[];\r\n  pieChartType = 'pie';\r\n  ChartColors : any[]=[\r\n    {\r\n      backgroundColor:[\"#FF7360\",\"#6FC8CE\",\"gray\",\"#FFFCC4\",\"#B9E8E0\",\"#FFABF6\",\"#01FBBA\"]\r\n    }\r\n   ];\r\n   autresCv = null;\r\n   totalCVDisponible = null;\r\n   totalCVhorsCible = null;\r\n   pieChart2Data= [];\r\n   pieChart2Labels=[\"Autres\", \"CV disponibles\", \"CV hors cible\"];\r\n   Chart2Colors : any[]=[\r\n    {\r\n      backgroundColor:[\"#FF7360\",\"#6FC8CE\",\"gray\"]\r\n    }\r\n   ];\r\n   sourceur:SourceurReporting = new SourceurReporting();\r\n  constructor(private sanitizer: DomSanitizer,private reportingSourceur :ReportingSourceurService,\r\n    private notifierService:NotifierService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.reportingSourceur.findAllSourceur().subscribe(data=>{\r\n      this.ListSourceur = data;\r\n    })\r\n\r\n    this.reportingSourceur.findReportingSourceur().subscribe(data=>{\r\n      this.ListReporting = data;\r\n      for( let i=0; i<this.ListReporting.length; i++)\r\n      {      \r\n          this.autresCv = this.autresCv + this.ListReporting[i].autre,\r\n          this.totalCVDisponible = this.totalCVDisponible + this.ListReporting[i].nbrDsipo,\r\n          this.totalCVhorsCible = this.totalCVhorsCible + this.ListReporting[i].nbrHors\r\n      }\r\n      this.pieChart2Data=[this.autresCv, this.totalCVDisponible, this.totalCVhorsCible]\r\n    })\r\n \r\n    this.getChart();\r\n \r\n  }\r\n\r\n  rechercherReportingSourceur(sourceur){\r\n    this.autresCv = 0;\r\n    this.totalCVDisponible = 0;\r\n    this.totalCVhorsCible = 0;\r\n    this.reportingSourceur.rechercheReportingSourceur(this.sourceur).subscribe(data =>{\r\n      this.ListReporting = data;\r\n      for( let i=0; i<this.ListReporting.length; i++)\r\n      {      \r\n          this.autresCv = this.autresCv + this.ListReporting[i].autre,\r\n          this.totalCVDisponible = this.totalCVDisponible + this.ListReporting[i].nbrDsipo,\r\n          this.totalCVhorsCible = this.totalCVhorsCible + this.ListReporting[i].nbrHors\r\n      }\r\n      this.pieChart2Data=[this.autresCv, this.totalCVDisponible, this.totalCVhorsCible]\r\n    })\r\n\r\n    this.reportingSourceur.recherchemapTechnologieParSourceur(this.sourceur).subscribe(result =>{\r\n      this.pieChartData = Object.values(result);\r\n      for(var i=0;i<Object.keys(result).length;i++){\r\n        this.pieChartLabels[i]=Object.keys(result)[i];\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  private getChart(){\r\n    this.reportingSourceur.getChartTechnologies().subscribe(result => { \r\n      this.pieChartData = Object.values(result);\r\n      for(var i=0;i<Object.keys(result).length;i++){\r\n        this.pieChartLabels[i]=Object.keys(result)[i];\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n \r\n\r\n  reset(){\r\n    this.ngOnInit();\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { reportingSourceurComponent } from './reportingSourceur.component'\r\nimport { reportingSourceurRoutingModule } from './reportingSourceur-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DxTreeViewModule } from 'devextreme-angular';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport {NgxMaskModule} from 'ngx-mask';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    reportingSourceurRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    ButtonsModule.forRoot(),\r\n    DxTreeViewModule,\r\n    CommonModule ,\r\n    NgxPaginationModule,\r\n    NgxMaskModule.forRoot(),\r\n    TextMaskModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    NgSelectModule\r\n  ],\r\n  declarations: [  reportingSourceurComponent ]\r\n})\r\nexport class reportingSourceurModule { }\r\n"],"sourceRoot":""}